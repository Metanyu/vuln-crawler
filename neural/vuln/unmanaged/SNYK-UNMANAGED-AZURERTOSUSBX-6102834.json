{
    "CVSSv3": {
        "CVSS": "3.1",
        "attackVector": "PHYSICAL",
        "attackComplexity": "HIGH",
        "privilegesRequired": "NONE",
        "userInteraction": "REQUIRED",
        "scope": "CHANGED",
        "confidentiality": "HIGH",
        "integrity": "HIGH",
        "availability": "NONE"
    },
    "credit": [
        "Unknown"
    ],
    "cvssDetails": [
        {
            "assigner": "NVD",
            "cvssV3BaseScore": 9.8,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "NONE",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "HIGH",
                "integrity": "HIGH",
                "availability": "HIGH"
            },
            "severity": "critical"
        }
    ],
    "cvssScore": 6.7,
    "disclosureTime": "2023-12-05 01:45:34",
    "epssDetails": {
        "modelVersion": "v2023.03.01",
        "percentile": "0.12549",
        "probability": "0.00045"
    },
    "exploitMaturity": "Not Defined",
    "id": "SNYK-UNMANAGED-AZURERTOSUSBX-6102834",
    "identifiers": {
        "CVE": [
            "CVE-2023-48696"
        ],
        "CWE": [
            "CWE-825"
        ]
    },
    "language": "cpp",
    "malicious": false,
    "packageManager": "unmanaged",
    "publicationTime": "2023-12-07 13:13:19",
    "remediation": "Upgrade azure-rtos/usbx to version 6.3.0 or higher. ",
    "severity": "medium",
    "socialTrendAlert": false,
    "title": "Expired Pointer Dereference",
    "vulnDescription": {
        "Overview": "Affected versions of this package are vulnerable to Expired Pointer Dereference due to expired pointer dereference vulnerabilities in the host class, related to CDC ACM . An attacker can execute code on the affected device. "
    },
    "source_code": [
        {
            "filename": "LICENSE.txt",
            "diff": "@@ -2,7 +2,6 @@ MICROSOFT SOFTWARE LICENSE TERMS\n \n MICROSOFT AZURE RTOS \n \n-Shape \n \n These license terms are an agreement between you and Microsoft Corporation (or\n one of its affiliates). They apply to the software named above and any Microsoft\n@@ -14,18 +13,19 @@ HAVE THE RIGHTS BELOW.  BY USING THE SOFTWARE, YOU ACCEPT THESE TERMS.\n \n 1. INSTALLATION AND USE RIGHTS.  \n \n-a) General. You may install and use the software and the included Microsoft\n-applications solely for internal development, testing and evaluation purposes.\n-Any distribution or production use requires a separate license as set forth in\n-Section 2.  \n+a) General. You may (I) install, use and modify the software and (ii) install and use the included Microsoft\n+Applications (if any), each solely for internal development, testing and evaluation purposes.\n+Distribution or production use is governed by the license terms set forth in\n+Section 2.  You may also obtain distribution or production use rights through a separate agreement with \n+Microsoft. \n \n b) Contributions. Microsoft welcomes contributions to this software. In the event\n that you make a contribution to this software you will be required to agree to a\n Contributor License Agreement (CLA) declaring that you have the right to, and\n actually do, grant Microsoft the rights to use your contribution. For details,\n visit https://cla.microsoft.com.  \n \n-c) Included Microsoft Applications. The software includes other Microsoft\n+c) Included Microsoft Applications. The software may include other Microsoft\n applications which are governed by the licenses embedded in or made available\n with those applications.  \n \n@@ -57,7 +57,6 @@ i. You may use the software in production (e.g. program the modified or unmodifi\n software to devices you own or control) and distribute (i.e. make available to\n third parties) the modified or unmodified binary image produced from this code.\n \n-\n ii. You may permit your device distributors or developers to copy and distribute the\n binary image as programmed or to be programmed to your devices. \n \n@@ -70,17 +69,12 @@ b) Requirements. For any code you distribute, you must:\n \n i. when distributed in binary form, except as embedded in a device, include with\n such distribution the terms of this agreement;  \n-\n ii. when distributed in source code form to distributors or developers of your\n devices, include with such distribution the terms of this agreement; and \n-\n-iii. indemnify, defend and hold harmless Microsoft from  any claims, including\n-attorneys\u2019 fees, related to the distribution or use of your devices, except to\n-the extent that any claim is based solely on the unmodified software. \n+iii. indemnify, defend and hold harmless Microsoft from any claims, including claims arising from any High Risk Uses, and inclusive of attorneys\u2019 fees, related to the distribution or use of your devices that include the software, except to the extent that any intellectual property claim is based solely on the unmodified software.\n \n c) Restrictions. You may not: \n-\n-i. use or modify the software to create a competing real time operating system\n+i. use or modify the software to create competing real time operating system\n software;  \n \n ii. remove any copyright notices or licenses contained in the software; \n@@ -179,12 +173,13 @@ breach of which would endanger the purpose of this agreement and the compliance\n with which a party may constantly trust in (so-called \"cardinal obligations\").\n In other cases of slight negligence, Microsoft will not be liable for slight\n negligence. \n-\n-12. DISCLAIMER OF WARRANTY. THE SOFTWARE IS LICENSED \u201cAS IS.\u201d YOU BEAR THE RISK OF\n+12. DISCLAIMER OF WARRANTY. \n+a) THE SOFTWARE IS LICENSED \u201cAS IS.\u201d YOU BEAR THE RISK OF\n USING IT. MICROSOFT GIVES NO EXPRESS WARRANTIES, GUARANTEES, OR CONDITIONS. TO\n THE EXTENT PERMITTED UNDER APPLICABLE LAWS, MICROSOFT EXCLUDES ALL IMPLIED\n WARRANTIES, INCLUDING MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND\n NON-INFRINGEMENT. \n+b) HIGH RISK USE DISCLAIMER. WARNING: THE SOFTWARE IS NOT DESIGNED OR INTENDED FOR USE  WHERE FAILURE OR FAULT OF ANY KIND OF THE SOFTWARE COULD  RESULT IN DEATH OR SERIOUS BODILY INJURY, OR IN  PHYSICAL OR ENVIRONMENTAL DAMAGE (\u201ccollectively High Risk Use\u201d). Accordingly, You must design and implement your hardware and software such that, in the event of any interruption, defect, error, or other failure of the software, the safety of people, property, and the environment are not reduced below a level that is reasonable, appropriate, and legal, whether in general or for a specific industry. Your High Risk Use of the software is at Your own risk. \n \n 13. LIMITATION ON AND EXCLUSION OF DAMAGES. IF YOU HAVE ANY BASIS FOR RECOVERING\n DAMAGES DESPITE THE PRECEDING DISCLAIMER OF WARRANTY, YOU CAN RECOVER FROM\n@@ -203,21 +198,29 @@ possibility of the damages. The above limitation or exclusion may not apply to\n you because your state, province, or country may not allow the exclusion or\n limitation of incidental, consequential, or other damages. \n \n- \n-\n-Please note: As this software is distributed in Canada, some of the clauses in\n+ Please note: As this software is distributed in Canada, some of the clauses in\n this agreement are provided below in French. \n \n Remarque: Ce logiciel \u00e9tant distribu\u00e9 au Canada, certaines des clauses dans ce\n contrat sont fournies ci-dessous en fran\u00e7ais. \n \n-EXON\u00c9RATION DE GARANTIE. Le logiciel vis\u00e9 par une licence est offert \u00ab tel quel\n+EXON\u00c9RATION DE GARANTIE. \n+a)\tLe logiciel vis\u00e9 par une licence est offert \u00ab tel quel\n \u00bb. Toute utilisation de ce logiciel est \u00e0 votre seule risque et p\u00e9ril. Microsoft\n n\u2019accorde aucune autre garantie expresse. Vous pouvez b\u00e9n\u00e9ficier de droits\n additionnels en vertu du droit local sur la protection des consommateurs, que ce\n contrat ne peut modifier. La ou elles sont permises par le droit locale, les\n garanties implicites de qualit\u00e9 marchande, d\u2019ad\u00e9quation \u00e0 un usage particulier\n et d\u2019absence de contrefa\u00e7on sont exclues. \n+b)\tCLAUSE D\u2019EXCLUSION DE RESPONSABILIT\u00c9 RELATIVE \u00c0 L\u2019UTILISATION \u00c0 HAUT RISQUE. \n+AVERTISSEMENT: LE LOGICIEL N\u2019EST PAS CON\u00c7U OU DESTIN\u00c9 \u00c0 \u00caTRE UTILIS\u00c9 LORSQU\u2019UNE \n+D\u00c9FAILLANCE OU UN D\u00c9FAUT DE QUELQUE NATURE QUE CE SOIT POURRAIT ENTRA\u00ceNER LA \n+MORT OU DES BLESSURES CORPORELLES GRAVES, OU DES DOMMAGES PHYSIQUES OU \n+ENVIRONNEMENTAUX (\u00ab Utilisation \u00e0 haut risque \u00bb). Par cons\u00e9quent, vous devez concevoir et mettre en \n+\u0153uvre votre \u00e9quipement et votre logiciel de mani\u00e8re \u00e0 ce que, en cas d\u2019interruption, de d\u00e9faut, d\u2019erreur \n+ou de toute autre d\u00e9faillance du logiciel, la s\u00e9curit\u00e9 des personnes, des biens et de l\u2019environnement ne \n+soit pas r\u00e9duite en dessous d\u2019un niveau raisonnable, appropri\u00e9 et l\u00e9gal, que ce soit en g\u00e9n\u00e9ral ou pour \n+un secteur sp\u00e9cifique. Votre utilisation \u00e0 haut risque du logiciel est \u00e0 vos propres risques.\n \n LIMITATION DES DOMMAGES-INT\u00c9R\u00caTS ET EXCLUSION DE RESPONSABILIT\u00c9 POUR LES\n DOMMAGES. Vous pouvez obtenir de Microsoft et de ses fournisseurs une\n@@ -243,4 +246,4 @@ ci-dessus ne s\u2019appliquera pas \u00e0 votre \u00e9gard.\n EFFET JURIDIQUE. Le pr\u00e9sent contrat d\u00e9crit certains droits juridiques. Vous\n pourriez avoir d\u2019autres droits pr\u00e9vus par les lois de votre pays. Le pr\u00e9sent\n contrat ne modifie pas les droits que vous conf\u00e8rent les lois de votre pays si\n-celles-ci ne le permettent pas. \n\\ No newline at end of file\n+celles-ci ne le permettent pas."
        },
        {
            "filename": "common/core/inc/ux_api.h",
            "diff": "@@ -134,6 +134,7 @@\n /*                                            added a new error code,     */\n /*                                            resulting in version 6.2.1  */\n /*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n /*                                            added error checks support, */\n /*                                            resulting in version 6.x    */\n /*                                                                        */\n@@ -1814,12 +1815,13 @@ typedef struct UX_TRANSFER_STRUCT\n typedef struct UX_ENDPOINT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bEndpointAddress;\n-    ULONG           bmAttributes;\n-    ULONG           wMaxPacketSize;\n-    ULONG           bInterval;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bEndpointAddress;\n+    UCHAR           bmAttributes;\n+    USHORT          wMaxPacketSize;\n+    UCHAR           bInterval;\n+    UCHAR           _align_size[1];\n } UX_ENDPOINT_DESCRIPTOR;\n \n #define UX_ENDPOINT_DESCRIPTOR_ENTRIES                                  6\n@@ -1852,39 +1854,42 @@ typedef struct UX_ENDPOINT_STRUCT\n typedef struct UX_DEVICE_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bcdUSB;\n-    ULONG           bDeviceClass;\n-    ULONG           bDeviceSubClass;\n-    ULONG           bDeviceProtocol;\n-    ULONG           bMaxPacketSize0;\n-    ULONG           idVendor;\n-    ULONG           idProduct;\n-    ULONG           bcdDevice;\n-    ULONG           iManufacturer;\n-    ULONG           iProduct;\n-    ULONG           iSerialNumber;\n-    ULONG           bNumConfigurations;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    USHORT          bcdUSB;\n+    UCHAR           bDeviceClass;\n+    UCHAR           bDeviceSubClass;\n+    UCHAR           bDeviceProtocol;\n+    UCHAR           bMaxPacketSize0;\n+    USHORT          idVendor;\n+    USHORT          idProduct;\n+    USHORT          bcdDevice;\n+    UCHAR           iManufacturer;\n+    UCHAR           iProduct;\n+    UCHAR           iSerialNumber;\n+    UCHAR           bNumConfigurations;\n+    UCHAR           _align_size[2];\n } UX_DEVICE_DESCRIPTOR;\n \n #define UX_DEVICE_DESCRIPTOR_ENTRIES                                    14\n #define UX_DEVICE_DESCRIPTOR_LENGTH                                     18\n \n+\n /* Define USBX Device Qualifier Descriptor structure.  */\n \n typedef struct UX_DEVICE_QUALIFIER_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bcdUSB;\n-    ULONG           bDeviceClass;\n-    ULONG           bDeviceSubClass;\n-    ULONG           bDeviceProtocol;\n-    ULONG           bMaxPacketSize0;\n-    ULONG           bNumConfigurations;\n-    ULONG           bReserved;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    USHORT          bcdUSB;\n+    UCHAR           bDeviceClass;\n+    UCHAR           bDeviceSubClass;\n+    UCHAR           bDeviceProtocol;\n+    UCHAR           bMaxPacketSize0;\n+    UCHAR           bNumConfigurations;\n+    UCHAR           bReserved;\n+    UCHAR           _align_size[2];\n } UX_DEVICE_QUALIFIER_DESCRIPTOR;\n \n #define UX_DEVICE_QUALIFIER_DESCRIPTOR_ENTRIES                          9\n@@ -1896,47 +1901,50 @@ typedef struct UX_DEVICE_QUALIFIER_DESCRIPTOR_STRUCT\n typedef struct UX_OTHER_SPEED_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           wTotalLength;\n-    ULONG           bNumInterfaces;\n-    ULONG           bConfigurationValue;\n-    ULONG           iConfiguration;\n-    ULONG           bmAttributes;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    USHORT          wTotalLength;\n+    UCHAR           bNumInterfaces;\n+    UCHAR           bConfigurationValue;\n+    UCHAR           iConfiguration;\n+    UCHAR           bmAttributes;\n     ULONG           MaxPower;\n } UX_OTHER_SPEED_DESCRIPTOR;\n \n #define UX_OTHER_SPEED_DESCRIPTOR_ENTRIES                               8\n #define UX_OTHER_SPEED_DESCRIPTOR_LENGTH                                9\n \n+\n /* Define USBX OTG Descriptor structure.  */\n \n typedef struct UX_OTG_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bmAttributes;\n-    ULONG           bcdOTG;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bmAttributes;\n+    UCHAR           _align_bcdOTG[1];\n+    USHORT          bcdOTG;\n+    UCHAR           _algin_size[2];\n } UX_OTG_DESCRIPTOR;\n \n #define UX_OTG_DESCRIPTOR_ENTRIES                          4\n #define UX_OTG_DESCRIPTOR_LENGTH                           5\n \n+\n /* Define USBX Interface Association Descriptor structure.  */\n \n typedef struct UX_INTERFACE_ASSOCIATION_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bFirstInterface;\n-    ULONG           bInterfaceCount;\n-    ULONG           bFunctionClass;\n-    ULONG           bFunctionSubClass;\n-    ULONG           bFunctionProtocol;\n-    ULONG           iFunction;\n-\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bFirstInterface;\n+    UCHAR           bInterfaceCount;\n+    UCHAR           bFunctionClass;\n+    UCHAR           bFunctionSubClass;\n+    UCHAR           bFunctionProtocol;\n+    UCHAR           iFunction;\n } UX_INTERFACE_ASSOCIATION_DESCRIPTOR;\n                                                             \n #define UX_INTERFACE_ASSOCIATION_DESCRIPTOR_ENTRIES         8\n@@ -2060,16 +2068,17 @@ typedef struct UX_DEVICE_STRUCT\n typedef struct UX_CONFIGURATION_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           wTotalLength;\n-    ULONG           bNumInterfaces;\n-    ULONG           bConfigurationValue;\n-    ULONG           iConfiguration;\n-    ULONG           bmAttributes;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    USHORT          wTotalLength;\n+    UCHAR           bNumInterfaces;\n+    UCHAR           bConfigurationValue;\n+    UCHAR           iConfiguration;\n+    UCHAR           bmAttributes;\n     ULONG           MaxPower;\n } UX_CONFIGURATION_DESCRIPTOR;\n \n+\n #define UX_CONFIGURATION_DESCRIPTOR_ENTRIES                             8\n #define UX_CONFIGURATION_DESCRIPTOR_LENGTH                              9\n \n@@ -2107,15 +2116,16 @@ typedef struct UX_CONFIGURATION_STRUCT\n typedef struct UX_INTERFACE_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bInterfaceNumber;\n-    ULONG           bAlternateSetting;\n-    ULONG           bNumEndpoints;\n-    ULONG           bInterfaceClass;\n-    ULONG           bInterfaceSubClass;\n-    ULONG           bInterfaceProtocol;\n-    ULONG           iInterface;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bInterfaceNumber;\n+    UCHAR           bAlternateSetting;\n+    UCHAR           bNumEndpoints;\n+    UCHAR           bInterfaceClass;\n+    UCHAR           bInterfaceSubClass;\n+    UCHAR           bInterfaceProtocol;\n+    UCHAR           iInterface;\n+    UCHAR           _align_size[3];\n } UX_INTERFACE_DESCRIPTOR;\n     \n #define UX_INTERFACE_DESCRIPTOR_ENTRIES                                 9\n@@ -2153,9 +2163,9 @@ typedef struct UX_INTERFACE_STRUCT\n typedef struct UX_STRING_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bString[1];\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bString[2];\n } UX_STRING_DESCRIPTOR;\n \n #define UX_STRING_DESCRIPTOR_ENTRIES                                    3\n@@ -2166,10 +2176,11 @@ typedef struct UX_STRING_DESCRIPTOR_STRUCT\n \n typedef struct UX_BOS_DESCRIPTOR_STRUCT\n {\n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           wTotalLength;\n-    ULONG           bNumDeviceCaps;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    USHORT          wTotalLength;\n+    UCHAR           bNumDeviceCaps;\n+    UCHAR           _align_size[3];\n } UX_BOS_DESCRIPTOR;\n \n #define UX_BOS_DESCRIPTOR_ENTRIES                                       4\n@@ -2180,9 +2191,10 @@ typedef struct UX_BOS_DESCRIPTOR_STRUCT\n \n typedef struct UX_USB_2_0_EXTENSION_DESCRIPTOR_STRUCT\n {\n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDevCapabilityType;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDevCapabilityType;\n+    UCHAR           _align_bmAttributes[1];\n     ULONG           bmAttributes;\n } UX_USB_2_0_EXTENSION_DESCRIPTOR;\n \n@@ -2194,14 +2206,14 @@ typedef struct UX_USB_2_0_EXTENSION_DESCRIPTOR_STRUCT\n \n typedef struct UX_CONTAINER_ID_DESCRIPTOR_STRUCT\n {\n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDevCapabilityType;\n-    ULONG           bReserved;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDevCapabilityType;\n+    UCHAR           bReserved;\n     ULONG           ContainerID[4];\n } UX_CONTAINER_ID_DESCRIPTOR;\n \n-#define UX_CONTAINER_ID_DESCRIPTOR_ENTRIES                              5\n+#define UX_CONTAINER_ID_DESCRIPTOR_ENTRIES                              8\n #define UX_CONTAINER_ID_DESCRIPTOR_LENGTH                               20\n \n \n@@ -2210,17 +2222,20 @@ typedef struct UX_CONTAINER_ID_DESCRIPTOR_STRUCT\n typedef struct UX_DFU_FUNCTIONAL_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bmAttributes;\n-    ULONG           wDetachTimeOut;\n-    ULONG           wTransferSize;\n-    ULONG           bcdDFUVersion;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bmAttributes;\n+    UCHAR           _align_wDetachTimeOut[1];\n+    USHORT          wDetachTimeOut;\n+    USHORT          wTransferSize;\n+    USHORT          bcdDFUVersion;\n+    UCHAR           _align_size[2];\n } UX_DFU_FUNCTIONAL_DESCRIPTOR;\n                                                                         \n #define UX_DFU_FUNCTIONAL_DESCRIPTOR_ENTRIES                            6\n #define UX_DFU_FUNCTIONAL_DESCRIPTOR_LENGTH                             9\n \n+\n /* Define USBX Host Controller structure.  */\n \n typedef struct UX_HCD_STRUCT"
        },
        {
            "filename": "common/core/inc/ux_user_sample.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_user.h                                           PORTABLE C      */ \n-/*                                                           6.2.1        */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -99,6 +99,10 @@\n /*                                            added option to enable      */\n /*                                            basic USBX error checking,  */\n /*                                            resulting in version 6.2.1  */\n+/*  xx-xx-xxxx     Xiuwen Cai               Modified comment(s),          */\n+/*                                            added option for get string */\n+/*                                            requests with zero wIndex,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -224,6 +228,10 @@\n \n #define UX_SLAVE_REQUEST_DATA_MAX_LENGTH    (1024 * 2)\n \n+/* Defined, this enables processing of Get String Descriptor requests with zero Language ID.  \n+   The first language ID in the language ID framwork will be used if the request has a zero\n+   Language ID.  */\n+/* #define UX_DEVICE_ENABLE_GET_STRING_WITH_ZERO_LANGUAGE_ID  */\n \n /* Defined, this value includes code to handle storage Multi-Media Commands (MMC). E.g., DVD-ROM.\n */"
        },
        {
            "filename": "common/core/inc/ux_utility.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  COMPONENT DEFINITION                                   RELEASE        */ \n /*                                                                        */ \n /*    ux_utility.h                                        PORTABLE C      */ \n-/*                                                           6.1.12       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -57,6 +57,10 @@\n /*                                            added macros for RTOS calls,*/\n /*                                            fixed OHCI PRSC issue,      */\n /*                                            resulting in version 6.1.12 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added new function to check */\n+/*                                            parsed size of descriptor,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -70,6 +74,8 @@ VOID             _ux_utility_descriptor_parse(UCHAR * raw_descriptor, UCHAR * de\n                              UINT descriptor_entries, UCHAR * descriptor);\n VOID             _ux_utility_descriptor_pack(UCHAR * descriptor, UCHAR * descriptor_structure,\n                              UINT descriptor_entries, UCHAR * raw_descriptor);\n+ULONG            _ux_utility_descriptor_parse_size(UCHAR * descriptor_structure, UINT descriptor_entries, UINT size_align_mask);\n+\n ULONG            _ux_utility_long_get(UCHAR * address);\n VOID             _ux_utility_long_put(UCHAR * address, ULONG value);\n VOID             _ux_utility_long_put_big_endian(UCHAR * address, ULONG value);"
        },
        {
            "filename": "common/core/src/ux_device_stack_descriptor_send.c",
            "diff": "@@ -91,6 +91,8 @@\n /*                                            resulting in version 6.1.11 */\n /*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            moved compile option check, */\n+/*                                            added support for get string*/\n+/*                                            requests with zero wIndex,  */\n /*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n@@ -399,6 +401,16 @@ ULONG                           string_length;\n         }\n         else\n         {\n+#ifdef UX_DEVICE_ENABLE_GET_STRING_WITH_ZERO_LANGUAGE_ID\n+\n+            /* Check if the language ID is zero.  */\n+            if (request_index == 0)\n+            {\n+\n+                /* Get the first language ID in the language ID framework.  */\n+                request_index =  _ux_utility_short_get(_ux_system_slave -> ux_system_slave_language_id_framework);\n+            }\n+#endif\n \n             /* The host wants a specific string index returned. Get the string framework pointer\n                and length.  */"
        },
        {
            "filename": "common/core/src/ux_system_initialize.c",
            "diff": "@@ -69,7 +69,7 @@ UCHAR _ux_system_container_id_descriptor_structure[] =                      {1,1\n /*  FUNCTION                                               RELEASE        */ \n /*                                                                        */ \n /*    _ux_system_initialize                               PORTABLE C      */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -115,6 +115,10 @@ UCHAR _ux_system_container_id_descriptor_structure[] =                      {1,1\n /*  01-31-2022     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            added standalone support,   */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added UX_ASSERT check for   */\n+/*                                            STD descriptor parse size,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_system_initialize(VOID *regular_memory_pool_start, ULONG regular_memory_size, \n@@ -313,6 +317,19 @@ UINT  _uxe_system_initialize(VOID *regular_memory_pool_start, ULONG regular_memo\n                             VOID *cache_safe_memory_pool_start, ULONG cache_safe_memory_size)\n {\n \n+    /* Compiling option check of descriptors structs.  */\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_endpoint_descriptor_structure, UX_ENDPOINT_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_ENDPOINT_DESCRIPTOR));\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_device_descriptor_structure, UX_DEVICE_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_DEVICE_DESCRIPTOR));\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_configuration_descriptor_structure, UX_CONFIGURATION_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_CONFIGURATION_DESCRIPTOR));\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_interface_descriptor_structure, UX_INTERFACE_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_INTERFACE_DESCRIPTOR));\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_interface_association_descriptor_structure, UX_INTERFACE_ASSOCIATION_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_INTERFACE_ASSOCIATION_DESCRIPTOR));\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_string_descriptor_structure, UX_STRING_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_STRING_DESCRIPTOR));\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_dfu_functional_descriptor_structure, UX_DFU_FUNCTIONAL_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_DFU_FUNCTIONAL_DESCRIPTOR));\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_bos_descriptor_structure, UX_BOS_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_BOS_DESCRIPTOR));\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_usb_2_0_extension_descriptor_structure, UX_USB_2_0_EXTENSION_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_USB_2_0_EXTENSION_DESCRIPTOR));\n+    UX_ASSERT((_ux_utility_descriptor_parse_size(_ux_system_container_id_descriptor_structure, UX_CONTAINER_ID_DESCRIPTOR_ENTRIES, 0x3u)) == sizeof(UX_CONTAINER_ID_DESCRIPTOR));\n+\n+\n     /* Sanity check.  */\n     if ((regular_memory_pool_start == UX_NULL) || (regular_memory_size == 0))\n             return(UX_INVALID_PARAMETER);"
        },
        {
            "filename": "common/core/src/ux_utility_descriptor_pack.c",
            "diff": "@@ -12,8 +12,8 @@\n \n /**************************************************************************/\n /**************************************************************************/\n-/**                                                                       */ \n-/** USBX Component                                                        */ \n+/**                                                                       */\n+/** USBX Component                                                        */\n /**                                                                       */\n /**   Utility                                                             */\n /**                                                                       */\n@@ -28,50 +28,53 @@\n #include \"ux_api.h\"\n \n \n-/**************************************************************************/ \n-/*                                                                        */ \n-/*  FUNCTION                                               RELEASE        */ \n-/*                                                                        */ \n-/*    _ux_utility_descriptor_pack                         PORTABLE C      */ \n-/*                                                           6.1          */\n+/**************************************************************************/\n+/*                                                                        */\n+/*  FUNCTION                                               RELEASE        */\n+/*                                                                        */\n+/*    _ux_utility_descriptor_pack                         PORTABLE C      */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n /*                                                                        */\n /*  DESCRIPTION                                                           */\n-/*                                                                        */ \n+/*                                                                        */\n /*    This function will pack an application structure into a USB         */\n-/*    descriptor.                                                         */ \n-/*                                                                        */ \n-/*  INPUT                                                                 */ \n-/*                                                                        */ \n-/*    descriptor                            Pointer to the unpacked       */ \n+/*    descriptor.                                                         */\n+/*                                                                        */\n+/*  INPUT                                                                 */\n+/*                                                                        */\n+/*    descriptor                            Pointer to the unpacked       */\n /*                                            descriptor                  */\n /*    descriptor_structure                  Components of the descriptor  */\n-/*    descriptor_entries                    Number of entries in the      */ \n+/*    descriptor_entries                    Number of entries in the      */\n /*                                            descriptor                  */\n /*    raw_descriptor                        Pointer to packed descriptor  */\n-/*                                                                        */ \n-/*  OUTPUT                                                                */ \n-/*                                                                        */ \n+/*                                                                        */\n+/*  OUTPUT                                                                */\n+/*                                                                        */\n /*    None                                                                */\n-/*                                                                        */ \n-/*  CALLS                                                                 */ \n-/*                                                                        */ \n+/*                                                                        */\n+/*  CALLS                                                                 */\n+/*                                                                        */\n /*    _ux_utility_long_put                  Put 32-bit value              */\n /*    _ux_utility_short_put                 Put 16-bit value              */\n-/*                                                                        */ \n-/*  CALLED BY                                                             */ \n-/*                                                                        */ \n-/*    USBX Components                                                     */ \n-/*                                                                        */ \n-/*  RELEASE HISTORY                                                       */ \n-/*                                                                        */ \n-/*    DATE              NAME                      DESCRIPTION             */ \n-/*                                                                        */ \n+/*                                                                        */\n+/*  CALLED BY                                                             */\n+/*                                                                        */\n+/*    USBX Components                                                     */\n+/*                                                                        */\n+/*  RELEASE HISTORY                                                       */\n+/*                                                                        */\n+/*    DATE              NAME                      DESCRIPTION             */\n+/*                                                                        */\n /*  05-19-2020     Chaoqiong Xiao           Initial Version 6.0           */\n /*  09-30-2020     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            resulting in version 6.1    */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n VOID  _ux_utility_descriptor_pack(UCHAR * descriptor, UCHAR * descriptor_structure,\n@@ -90,27 +93,37 @@ VOID  _ux_utility_descriptor_pack(UCHAR * descriptor, UCHAR * descriptor_structu\n            insert it into the target descriptor.  */\n         case 4:\n \n+            /* Increase address so it's aligned.  */\n+            while((ALIGN_TYPE)descriptor & 3u)\n+                descriptor++;\n+\n+            /* Put the DW.  */\n             _ux_utility_long_put(raw_descriptor, *((ULONG *) descriptor));\n             raw_descriptor +=  4;\n-            break;                   \n+            descriptor += 4;\n+            break;\n \n         case 2:\n \n-            _ux_utility_short_put(raw_descriptor, (USHORT)*((ULONG *) descriptor));\n+            /* Increase address so it's aligned.  */\n+            while((ALIGN_TYPE)descriptor & 1u)\n+                descriptor++;\n+\n+            /* Put the Word.  */\n+            _ux_utility_short_put(raw_descriptor, (USHORT)*((USHORT *) descriptor));\n             raw_descriptor += 2;\n-            break;                   \n+            descriptor += 2;\n+            break;\n \n         default:\n \n-            *raw_descriptor =  (UCHAR) *((ULONG *) descriptor);\n+            /* Put the byte.  */\n+            *raw_descriptor =  (UCHAR) *((UCHAR *) descriptor);\n             raw_descriptor++;\n+            descriptor++;\n         }\n-\n-        /* Add the size of the component to the destination.  */\n-        descriptor +=  4;\n     }\n \n     /* Return to caller.  */\n     return;\n }\n-"
        },
        {
            "filename": "common/core/src/ux_utility_descriptor_parse.c",
            "diff": "@@ -12,8 +12,8 @@\n \n /**************************************************************************/\n /**************************************************************************/\n-/**                                                                       */ \n-/** USBX Component                                                        */ \n+/**                                                                       */\n+/** USBX Component                                                        */\n /**                                                                       */\n /**   Utility                                                             */\n /**                                                                       */\n@@ -28,50 +28,53 @@\n #include \"ux_api.h\"\n \n \n-/**************************************************************************/ \n-/*                                                                        */ \n-/*  FUNCTION                                               RELEASE        */ \n-/*                                                                        */ \n-/*    _ux_utility_descriptor_parse                        PORTABLE C      */ \n-/*                                                           6.1          */\n+/**************************************************************************/\n+/*                                                                        */\n+/*  FUNCTION                                               RELEASE        */\n+/*                                                                        */\n+/*    _ux_utility_descriptor_parse                        PORTABLE C      */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n /*                                                                        */\n /*  DESCRIPTION                                                           */\n-/*                                                                        */ \n+/*                                                                        */\n /*    This function will unpack a USB descriptor from the bus into a      */\n-/*    memory aligned structure.                                           */ \n-/*                                                                        */ \n-/*  INPUT                                                                 */ \n-/*                                                                        */ \n+/*    memory aligned structure.                                           */\n+/*                                                                        */\n+/*  INPUT                                                                 */\n+/*                                                                        */\n /*    raw_descriptor                        Pointer to packed descriptor  */\n /*    descriptor_structure                  Components of the descriptor  */\n-/*    descriptor_entries                    Number of entries in the      */ \n+/*    descriptor_entries                    Number of entries in the      */\n /*                                            descriptor                  */\n-/*    descriptor                            Pointer to the unpacked       */ \n+/*    descriptor                            Pointer to the unpacked       */\n /*                                            descriptor                  */\n-/*                                                                        */ \n-/*  OUTPUT                                                                */ \n-/*                                                                        */ \n+/*                                                                        */\n+/*  OUTPUT                                                                */\n+/*                                                                        */\n /*    None                                                                */\n-/*                                                                        */ \n-/*  CALLS                                                                 */ \n-/*                                                                        */ \n+/*                                                                        */\n+/*  CALLS                                                                 */\n+/*                                                                        */\n /*    _ux_utility_long_get                  Get 32-bit value              */\n /*    _ux_utility_short_get                 Get 16-bit value              */\n-/*                                                                        */ \n-/*  CALLED BY                                                             */ \n-/*                                                                        */ \n-/*    USBX Components                                                     */ \n-/*                                                                        */ \n-/*  RELEASE HISTORY                                                       */ \n-/*                                                                        */ \n-/*    DATE              NAME                      DESCRIPTION             */ \n-/*                                                                        */ \n+/*                                                                        */\n+/*  CALLED BY                                                             */\n+/*                                                                        */\n+/*    USBX Components                                                     */\n+/*                                                                        */\n+/*  RELEASE HISTORY                                                       */\n+/*                                                                        */\n+/*    DATE              NAME                      DESCRIPTION             */\n+/*                                                                        */\n /*  05-19-2020     Chaoqiong Xiao           Initial Version 6.0           */\n /*  09-30-2020     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            resulting in version 6.1    */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n VOID  _ux_utility_descriptor_parse(UCHAR * raw_descriptor, UCHAR * descriptor_structure,\n@@ -90,27 +93,126 @@ VOID  _ux_utility_descriptor_parse(UCHAR * raw_descriptor, UCHAR * descriptor_st\n            insert it into the target descriptor.  */\n         case 4:\n \n+            /* Padding zeros so address is aligned.  */\n+            while((ALIGN_TYPE) descriptor & 3u)\n+                *descriptor++ =  0;\n+\n+            /* Save the DW.  */\n             *((ULONG *) descriptor) =  _ux_utility_long_get(raw_descriptor);\n             raw_descriptor +=  4;\n-            break;                   \n+            descriptor += 4;\n+            break;\n \n         case 2:\n \n-            *((ULONG *) descriptor) = (ULONG) _ux_utility_short_get(raw_descriptor);\n+            /* Padding zeros so address is aligned.  */\n+            while((ALIGN_TYPE) descriptor & 1u)\n+                *descriptor++ =  0;\n+\n+            /* Save the word.  */\n+            *((USHORT *) descriptor) = (USHORT) _ux_utility_short_get(raw_descriptor);\n             raw_descriptor += 2;\n-            break;                   \n+            descriptor += 2;\n+            break;\n \n         default:\n \n-            *((ULONG *) descriptor) =  (ULONG) *raw_descriptor;\n+            /* Save the byte.  */\n+            *((UCHAR *) descriptor) =  (UCHAR) *raw_descriptor;\n             raw_descriptor++;\n+            descriptor ++;\n         }\n-\n-        /* Add the size of the component to the destination.  */\n-        descriptor +=  4;\n     }\n \n     /* Return to caller.  */\n     return;\n }\n \n+/**************************************************************************/\n+/*                                                                        */\n+/*  FUNCTION                                               RELEASE        */\n+/*                                                                        */\n+/*    _ux_utility_descriptor_parse_size                   PORTABLE C      */\n+/*                                                           6.x          */\n+/*  AUTHOR                                                                */\n+/*                                                                        */\n+/*    Chaoqiong Xiao, Microsoft Corporation                               */\n+/*                                                                        */\n+/*  DESCRIPTION                                                           */\n+/*                                                                        */\n+/*    This function will calculate the size of a parsed USB descriptor.   */\n+/*                                                                        */\n+/*  INPUT                                                                 */\n+/*                                                                        */\n+/*    descriptor_structure                  Components of the descriptor  */\n+/*    descriptor_entries                    Number of entries in the      */\n+/*                                            descriptor                  */\n+/*    size_align_mask                       Size alignment mask           */\n+/*                                                                        */\n+/*  OUTPUT                                                                */\n+/*                                                                        */\n+/*    size                                  Size of the parsed descriptor */\n+/*                                                                        */\n+/*  CALLS                                                                 */\n+/*                                                                        */\n+/*    None                                                                */\n+/*                                                                        */\n+/*  CALLED BY                                                             */\n+/*                                                                        */\n+/*    USBX Components                                                     */\n+/*                                                                        */\n+/*  RELEASE HISTORY                                                       */\n+/*                                                                        */\n+/*    DATE              NAME                      DESCRIPTION             */\n+/*                                                                        */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Initial Version 6.x           */\n+/*                                                                        */\n+/**************************************************************************/\n+ULONG _ux_utility_descriptor_parse_size(UCHAR * descriptor_structure, UINT descriptor_entries, UINT size_align_mask)\n+{\n+\n+ULONG           size = 0;\n+ULONG           entry_size;\n+\n+    /* Loop on all the entries in this descriptor.  */\n+    while(descriptor_entries--)\n+    {\n+\n+        /* Get entry size.  */\n+        entry_size = (ULONG)*descriptor_structure ++;\n+\n+        /* Check the size then build the component from the source and\n+           insert it into the target descriptor.  */\n+        switch(entry_size)\n+        {\n+\n+        case 4: /* Fall through.  */\n+        case 2:\n+\n+            /* Padding zeros so address is aligned.  */\n+            while(size & (entry_size - 1))\n+                size++;\n+\n+            /* Add to the size.  */\n+            size += entry_size;\n+            break;\n+\n+        case 1:\n+\n+            /* Add to the size.  */\n+            size += 1;\n+            break;\n+\n+        default:\n+\n+            /* Invalid entry size.  */\n+            return(0);\n+        }\n+    }\n+\n+    /* Align the size.  */\n+    size = (size + size_align_mask) & (~size_align_mask);\n+\n+    /* Return the size.  */\n+    return(size);\n+}"
        },
        {
            "filename": "common/core/src/ux_utility_memory_allocate.c",
            "diff": "@@ -33,7 +33,7 @@\n /*  FUNCTION                                               RELEASE        */ \n /*                                                                        */ \n /*    _ux_utility_memory_allocate                         PORTABLE C      */ \n-/*                                                           6.1.11       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -77,6 +77,9 @@\n /*  04-25-2022     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            internal clean up,          */\n /*                                            resulting in version 6.1.11 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed issue in 64-bit env,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n VOID  *_ux_utility_memory_allocate(ULONG memory_alignment, ULONG memory_cache_flag,\n@@ -306,7 +309,7 @@ ALIGN_TYPE          int_memory_buffer;\n         {\n \n             /* Setup the leftover memory block.  */\n-            leftover_memory_block = (UX_MEMORY_BLOCK *) (((ALIGN_TYPE) new_memory_block + sizeof(UX_MEMORY_BLOCK) + memory_size_requested) & 0xFFFFFFFFu);\n+            leftover_memory_block = (UX_MEMORY_BLOCK *) (((ALIGN_TYPE) new_memory_block + sizeof(UX_MEMORY_BLOCK) + memory_size_requested));\n             leftover_memory_block -> ux_memory_block_next =  new_memory_block -> ux_memory_block_next;\n             leftover_memory_block -> ux_memory_block_previous =  new_memory_block;\n             leftover_memory_block -> ux_memory_block_size =  leftover - (ULONG)sizeof(UX_MEMORY_BLOCK);"
        },
        {
            "filename": "common/usbx_device_classes/inc/ux_device_class_audio10.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  COMPONENT DEFINITION                                   RELEASE        */\n /*                                                                        */\n /*    ux_device_class_audio10.h                           PORTABLE C      */\n-/*                                                           6.2.1        */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -57,6 +57,9 @@\n /*                                            added error checks support, */\n /*                                            fixed a macro name,         */\n /*                                            resulting in version 6.2.1  */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -166,94 +169,105 @@ extern   \"C\" {\n typedef struct UX_DEVICE_CLASS_AUDIO10_AC_HEADER1_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bcdADC;\n-    ULONG           wTotalLength;\n-    ULONG           bInCollection;\n-    ULONG           baInterfaceNr1;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           _align_bcdADC[1];\n+    USHORT          bcdADC;\n+    USHORT          wTotalLength;\n+    UCHAR           bInCollection;\n+    UCHAR           baInterfaceNr1;\n+    UCHAR           _align_size[2];\n } UX_DEVICE_CLASS_AUDIO10_AC_HEADER1_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO10_AC_HEADER2_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bcdADC;\n-    ULONG           wTotalLength;\n-    ULONG           bInCollection;\n-    ULONG           baInterfaceNr1;\n-    ULONG           baInterfaceNr2;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           _align_bcdADC[1];\n+    USHORT          bcdADC;\n+    USHORT          wTotalLength;\n+    UCHAR           bInCollection;\n+    UCHAR           baInterfaceNr1;\n+    UCHAR           baInterfaceNr2;\n+    UCHAR           _align_size[1];\n } UX_DEVICE_CLASS_AUDIO10_AC_HEADER2_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO10_AC_HEADER3_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bcdADC;\n-    ULONG           wTotalLength;\n-    ULONG           bInCollection;\n-    ULONG           baInterfaceNr1;\n-    ULONG           baInterfaceNr2;\n-    ULONG           baInterfaceNr3;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           _align_bcdADC[1];\n+    USHORT          bcdADC;\n+    USHORT          wTotalLength;\n+    UCHAR           bInCollection;\n+    UCHAR           baInterfaceNr1;\n+    UCHAR           baInterfaceNr2;\n+    UCHAR           baInterfaceNr3;\n+    UCHAR           _align_size[2];\n } UX_DEVICE_CLASS_AUDIO10_AC_HEADER3_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO10_AC_HEADER6_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bcdADC;\n-    ULONG           wTotalLength;\n-    ULONG           bInCollection;\n-    ULONG           baInterfaceNr1;\n-    ULONG           baInterfaceNr2;\n-    ULONG           baInterfaceNr3;\n-    ULONG           baInterfaceNr4;\n-    ULONG           baInterfaceNr5;\n-    ULONG           baInterfaceNr6;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           _align_bcdADC[1];\n+    USHORT          bcdADC;\n+    USHORT          wTotalLength;\n+    UCHAR           bInCollection;\n+    UCHAR           baInterfaceNr1;\n+    UCHAR           baInterfaceNr2;\n+    UCHAR           baInterfaceNr3;\n+    UCHAR           baInterfaceNr4;\n+    UCHAR           baInterfaceNr5;\n+    UCHAR           baInterfaceNr6;\n+    UCHAR           _align_size[1];\n } UX_DEVICE_CLASS_AUDIO10_AC_HEADER6_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO10_AC_HEADER7_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bcdADC;\n-    ULONG           wTotalLength;\n-    ULONG           bInCollection;\n-    ULONG           baInterfaceNr1;\n-    ULONG           baInterfaceNr2;\n-    ULONG           baInterfaceNr3;\n-    ULONG           baInterfaceNr4;\n-    ULONG           baInterfaceNr5;\n-    ULONG           baInterfaceNr6;\n-    ULONG           baInterfaceNr7;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           _align_bcdADC[1];\n+    USHORT          bcdADC;\n+    USHORT          wTotalLength;\n+    UCHAR           bInCollection;\n+    UCHAR           baInterfaceNr1;\n+    UCHAR           baInterfaceNr2;\n+    UCHAR           baInterfaceNr3;\n+    UCHAR           baInterfaceNr4;\n+    UCHAR           baInterfaceNr5;\n+    UCHAR           baInterfaceNr6;\n+    UCHAR           baInterfaceNr7;\n } UX_DEVICE_CLASS_AUDIO10_AC_HEADER7_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO10_AC_HEADER8_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bcdADC;\n-    ULONG           wTotalLength;\n-    ULONG           bInCollection;\n-    ULONG           baInterfaceNr1;\n-    ULONG           baInterfaceNr2;\n-    ULONG           baInterfaceNr3;\n-    ULONG           baInterfaceNr4;\n-    ULONG           baInterfaceNr5;\n-    ULONG           baInterfaceNr6;\n-    ULONG           baInterfaceNr7;\n-    ULONG           baInterfaceNr8;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           _align_bcdADC[1];\n+    USHORT          bcdADC;\n+    USHORT          wTotalLength;\n+    UCHAR           bInCollection;\n+    UCHAR           baInterfaceNr1;\n+    UCHAR           baInterfaceNr2;\n+    UCHAR           baInterfaceNr3;\n+    UCHAR           baInterfaceNr4;\n+    UCHAR           baInterfaceNr5;\n+    UCHAR           baInterfaceNr6;\n+    UCHAR           baInterfaceNr7;\n+    UCHAR           baInterfaceNr8;\n+    UCHAR           _align_size[3];\n } UX_DEVICE_CLASS_AUDIO10_AC_HEADER8_DESCRIPTOR;\n \n \n@@ -262,16 +276,16 @@ typedef struct UX_DEVICE_CLASS_AUDIO10_AC_HEADER8_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO10_AC_INPUT_TERMINAL_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bTerminalID;\n-    ULONG           wTerminalType;\n-    ULONG           bAssocTerminal;\n-    ULONG           bNrChannels;\n-    ULONG           wChannelConfig;\n-    ULONG           iChannelNames;\n-    ULONG           iTerminal;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bTerminalID;\n+    USHORT          wTerminalType;\n+    UCHAR           bAssocTerminal;\n+    UCHAR           bNrChannels;\n+    USHORT          wChannelConfig;\n+    UCHAR           iChannelNames;\n+    UCHAR           iTerminal;\n } UX_DEVICE_CLASS_AUDIO10_AC_INPUT_TERMINAL_DESCRIPTOR;\n \n \n@@ -280,14 +294,15 @@ typedef struct UX_DEVICE_CLASS_AUDIO10_AC_INPUT_TERMINAL_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO10_AC_OUTPUT_TERMINAL_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bTerminalID;\n-    ULONG           wTerminalType;\n-    ULONG           bAssocTerminal;\n-    ULONG           bSourceID;\n-    ULONG           iTerminal;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bTerminalID;\n+    USHORT          wTerminalType;\n+    UCHAR           bAssocTerminal;\n+    UCHAR           bSourceID;\n+    UCHAR           iTerminal;\n+    UCHAR          _align_size[3];\n } UX_DEVICE_CLASS_AUDIO10_AC_OUTPUT_TERMINAL_DESCRIPTOR;\n \n \n@@ -296,12 +311,13 @@ typedef struct UX_DEVICE_CLASS_AUDIO10_AC_OUTPUT_TERMINAL_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO10_AC_FEATURE_UNIT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n-    ULONG           bControlSize;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           bControlSize;\n+    UCHAR           _align_bmaControls[2];\n     ULONG           bmaControls;\n } UX_DEVICE_CLASS_AUDIO10_AC_FEATURE_UNIT_DESCRIPTOR;\n \n@@ -311,12 +327,13 @@ typedef struct UX_DEVICE_CLASS_AUDIO10_AC_FEATURE_UNIT_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO10_AS_INTERFACE_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bTerminalLink;\n-    ULONG           bDelay;\n-    ULONG           wFormatTag;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bTerminalLink;\n+    UCHAR           bDelay;\n+    UCHAR           _align_wFormatTag[1];\n+    USHORT          wFormatTag;\n } UX_DEVICE_CLASS_AUDIO10_AS_INTERFACE_DESCRIPTOR;\n \n \n@@ -325,14 +342,14 @@ typedef struct UX_DEVICE_CLASS_AUDIO10_AS_INTERFACE_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO10_AS_TYPE_I_FORMAT_TYPE_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bFormatType;\n-    ULONG           bNrChannels;\n-    ULONG           bSubframeSize;\n-    ULONG           bBitResolution;\n-    ULONG           bSamFreqType;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bFormatType;\n+    UCHAR           bNrChannels;\n+    UCHAR           bSubframeSize;\n+    UCHAR           bBitResolution;\n+    UCHAR           bSamFreqType;\n     ULONG           SamplingFrequency;\n } UX_DEVICE_CLASS_AUDIO10_AS_TYPE_I_FORMAT_TYPE_DESCRIPTOR;\n \n@@ -349,25 +366,27 @@ typedef struct UX_DEVICE_CLASS_AUDIO10_AS_TYPE_I_FORMAT_TYPE_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO10_AS_ENDPOINT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bmAttributes;\n-    ULONG           wMaxPacketSize;\n-    ULONG           bInterval;\n-    ULONG           bRefresh;\n-    ULONG           bSynchAddress;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bmAttributes;\n+    USHORT          wMaxPacketSize;\n+    UCHAR           bInterval;\n+    UCHAR           bRefresh;\n+    UCHAR           bSynchAddress;\n+    UCHAR          _align_size[3];\n } UX_DEVICE_CLASS_AUDIO10_AS_ENDPOINT_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO10_AS_DATA_ENDPOINT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bmAttributes;\n-    ULONG           bLockDelayUnits;\n-    ULONG           wLockDelay;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bmAttributes;\n+    UCHAR           bLockDelayUnits;\n+    UCHAR          _align_wLockDelay[1];\n+    USHORT          wLockDelay;\n } UX_DEVICE_CLASS_AUDIO10_AS_DATA_ENDPOINT_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO10_CONTROL_STRUCT"
        },
        {
            "filename": "common/usbx_device_classes/inc/ux_device_class_audio20.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  COMPONENT DEFINITION                                   RELEASE        */\n /*                                                                        */\n /*    ux_device_class_audio20.h                           PORTABLE C      */\n-/*                                                           6.2.1        */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -58,6 +58,9 @@\n /*  03-08-2023     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            added error checks support, */\n /*                                            resulting in version 6.2.1  */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -210,12 +213,15 @@ extern   \"C\" {\n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_HEADER_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bcdADC;\n-    ULONG           bCategory;\n-    ULONG           wTotalLength;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           _align_bcdADC[1];\n+    USHORT          bcdADC;\n+    UCHAR           bCategory;\n+    UCHAR           _align_wTotalLength[1];\n+    USHORT          wTotalLength;\n+    UCHAR           _align_bmControls[2];\n     ULONG           bmControls;\n } UX_DEVICE_CLASS_AUDIO20_AC_HEADER_DESCRIPTOR;\n \n@@ -225,14 +231,14 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AC_HEADER_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_CLOCK_SOURCE_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bClockID;\n-    ULONG           bmAttributes;\n-    ULONG           bmControls;\n-    ULONG           bAssocTerminal;\n-    ULONG           iClockSource;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bClockID;\n+    UCHAR           bmAttributes;\n+    UCHAR           bmControls;\n+    UCHAR           bAssocTerminal;\n+    UCHAR           iClockSource;\n } UX_DEVICE_CLASS_AUDIO20_AC_CLOCK_SOURCE_DESCRIPTOR;\n \n \n@@ -241,18 +247,21 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AC_CLOCK_SOURCE_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_INPUT_TERMINAL_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bTerminalID;\n-    ULONG           wTerminalType;\n-    ULONG           bAssocTerminal;\n-    ULONG           bCSourceID;\n-    ULONG           bNrChannels;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bTerminalID;\n+    USHORT          wTerminalType;\n+    UCHAR           bAssocTerminal;\n+    UCHAR           bCSourceID;\n+    UCHAR           bNrChannels;\n+    UCHAR           _align_bmChannelConfig[3];\n     ULONG           bmChannelConfig;\n-    ULONG           iChannelNames;\n-    ULONG           bmControls;\n-    ULONG           iTerminal;\n+    UCHAR           iChannelNames;\n+    UCHAR           _align_bmControls[1];\n+    USHORT          bmControls;\n+    UCHAR           iTerminal;\n+    UCHAR           _align_size[3];\n } UX_DEVICE_CLASS_AUDIO20_AC_INPUT_TERMINAL_DESCRIPTOR;\n \n \n@@ -261,16 +270,18 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AC_INPUT_TERMINAL_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_OUTPUT_TERMINAL_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bTerminalID;\n-    ULONG           wTerminalType;\n-    ULONG           bAssocTerminal;\n-    ULONG           bSourceID;\n-    ULONG           bCSourceID;\n-    ULONG           bmControls;\n-    ULONG           iTerminal;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bTerminalID;\n+    USHORT          wTerminalType;\n+    UCHAR           bAssocTerminal;\n+    UCHAR           bSourceID;\n+    UCHAR           bCSourceID;\n+    UCHAR           _align_bmControls[1];\n+    USHORT          bmControls;\n+    UCHAR           iTerminal;\n+    UCHAR           _align_size[3];\n } UX_DEVICE_CLASS_AUDIO20_AC_OUTPUT_TERMINAL_DESCRIPTOR;\n \n \n@@ -279,34 +290,37 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AC_OUTPUT_TERMINAL_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           _align_bmaControls[3];\n     ULONG           bmaControls;\n } UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT1_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           _align_bmaControls[3];\n     ULONG           bmaControls0;\n     ULONG           bmaControls1;\n } UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT1_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT2_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           _align_bmaControls[3];\n     ULONG           bmaControls0;\n     ULONG           bmaControls1;\n     ULONG           bmaControls2;\n@@ -315,11 +329,12 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT2_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT3_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           _align_bmaControls[3];\n     ULONG           bmaControls0;\n     ULONG           bmaControls1;\n     ULONG           bmaControls2;\n@@ -329,11 +344,12 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT3_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT6_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           _align_bmaControls[3];\n     ULONG           bmaControls0;\n     ULONG           bmaControls1;\n     ULONG           bmaControls2;\n@@ -346,11 +362,12 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT6_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT7_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           _align_bmaControls[3];\n     ULONG           bmaControls0;\n     ULONG           bmaControls1;\n     ULONG           bmaControls2;\n@@ -364,11 +381,12 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT7_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT8_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           _align_bmaControls[3];\n     ULONG           bmaControls0;\n     ULONG           bmaControls1;\n     ULONG           bmaControls2;\n@@ -386,16 +404,19 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AC_FEATURE_UNIT8_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AS_INTERFACE_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bTerminalLink;\n-    ULONG           bmControls;\n-    ULONG           bFormatType;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bTerminalLink;\n+    UCHAR           bmControls;\n+    UCHAR           bFormatType;\n+    UCHAR           _align_bmFormats[2];\n     ULONG           bmFormats;\n-    ULONG           bNrChannels;\n+    UCHAR           bNrChannels;\n+    UCHAR           _align_bmChannelConfig[3];\n     ULONG           bmChannelConfig;\n-    ULONG           iChannelNames;\n+    UCHAR           iChannelNames;\n+    UCHAR           _align_size[3];\n } UX_DEVICE_CLASS_AUDIO20_AS_INTERFACE_DESCRIPTOR;\n \n \n@@ -404,12 +425,13 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AS_INTERFACE_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AS_TYPE_I_FORMAT_TYPE_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bFormatType;\n-    ULONG           bSubslotSize;\n-    ULONG           bBitResolution;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bFormatType;\n+    UCHAR           bSubslotSize;\n+    UCHAR           bBitResolution;\n+    UCHAR           _align_size[2];\n } UX_DEVICE_CLASS_AUDIO20_AS_TYPE_I_FORMAT_TYPE_DESCRIPTOR;\n \n \n@@ -418,13 +440,13 @@ typedef struct UX_DEVICE_CLASS_AUDIO20_AS_TYPE_I_FORMAT_TYPE_DESCRIPTOR_STRUCT\n typedef struct UX_DEVICE_CLASS_AUDIO20_AS_DATA_ENDPOINT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bmAttributes;\n-    ULONG           bmControls;\n-    ULONG           bLockDelayUnits;\n-    ULONG           wLockDelay;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bmAttributes;\n+    UCHAR           bmControls;\n+    UCHAR           bLockDelayUnits;\n+    USHORT          wLockDelay;\n } UX_DEVICE_CLASS_AUDIO20_AS_DATA_ENDPOINT_DESCRIPTOR;\n \n typedef struct UX_DEVICE_CLASS_AUDIO20_CONTROL_STRUCT"
        },
        {
            "filename": "common/usbx_host_classes/inc/ux_host_class_audio.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  COMPONENT DEFINITION                                   RELEASE        */\n /*                                                                        */\n /*    ux_host_class_audio.h                               PORTABLE C      */\n-/*                                                           6.1.12       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -57,6 +57,9 @@\n /*                                            added feedback support,     */\n /*                                            added Audio 2.0 support,    */\n /*                                            resulting in version 6.1.12 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -308,14 +311,14 @@ extern   \"C\" {\n typedef struct UX_HOST_CLASS_AUDIO_INTERFACE_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bFormatType;\n-    ULONG           bNrChannels;\n-    ULONG           bSubframeSize;\n-    ULONG           bBitResolution;\n-    ULONG           bSamFreqType;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bFormatType;\n+    UCHAR           bNrChannels;\n+    UCHAR           bSubframeSize;\n+    UCHAR           bBitResolution;\n+    UCHAR           bSamFreqType;\n } UX_HOST_CLASS_AUDIO_INTERFACE_DESCRIPTOR;\n \n \n@@ -324,16 +327,16 @@ typedef struct UX_HOST_CLASS_AUDIO_INTERFACE_DESCRIPTOR_STRUCT\n typedef struct UX_HOST_CLASS_AUDIO_INPUT_TERMINAL_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bTerminalID;\n-    ULONG           wTerminalType;\n-    ULONG           bAssocTerminal;\n-    ULONG           bNrChannels;\n-    ULONG           wChannelConfig;\n-    ULONG           iChannelNames;\n-    ULONG           iTerminal;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bTerminalID;\n+    USHORT          wTerminalType;\n+    UCHAR           bAssocTerminal;\n+    UCHAR           bNrChannels;\n+    USHORT          wChannelConfig;\n+    UCHAR           iChannelNames;\n+    UCHAR           iTerminal;\n } UX_HOST_CLASS_AUDIO_INPUT_TERMINAL_DESCRIPTOR;\n \n \n@@ -342,14 +345,15 @@ typedef struct UX_HOST_CLASS_AUDIO_INPUT_TERMINAL_DESCRIPTOR_STRUCT\n typedef struct UX_HOST_CLASS_AUDIO_OUTPUT_TERMINAL_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bTerminalID;\n-    ULONG           wTerminalType;\n-    ULONG           bAssocTerminal;\n-    ULONG           bSourceID;\n-    ULONG           iTerminal;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bTerminalID;\n+    USHORT          wTerminalType;\n+    UCHAR           bAssocTerminal;\n+    UCHAR           bSourceID;\n+    UCHAR           iTerminal;\n+    UCHAR           _align_size[3];\n } UX_HOST_CLASS_AUDIO_OUTPUT_TERMINAL_DESCRIPTOR;\n \n \n@@ -358,13 +362,14 @@ typedef struct UX_HOST_CLASS_AUDIO_OUTPUT_TERMINAL_DESCRIPTOR_STRUCT\n typedef struct UX_HOST_CLASS_AUDIO_FEATURE_UNIT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n-    ULONG           bControlSize;\n-    ULONG           bmaControls;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           bControlSize;\n+    UCHAR           bmaControls;\n+    UCHAR           _align_size[1];\n } UX_HOST_CLASS_AUDIO_FEATURE_UNIT_DESCRIPTOR;\n \n \n@@ -373,12 +378,13 @@ typedef struct UX_HOST_CLASS_AUDIO_FEATURE_UNIT_DESCRIPTOR_STRUCT\n typedef struct UX_HOST_CLASS_AUDIO_STREAMING_INTERFACE_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bTerminalLink;\n-    ULONG           bDelay;\n-    ULONG           wFormatTag;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bTerminalLink;\n+    UCHAR           bDelay;\n+    UCHAR           _align_wFormatTag[1];\n+    USHORT          wFormatTag;\n } UX_HOST_CLASS_AUDIO_STREAMING_INTERFACE_DESCRIPTOR;\n \n \n@@ -387,12 +393,13 @@ typedef struct UX_HOST_CLASS_AUDIO_STREAMING_INTERFACE_DESCRIPTOR_STRUCT\n typedef struct UX_HOST_CLASS_AUDIO_STREAMING_ENDPOINT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bmAttributes;\n-    ULONG           bLockDelayUnits;\n-    ULONG           wLockDelay;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bmAttributes;\n+    UCHAR           bLockDelayUnits;\n+    UCHAR           _align_wLockDelay[1];\n+    USHORT          wLockDelay;\n } UX_HOST_CLASS_AUDIO_STREAMING_ENDPOINT_DESCRIPTOR;\n \n "
        },
        {
            "filename": "common/usbx_host_classes/inc/ux_host_class_cdc_ecm.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  COMPONENT DEFINITION                                   RELEASE        */ \n /*                                                                        */ \n /*    ux_host_class_cdc_ecm.h                             PORTABLE C      */ \n-/*                                                           6.2.0        */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -60,6 +60,9 @@\n /*  10-31-2022     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            supported NX packet chain,  */\n /*                                            resulting in version 6.2.0  */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -311,14 +314,15 @@ typedef struct UX_HOST_CLASS_CDC_ECM_STRUCT\n \n typedef struct UX_HOST_CLASS_ECM_INTERFACE_DESCRIPTOR_STRUCT\n {\n-    ULONG           bFunctionLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           iMACAddress;\n+    UCHAR           bFunctionLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           iMACAddress;\n     ULONG           bmEthernetStatistics;\n-    ULONG           wMaxSegmentSize;\n-    ULONG           wNumberMCFilters;\n-    ULONG           bNumberPowerFilters;\n+    USHORT          wMaxSegmentSize;\n+    USHORT          wNumberMCFilters;\n+    UCHAR           bNumberPowerFilters;\n+    UCHAR           _align_size[3];\n } UX_HOST_CLASS_ECM_INTERFACE_DESCRIPTOR;\n \n /* Define CDC ECM Class function prototypes.  */"
        },
        {
            "filename": "common/usbx_host_classes/inc/ux_host_class_hid.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  COMPONENT DEFINITION                                   RELEASE        */ \n /*                                                                        */ \n /*    ux_host_class_hid.h                                 PORTABLE C      */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -55,6 +55,9 @@\n /*                                            added interrupt OUT support,*/\n /*                                            added standalone mode,      */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -789,13 +792,15 @@ extern   \"C\" {\n typedef struct UX_HID_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bcdHID;\n-    ULONG           bCountryCode;\n-    ULONG           bNumDescriptor;\n-    ULONG           bReportDescriptorType;\n-    ULONG           wItemLength;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    USHORT          bcdHID;\n+    UCHAR           bCountryCode;\n+    UCHAR           bNumDescriptor;\n+    UCHAR           bReportDescriptorType;\n+    UCHAR           _align_wItemLength[1];\n+    USHORT          wItemLength;\n+    UCHAR           _align_size[2];\n } UX_HID_DESCRIPTOR;\n \n "
        },
        {
            "filename": "common/usbx_host_classes/inc/ux_host_class_hub.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  COMPONENT DEFINITION                                   RELEASE        */ \n /*                                                                        */ \n /*    ux_host_class_hub.h                                 PORTABLE C      */ \n-/*                                                           6.1.12       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -50,6 +50,9 @@\n /*  07-29-2022     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            added standalone support,   */\n /*                                            resulting in version 6.1.12 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -188,14 +191,16 @@ extern   \"C\" {\n typedef struct UX_HUB_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bNbPorts;\n-    ULONG           wHubCharacteristics;\n-    ULONG           bPwrOn2PwrGood;\n-    ULONG           bHubContrCurrent;\n-    ULONG           bDeviceRemovable;\n-    ULONG           bPortPwrCtrlMask;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bNbPorts;\n+    UCHAR           _align_wHubCharacteristics[1];\n+    USHORT          wHubCharacteristics;\n+    UCHAR           bPwrOn2PwrGood;\n+    UCHAR           bHubContrCurrent;\n+    UCHAR           bDeviceRemovable;\n+    UCHAR           bPortPwrCtrlMask;\n+    UCHAR           _align_size[2];\n } UX_HUB_DESCRIPTOR;\n \n "
        },
        {
            "filename": "common/usbx_host_classes/inc/ux_host_class_video.h",
            "diff": "@@ -56,7 +56,8 @@\n /*                                            according to UVC 1.5 Class  */\n /*                                            specification,              */\n /*                                            resulting in version 6.1.8  */\n-/*  xx-xx-xxxx     Yajun xia                Modified comment(s),          */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            optimized USB descriptors,  */\n /*                                            added error checks support, */\n /*                                            resulting in version 6.x    */\n /*                                                                        */\n@@ -389,79 +390,81 @@ extern UCHAR _ux_system_host_class_video_name[];\n typedef struct UX_HOST_CLASS_VIDEO_INTERFACE_HEADER_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bcdUVC;\n-    ULONG           wTotalLength;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           _align_bcdUVC[1];\n+    USHORT          bcdUVC;\n+    USHORT          wTotalLength;\n     ULONG           dwClockFrequency;\n-    ULONG           bInCollection;\n-    ULONG           baInterfaceNr;\n+    UCHAR           bInCollection;\n+    UCHAR           baInterfaceNr;\n } UX_HOST_CLASS_VIDEO_INTERFACE_HEADER_DESCRIPTOR;\n \n /* Define Video Class specific input header interface descriptor.  */\n \n typedef struct UX_HOST_CLASS_VIDEO_INPUT_TERMINAL_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bTerminalID;\n-    ULONG           wTerminalType;\n-    ULONG           bAssocTerminal;\n-    ULONG           iTerminal;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bTerminalID;\n+    USHORT          wTerminalType;\n+    UCHAR           bAssocTerminal;\n+    UCHAR           iTerminal;\n } UX_HOST_CLASS_VIDEO_INPUT_TERMINAL_DESCRIPTOR;\n \n /* Define Video Class specific input header interface descriptor.  */\n \n typedef struct UX_HOST_CLASS_VIDEO_INPUT_HEADER_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubType;\n-    ULONG           bNumFormats;\n-    ULONG           wTotalLength;\n-    ULONG           bEndpointAddress;\n-    ULONG           bmInfo;\n-    ULONG           bTerminalLink;\n-    ULONG           bStillCaptureMethod;\n-    ULONG           bTriggerSupport;\n-    ULONG           bTriggerUsage;\n-    ULONG           bControlSize;\n-    ULONG           bmaControls;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubType;\n+    UCHAR           bNumFormats;\n+    USHORT          wTotalLength;\n+    UCHAR           bEndpointAddress;\n+    UCHAR           bmInfo;\n+    UCHAR           bTerminalLink;\n+    UCHAR           bStillCaptureMethod;\n+    UCHAR           bTriggerSupport;\n+    UCHAR           bTriggerUsage;\n+    UCHAR           bControlSize;\n+    UCHAR           bmaControls;\n } UX_HOST_CLASS_VIDEO_INPUT_HEADER_DESCRIPTOR;\n \n /* Define Video Class Selector descriptor.  */\n \n typedef struct UX_HOST_CLASS_VIDEO_SELECTOR_UNIT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bUnitID;\n-    ULONG           bNrInPins;\n-    ULONG           baSourceID;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bUnitID;\n+    UCHAR           bNrInPins;\n+    UCHAR           baSourceID;\n } UX_HOST_CLASS_VIDEO_SELECTOR_UNIT_DESCRIPTOR;\n \n /* Define Video Class Camera Terminal descriptor.  */\n \n typedef struct UX_HOST_CLASS_VIDEO_CAMERA_TERMINAL_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bTerminalID;\n-    ULONG           wTerminalType;\n-    ULONG           bAssocTerminal;\n-    ULONG           iTerminal;\n-    ULONG           wObjectiveFocalLengthMin;\n-    ULONG           wObjectiveFocalLengthMax;\n-    ULONG           wOcularFocalLength;\n-    ULONG           bControlSize;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bTerminalID;\n+    USHORT          wTerminalType;\n+    UCHAR           bAssocTerminal;\n+    UCHAR           iTerminal;\n+    USHORT          wObjectiveFocalLengthMin;\n+    USHORT          wObjectiveFocalLengthMax;\n+    USHORT          wOcularFocalLength;\n+    UCHAR           bControlSize;\n+    UCHAR           _align_bmControls[1];\n     ULONG           bmControls;\n } UX_HOST_CLASS_VIDEO_CAMERA_TERMINAL_DESCRIPTOR;\n \n@@ -470,18 +473,21 @@ typedef struct UX_HOST_CLASS_VIDEO_CAMERA_TERMINAL_DESCRIPTOR_STRUCT\n typedef struct UX_HOST_CLASS_VIDEO_FRAME_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bFrameIndex;\n-    ULONG           bmCapabilities;\n-    ULONG           wWidth;\n-    ULONG           wHeight;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bFrameIndex;\n+    UCHAR           bmCapabilities;\n+    UCHAR           _align_wWidth[1];\n+    USHORT          wWidth;\n+    USHORT          wHeight;\n+    UCHAR           _align_dwMinBitRate[2];\n     ULONG           dwMinBitRate;\n     ULONG           dwMaxBitRate;\n     ULONG           dwMaxVideoFrameBufferSize;\n     ULONG           dwDefaultFrameInterval;\n-    ULONG           bFrameIntervalType;\n+    UCHAR           bFrameIntervalType;\n+    UCHAR           _align_size[3];\n } UX_HOST_CLASS_VIDEO_FRAME_DESCRIPTOR;\n \n \n@@ -491,16 +497,17 @@ typedef struct UX_HOST_CLASS_VIDEO_FRAME_DESCRIPTOR_STRUCT\n typedef struct UX_HOST_CLASS_VIDEO_PROCESSING_UNIT_DESCRIPTOR_STRUCT\n {\n \n-    ULONG           bLength;\n-    ULONG           bDescriptorType;\n-    ULONG           bDescriptorSubtype;\n-    ULONG           bUnitID;\n-    ULONG           bSourceID;\n-    ULONG           wMaxMultiplier;\n-    ULONG           bControlSize;\n-    ULONG           bmControls;\n-    ULONG           iProcessing;\n-    ULONG           bmVideoStandards;\n+    UCHAR           bLength;\n+    UCHAR           bDescriptorType;\n+    UCHAR           bDescriptorSubtype;\n+    UCHAR           bUnitID;\n+    UCHAR           bSourceID;\n+    UCHAR           _align_wMaxMultiplier[1];\n+    USHORT          wMaxMultiplier;\n+    UCHAR           bControlSize;\n+    UCHAR           bmControls;\n+    UCHAR           iProcessing;\n+    UCHAR           bmVideoStandards;\n } UX_HOST_CLASS_VIDEO_PROCESSING_UNIT_DESCRIPTOR;\n \n "
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_asix_transmission_callback.c",
            "diff": "@@ -35,7 +35,7 @@\n /*  FUNCTION                                               RELEASE        */ \n /*                                                                        */ \n /*    _ux_host_class_asix_transmission_callback           PORTABLE C      */ \n-/*                                                           6.2.0        */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -81,6 +81,10 @@\n /*                                            supported NX packet chain,  */\n /*                                            fixed empty queue handling, */\n /*                                            resulting in version 6.2.0  */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            improved 64-bit support,    */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n VOID  _ux_host_class_asix_transmission_callback (UX_TRANSFER *transfer_request)\n@@ -158,7 +162,7 @@ ULONG                           copied;\n         if (next_packet -> nx_packet_next)\n         {\n \n-            next_packet -> nx_packet_length += sizeof(USHORT) * 2;\n+            next_packet -> nx_packet_length += (ULONG)sizeof(USHORT) * 2;\n             next_packet -> nx_packet_prepend_ptr -= sizeof(USHORT) * 2;\n             nx_packet_data_extract_offset(next_packet, 0, asix -> ux_host_class_asix_xmit_buffer, next_packet -> nx_packet_length, &copied);\n \n@@ -167,7 +171,7 @@ ULONG                           copied;\n             transfer_request -> ux_transfer_request_data_pointer = asix -> ux_host_class_asix_xmit_buffer;\n \n             /* Restore packet status.  */\n-            next_packet -> nx_packet_length -= sizeof(USHORT) * 2;\n+            next_packet -> nx_packet_length -= (ULONG)sizeof(USHORT) * 2;\n             next_packet -> nx_packet_prepend_ptr += sizeof(USHORT) * 2;\n         }\n         else"
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_asix_write.c",
            "diff": "@@ -35,7 +35,7 @@\n /*  FUNCTION                                               RELEASE        */ \n /*                                                                        */ \n /*    _ux_host_class_asix_write                           PORTABLE C      */ \n-/*                                                           6.2.0        */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -82,6 +82,10 @@\n /*                                            added queue modify protect, */\n /*                                            improved error check,       */\n /*                                            resulting in version 6.2.0  */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            improved 64-bit support,    */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_host_class_asix_write(VOID *asix_class, NX_PACKET *packet)\n@@ -174,7 +178,7 @@ ULONG               copied;\n         UX_RESTORE\n         return(UX_MATH_OVERFLOW);\n     }\n-    adjusted_length = packet -> nx_packet_length + sizeof(USHORT) * 2;\n+    adjusted_length = packet -> nx_packet_length + (ULONG)sizeof(USHORT) * 2;\n     if (adjusted_length > UX_HOST_CLASS_ASIX_TRANSMIT_BUFFER_SIZE)\n     {\n \n@@ -233,7 +237,7 @@ ULONG               copied;\n             transfer_request -> ux_transfer_request_data_pointer = asix -> ux_host_class_asix_xmit_buffer;\n \n             /* Restore packet status.  */\n-            packet -> nx_packet_length -= sizeof(USHORT) * 2;\n+            packet -> nx_packet_length -= (ULONG)sizeof(USHORT) * 2;\n             packet -> nx_packet_prepend_ptr += sizeof(USHORT) * 2;\n         }\n         else"
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_cdc_ecm_mac_address_get.c",
            "diff": "@@ -103,7 +103,7 @@ UCHAR                                       element_hexa_lower;\n \n     /* We now need to retrieve the MAC address of the node which is embedded in the ECM descriptor.\n        We will parse the entire configuration descriptor of the device and look for the ECM Ethernet Networking Functional Descriptor.  */ \n-    configuration_index = cdc_ecm -> ux_host_class_cdc_ecm_interface_data -> ux_interface_configuration -> ux_configuration_descriptor.bConfigurationValue -1;\n+    configuration_index = (ULONG)cdc_ecm -> ux_host_class_cdc_ecm_interface_data -> ux_interface_configuration -> ux_configuration_descriptor.bConfigurationValue -1;\n        \n     /* We need to get the default control endpoint transfer request pointer.  */\n     control_endpoint =  &cdc_ecm -> ux_host_class_cdc_ecm_device -> ux_device_control_endpoint;"
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_hub_descriptor_get.c",
            "diff": "@@ -49,7 +49,7 @@ ULONG           port_index;\n                                                             (UCHAR *) &hub -> ux_host_class_hub_descriptor);\n \n     /* Check the protocol used by the HUB. This will indicate if the HUB supports multiple TTs in high speed mode.  */\n-    tt_protocols = (hub -> ux_host_class_hub_device -> ux_device_descriptor.bDeviceProtocol << 8) |\n+    tt_protocols = ((ULONG)hub -> ux_host_class_hub_device -> ux_device_descriptor.bDeviceProtocol << 8) |\n                     hub -> ux_host_class_hub_interface -> ux_interface_descriptor.bInterfaceProtocol;\n     switch(tt_protocols)\n     {\n@@ -129,7 +129,7 @@ ULONG           port_index;\n /*  FUNCTION                                               RELEASE        */ \n /*                                                                        */ \n /*    _ux_host_class_hub_descriptor_get                   PORTABLE C      */ \n-/*                                                           6.1.12       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -174,6 +174,9 @@ ULONG           port_index;\n /*  07-29-2022     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            added standalone support,   */\n /*                                            resulting in version 6.1.12 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_host_class_hub_descriptor_get(UX_HOST_CLASS_HUB *hub)"
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_hub_entry.c",
            "diff": "@@ -41,7 +41,7 @@ static inline UINT _ux_host_class_hub_activate_wait(UX_HOST_CLASS_COMMAND *comma\n /*  FUNCTION                                               RELEASE        */\n /*                                                                        */\n /*    _ux_host_class_hub_entry                            PORTABLE C      */\n-/*                                                           6.2.0        */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -84,6 +84,9 @@ static inline UINT _ux_host_class_hub_activate_wait(UX_HOST_CLASS_COMMAND *comma\n /*  10-31-2022     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            fixed power on delay calc,  */\n /*                                            resulting in version 6.2.0  */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_host_class_hub_entry(UX_HOST_CLASS_COMMAND *command)\n@@ -359,7 +362,7 @@ ULONG                   current_ms, elapsed_ms;\n \n             /* Delay a while (as described by hub descriptor).  */\n             hub -> ux_host_class_hub_wait_start = _ux_utility_time_get();\n-            hub -> ux_host_class_hub_wait_ms = UX_MS_TO_TICK_NON_ZERO(hub -> ux_host_class_hub_descriptor.bPwrOn2PwrGood << 1);\n+            hub -> ux_host_class_hub_wait_ms = UX_MS_TO_TICK_NON_ZERO((ULONG)hub -> ux_host_class_hub_descriptor.bPwrOn2PwrGood << 1);\n \n             hub -> ux_host_class_hub_enum_state = UX_HOST_CLASS_HUB_ENUM_TRANS_WAIT;\n             hub -> ux_host_class_hub_next_state = UX_HOST_CLASS_HUB_ENUM_PORT_POWER_ON;"
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_pima_device_info_get.c",
            "diff": "@@ -35,7 +35,7 @@\n /*  FUNCTION                                               RELEASE        */\n /*                                                                        */\n /*    _ux_host_class_pima_device_info_get                 PORTABLE C      */\n-/*                                                           6.1.12       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -79,6 +79,9 @@\n /*  07-29-2022     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            fixed DeviceInfo extract,   */\n /*                                            resulting in version 6.1.12 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_host_class_pima_device_info_get(UX_HOST_CLASS_PIMA *pima,\n@@ -169,7 +172,7 @@ UINT                                 status;\n             else\n             {\n                 array_length <<= 1;\n-                array_length += sizeof(ULONG);\n+                array_length += (ULONG)sizeof(ULONG);\n             }\n         }\n \n@@ -190,7 +193,7 @@ UINT                                 status;\n             else\n             {\n                 array_length <<= 1;\n-                array_length += sizeof(ULONG);\n+                array_length += (ULONG)sizeof(ULONG);\n             }\n         }\n \n@@ -211,7 +214,7 @@ UINT                                 status;\n             else\n             {\n                 array_length <<= 1;\n-                array_length += sizeof(ULONG);\n+                array_length += (ULONG)sizeof(ULONG);\n             }\n         }\n \n@@ -232,7 +235,7 @@ UINT                                 status;\n             else\n             {\n                 array_length <<= 1;\n-                array_length += sizeof(ULONG);\n+                array_length += (ULONG)sizeof(ULONG);\n             }\n         }\n \n@@ -253,7 +256,7 @@ UINT                                 status;\n             else\n             {\n                 array_length <<= 1;\n-                array_length += sizeof(ULONG);\n+                array_length += (ULONG)sizeof(ULONG);\n             }\n         }\n "
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_pima_object_info_get.c",
            "diff": "@@ -35,7 +35,7 @@\n /*  FUNCTION                                               RELEASE        */\n /*                                                                        */\n /*    _ux_host_class_pima_object_info_get                 PORTABLE C      */\n-/*                                                           6.1          */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -76,6 +76,10 @@\n /*                                            verified memset and memcpy  */\n /*                                            cases,                      */\n /*                                            resulting in version 6.1    */\n+/*  xx-xx-xxxx     Yajun Xia                Modified comment(s),          */\n+/*                                            fixed allocated buffer      */\n+/*                                            pointer checking issue,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_host_class_pima_object_info_get(UX_HOST_CLASS_PIMA *pima,\n@@ -117,7 +121,7 @@ UINT                                 status;\n \n     /* Allocate some DMA safe memory for receiving the object info block.  */\n     object_buffer =  _ux_utility_memory_allocate(UX_SAFE_ALIGN, UX_CACHE_SAFE_MEMORY, UX_HOST_CLASS_PIMA_OBJECT_MAX_LENGTH);\n-    if (object == UX_NULL)\n+    if (object_buffer == UX_NULL)\n         return(UX_MEMORY_INSUFFICIENT);\n \n     /* Issue the command.  */"
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_pima_object_info_send.c",
            "diff": "@@ -35,7 +35,7 @@\n /*  FUNCTION                                               RELEASE        */\n /*                                                                        */\n /*    _ux_host_class_pima_object_info_send                PORTABLE C      */\n-/*                                                           6.1          */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -78,6 +78,10 @@\n /*                                            verified memset and memcpy  */\n /*                                            cases,                      */\n /*                                            resulting in version 6.1    */\n+/*  xx-xx-xxxx     Yajun Xia                Modified comment(s),          */\n+/*                                            fixed allocated buffer      */\n+/*                                            pointer checking issue,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_host_class_pima_object_info_send(UX_HOST_CLASS_PIMA *pima,\n@@ -125,7 +129,7 @@ UINT                                 status;\n \n     /* Allocate some DMA safe memory for sending the object info block.  */\n     object_buffer =  _ux_utility_memory_allocate(UX_SAFE_ALIGN, UX_CACHE_SAFE_MEMORY, UX_HOST_CLASS_PIMA_OBJECT_MAX_LENGTH);\n-    if (object == UX_NULL)\n+    if (object_buffer == UX_NULL)\n         return(UX_MEMORY_INSUFFICIENT);\n \n     /* Get the end of the object buffer.  */"
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_printer_device_id_get.c",
            "diff": "@@ -35,7 +35,7 @@\n /*  FUNCTION                                               RELEASE        */\n /*                                                                        */\n /*    _ux_host_class_printer_device_id_get                PORTABLE C      */\n-/*                                                           6.1.12       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -83,6 +83,9 @@\n /*                                            fixed parameter/variable    */\n /*                                            names conflict C++ keyword, */\n /*                                            resulting in version 6.1.12 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_host_class_printer_device_id_get(UX_HOST_CLASS_PRINTER *printer, UCHAR *descriptor_buffer, ULONG length)\n@@ -142,7 +145,7 @@ UINT                 status;\n     transfer_request -> ux_transfer_request_function =          UX_HOST_CLASS_PRINTER_GET_DEVICE_ID;\n     transfer_request -> ux_transfer_request_type =              UX_REQUEST_IN | UX_REQUEST_TYPE_CLASS | UX_REQUEST_TARGET_INTERFACE;\n     transfer_request -> ux_transfer_request_value =             0; /* Do not support multiple configuration for now.  */\n-    transfer_request -> ux_transfer_request_index =             (interface_ptr -> ux_interface_descriptor.bInterfaceNumber  << 8) |\n+    transfer_request -> ux_transfer_request_index =             ((UINT)interface_ptr -> ux_interface_descriptor.bInterfaceNumber  << 8) |\n                                                                 (interface_ptr -> ux_interface_descriptor.bAlternateSetting     );\n \n #if defined(UX_HOST_STANDALONE)"
        },
        {
            "filename": "common/usbx_host_classes/src/ux_host_class_printer_name_get.c",
            "diff": "@@ -125,7 +125,7 @@ UINT            printer_name_length;\n /*  FUNCTION                                               RELEASE        */\n /*                                                                        */\n /*    _ux_host_class_printer_name_get                     PORTABLE C      */\n-/*                                                           6.1.12       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -176,6 +176,9 @@ UINT            printer_name_length;\n /*                                            fixed parameter/variable    */\n /*                                            names conflict C++ keyword, */\n /*                                            resulting in version 6.1.12 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_host_class_printer_name_get(UX_HOST_CLASS_PRINTER *printer)\n@@ -210,7 +213,7 @@ UINT            status;\n     transfer_request -> ux_transfer_request_function =          UX_HOST_CLASS_PRINTER_GET_DEVICE_ID;\n     transfer_request -> ux_transfer_request_type =              UX_REQUEST_IN | UX_REQUEST_TYPE_CLASS | UX_REQUEST_TARGET_INTERFACE;\n     transfer_request -> ux_transfer_request_value =             0; /* Do not support multiple configuration for now.  */\n-    transfer_request -> ux_transfer_request_index =             (interface_ptr -> ux_interface_descriptor.bInterfaceNumber  << 8) |\n+    transfer_request -> ux_transfer_request_index =             ((UINT)interface_ptr -> ux_interface_descriptor.bInterfaceNumber  << 8) |\n                                                                 (interface_ptr -> ux_interface_descriptor.bAlternateSetting     );\n \n #if defined(UX_HOST_STANDALONE)"
        },
        {
            "filename": "common/usbx_host_controllers/src/ux_hcd_ehci_asynchronous_endpoint_create.c",
            "diff": "@@ -35,7 +35,7 @@\n /*  FUNCTION                                               RELEASE        */ \n /*                                                                        */ \n /*    _ux_hcd_ehci_asynchronous_endpoint_create           PORTABLE C      */ \n-/*                                                           6.1.2        */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -75,6 +75,9 @@\n /*  11-09-2020     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            fixed compile warnings,     */\n /*                                            resulting in version 6.1.2  */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_hcd_ehci_asynchronous_endpoint_create(UX_HCD_EHCI *hcd_ehci, UX_ENDPOINT *endpoint)\n@@ -102,7 +105,7 @@ UX_EHCI_LINK_POINTER    queue_head;\n     ed -> REF_AS.INTR.ux_ehci_ed_endpoint =  endpoint;\n \n     /* Set the default MPS Capability info in the ED.  */\n-    ed -> ux_ehci_ed_cap0 =  endpoint -> ux_endpoint_descriptor.wMaxPacketSize << UX_EHCI_QH_MPS_LOC;\n+    ed -> ux_ehci_ed_cap0 =  (ULONG)endpoint -> ux_endpoint_descriptor.wMaxPacketSize << UX_EHCI_QH_MPS_LOC;\n     \n     /* Set the default NAK reload count.  */\n     ed -> ux_ehci_ed_cap0 |=  UX_EHCI_QH_NCR;"
        },
        {
            "filename": "common/usbx_host_controllers/src/ux_hcd_ehci_isochronous_endpoint_create.c",
            "diff": "@@ -35,7 +35,7 @@\n /*  FUNCTION                                               RELEASE        */\n /*                                                                        */\n /*    _ux_hcd_ehci_isochronous_endpoint_create            PORTABLE C      */\n-/*                                                           6.1.11       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -87,6 +87,9 @@\n /*  04-25-2022     Chaoqiong Xiao           Modified comment(s),          */\n /*                                            fixed standalone compile,   */\n /*                                            resulting in version 6.1.11 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_hcd_ehci_isochronous_endpoint_create(UX_HCD_EHCI *hcd_ehci, UX_ENDPOINT *endpoint)\n@@ -171,7 +174,7 @@ UINT                            status;\n     endpoint -> ux_endpoint_transfer_request.ux_transfer_request_maximum_length = max_trans_size;\n \n     /* Get the Endpt, Device Address, I/O, Maximum Packet Size, Mult.  */\n-    endpt = (endpoint -> ux_endpoint_descriptor.bEndpointAddress << UX_EHCI_HSISO_ENDPT_SHIFT) & UX_EHCI_HSISO_ENDPT_MASK;\n+    endpt = ((ULONG)endpoint -> ux_endpoint_descriptor.bEndpointAddress << UX_EHCI_HSISO_ENDPT_SHIFT) & UX_EHCI_HSISO_ENDPT_MASK;\n     device_address = device -> ux_device_address & UX_EHCI_HSISO_DEVICE_ADDRESS_MASK;\n     io = (endpoint -> ux_endpoint_descriptor.bEndpointAddress & UX_ENDPOINT_DIRECTION) ? UX_EHCI_HSISO_DIRECTION_IN : UX_EHCI_HSISO_DIRECTION_OUT;\n "
        },
        {
            "filename": "common/usbx_host_controllers/src/ux_hcd_ehci_request_control_transfer.c",
            "diff": "@@ -35,7 +35,7 @@\n /*  FUNCTION                                               RELEASE        */ \n /*                                                                        */ \n /*    _ux_hcd_ehci_request_control_transfer               PORTABLE C      */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*  AUTHOR                                                                */\n /*                                                                        */\n /*    Chaoqiong Xiao, Microsoft Corporation                               */\n@@ -86,6 +86,9 @@\n /*                                            refined macros names,       */\n /*                                            fixed compile warnings,     */\n /*                                            resulting in version 6.1.2  */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            fixed compile warnings,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n UINT  _ux_hcd_ehci_request_control_transfer(UX_HCD_EHCI *hcd_ehci, UX_TRANSFER *transfer_request)\n@@ -131,7 +134,7 @@ UINT            pid;\n \n     /* Set the default MPS Capability info in the ED.  */\n     ed -> ux_ehci_ed_cap0 &=  ~UX_EHCI_QH_MPS_MASK;\n-    ed -> ux_ehci_ed_cap0 |=  endpoint -> ux_endpoint_descriptor.wMaxPacketSize << UX_EHCI_QH_MPS_LOC;\n+    ed -> ux_ehci_ed_cap0 |=  (ULONG)endpoint -> ux_endpoint_descriptor.wMaxPacketSize << UX_EHCI_QH_MPS_LOC;\n \n     /* On Control transfers, the toggle is set in the TD, not the QH.  */\n     ed -> ux_ehci_ed_cap0 |=  UX_EHCI_QH_DTC;"
        },
        {
            "filename": "ports/arm9/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                            ARM9/GNU       */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/arm9/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                            ARM9/IAR       */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a15/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-A15/GNU    */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a5/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-A5/GNU     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a5/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-A5/IAR     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a5x/ac6/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-A5x/AC6    */ \n-/*                                                           6.1.10       */ \n+/*                                                           6.x          */ \n /*                                                                        */\n /*  AUTHOR                                                                */ \n /*                                                                        */ \n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */ \n /**************************************************************************/ \n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a7/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-A7/GNU     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a7/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-A7/IAR     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a8/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-A8/GNU     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a8/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-A8/IAR     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a9/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                            ARM9/GNU       */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_a9/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                            ARM9/IAR       */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_m0/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                          Cortex-M0/GNU    */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -48,6 +48,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -82,7 +86,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -91,10 +96,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -112,7 +123,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_m0/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-M0/IAR     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_m3/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                          Cortex-M3/GNU    */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -48,6 +48,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -82,7 +86,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -91,10 +96,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -112,7 +123,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_m3/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-M3/IAR     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_m4/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                          Cortex-M4/GNU    */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -48,6 +48,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -82,7 +86,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -91,10 +96,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -112,7 +123,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_m4/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-M4/IAR     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_m7/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                          Cortex-M7/GNU    */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -48,6 +48,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -82,7 +86,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -91,10 +96,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -112,7 +123,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_m7/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-M7/IAR     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_r4/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-R4/GNU     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_r4/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-R4/IAR     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_r5/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-R5/GNU     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/cortex_r5/iar/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                         Cortex-R5/IAR     */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,7 +84,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -89,10 +94,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +121,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/generic/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                            Generic        */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -80,19 +84,27 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n-typedef char                                    CHAR;\n-typedef unsigned char                           UCHAR;\n-typedef int                                     INT;\n-typedef unsigned int                            UINT;\n-typedef long                                    LONG;\n-typedef unsigned long                           ULONG;\n-typedef short                                   SHORT;\n-typedef unsigned short                          USHORT;\n+\n+#ifndef VOID \n+#define VOID                                      void\n+typedef char                                      CHAR;\n+typedef unsigned char                             UCHAR;\n+typedef int                                       INT;\n+typedef unsigned int                              UINT;\n+typedef long                                      LONG;\n+typedef unsigned long                             ULONG;\n+typedef short                                     SHORT;\n+typedef unsigned short                            USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -110,7 +122,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        },
        {
            "filename": "ports/linux/gnu/inc/ux_port.h",
            "diff": "@@ -26,7 +26,7 @@\n /*  PORT SPECIFIC C INFORMATION                            RELEASE        */ \n /*                                                                        */ \n /*    ux_port.h                                           Linux/GNU       */ \n-/*                                                           6.1.10       */\n+/*                                                           6.x          */\n /*                                                                        */\n /*  AUTHOR                                                                */\n /*                                                                        */\n@@ -46,6 +46,10 @@\n /*                                            moved tx_api.h include and  */\n /*                                            typedefs from ux_api.h,     */\n /*                                            resulting in version 6.1.10 */\n+/*  xx-xx-xxxx     Chaoqiong Xiao           Modified comment(s),          */\n+/*                                            added basic types guards,   */\n+/*                                            improved SLONG typedef,     */\n+/*                                            resulting in version 6.x    */\n /*                                                                        */\n /**************************************************************************/\n \n@@ -86,7 +90,8 @@\n #if !defined(TX_API_H) && !defined(TX_PORT_H)\n \n #include <stdint.h>\n-typedef void                                    VOID;\n+#ifndef VOID\n+#define VOID                                    void\n typedef char                                    CHAR;\n typedef unsigned char                           UCHAR;\n typedef int                                     INT;\n@@ -95,10 +100,16 @@ typedef long                                    LONG;\n typedef unsigned long                           ULONG;\n typedef short                                   SHORT;\n typedef unsigned short                          USHORT;\n+#endif\n+\n+#ifndef ULONG64_DEFINED\n typedef uint64_t                                ULONG64;\n+#define ULONG64_DEFINED\n+#endif\n \n #ifndef ALIGN_TYPE_DEFINED\n #define ALIGN_TYPE                              ULONG\n+#define ALIGN_TYPE_DEFINED\n #endif\n \n #endif\n@@ -116,7 +127,10 @@ typedef uint64_t                                ULONG64;\n \n /* Define additional generic USBX types.  */\n \n-typedef long                        SLONG;\n+#ifndef SLONG_DEFINED\n+typedef LONG                        SLONG;\n+#define SLONG_DEFINED\n+#endif\n \n \n /*  Generic USBX Project constants follow.  */"
        }
    ],
    "commitTime": "2023-05-12 07:01:07"
}