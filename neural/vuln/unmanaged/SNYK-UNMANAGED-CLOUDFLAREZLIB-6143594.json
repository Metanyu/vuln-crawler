{
    "CVSSv3": {
        "CVSS": "3.1",
        "attackVector": "LOCAL",
        "attackComplexity": "HIGH",
        "privilegesRequired": "NONE",
        "userInteraction": "NONE",
        "scope": "UNCHANGED",
        "confidentiality": "NONE",
        "integrity": "LOW",
        "availability": "LOW"
    },
    "credit": [
        "Unknown"
    ],
    "cvssDetails": [],
    "cvssScore": 4,
    "disclosureTime": "2024-01-04 12:44:37",
    "epssDetails": null,
    "exploitMaturity": "Not Defined",
    "id": "SNYK-UNMANAGED-CLOUDFLAREZLIB-6143594",
    "identifiers": {
        "CVE": [
            "CVE-2023-6992"
        ],
        "CWE": [
            "CWE-20"
        ]
    },
    "language": "cpp",
    "malicious": false,
    "packageManager": "unmanaged",
    "publicationTime": "2024-01-04 15:43:32",
    "remediation": "A fix was pushed into the master branch but not yet published. ",
    "severity": "medium",
    "socialTrendAlert": false,
    "title": "Improper Input Validation",
    "vulnDescription": {
        "Overview": "Affected versions of this package are vulnerable to Improper Input Validation in the deflate algorithm. A local attacker could exploit the problem during compression using a crafted malicious file potentially leading to denial of service of the software. "
    },
    "source_code": [
        {
            "filename": "deflate.c",
            "diff": "@@ -1137,7 +1137,7 @@ static uint32_t longest_match(deflate_state *s, IPos cur_match /* current match\n     register uint8_t *scan = s->window + s->strstart; /* current string */\n     register uint8_t *match;                          /* matched string */\n     register int len;                                 /* length of current match */\n-    int best_len = s->prev_length;                    /* best match length so far */\n+    int best_len = (s->prev_length == 0) ? ACTUAL_MIN_MATCH-1 : s->prev_length;                    /* best match length so far */\n     int nice_match = s->nice_match;                   /* stop if match long enough */\n     IPos limit = s->strstart > (IPos)MAX_DIST(s) ?\n         s->strstart - (IPos)MAX_DIST(s) : NIL;\n@@ -1467,8 +1467,8 @@ static block_state deflate_stored(deflate_state *s, int flush)\n     uint64_t max_block_size = 0xffff;\n     uint64_t max_start;\n \n-    if (max_block_size > s->pending_buf_size - 5) {\n-        max_block_size = s->pending_buf_size - 5;\n+    if (max_block_size > s->pending_buf_size - 6) {\n+        max_block_size = s->pending_buf_size - 6;\n     }\n \n     /* Copy as much as possible from input to output: */\n@@ -1688,7 +1688,7 @@ static block_state deflate_slow(deflate_state *s, int flush) {\n                 insert_cnt = max_insert - s->strstart;\n \n             bulk_insert_str(s, s->strstart + 1, insert_cnt);\n-            s->prev_length = 0;\n+            s->prev_length = ACTUAL_MIN_MATCH-1;\n             s->match_available = 0;\n             s->match_length = ACTUAL_MIN_MATCH-1;\n             s->strstart += mov_fwd + 1;"
        }
    ],
    "commitTime": "2023-11-16 16:40:29"
}