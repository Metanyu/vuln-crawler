{
    "CVSSv3": {
        "CVSS": "3.1",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "privilegesRequired": "HIGH",
        "userInteraction": "NONE",
        "scope": "CHANGED",
        "confidentiality": "LOW",
        "integrity": "LOW",
        "availability": "LOW"
    },
    "credit": [
        "Unknown"
    ],
    "cvssDetails": [
        {
            "assigner": "NVD",
            "cvssV3BaseScore": 8.8,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "LOW",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "HIGH",
                "integrity": "HIGH",
                "availability": "HIGH"
            },
            "severity": "high"
        },
        {
            "assigner": "Red Hat",
            "cvssV3BaseScore": 6.6,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "HIGH",
                "userInteraction": "NONE",
                "scope": "CHANGED",
                "confidentiality": "LOW",
                "integrity": "LOW",
                "availability": "LOW"
            },
            "severity": "medium"
        }
    ],
    "cvssScore": 6.6,
    "disclosureTime": "2023-12-23 23:48:36",
    "epssDetails": {
        "modelVersion": "v2023.03.01",
        "percentile": "0.12298",
        "probability": "0.00045"
    },
    "exploitMaturity": "Not Defined",
    "id": "SNYK-UNMANAGED-SUDO-6139284",
    "identifiers": {
        "CVE": [
            "CVE-2023-7090"
        ],
        "CWE": [
            "CWE-270"
        ]
    },
    "language": "cpp",
    "malicious": false,
    "packageManager": "unmanaged",
    "publicationTime": "2023-12-25 13:46:43",
    "remediation": "Upgrade sudo to version 1.8.28 or higher. ",
    "severity": "medium",
    "socialTrendAlert": false,
    "title": "Privilege Context Switching Error",
    "vulnDescription": {
        "Overview": "Affected versions of this package are vulnerable to Privilege Context Switching Error due to the mishandling of ipa_hostname from /etc/sssd/sssd.conf , which is not properly propagated. As a result, client hosts may retain privileges even after such privileges have been retracted. "
    },
    "source_code": [
        {
            "filename": "plugins/sudoers/file.c",
            "diff": "@@ -85,7 +85,7 @@ sudo_file_open(struct sudo_nss *nss)\n     if (handle != NULL) {\n \thandle->fp = open_sudoers(sudoers_file, false, NULL);\n \tif (handle->fp != NULL) {\n-\t    init_parse_tree(&handle->parse_tree);\n+\t    init_parse_tree(&handle->parse_tree, NULL, NULL);\n \t} else {\n \t    free(handle);\n \t    handle = NULL;"
        },
        {
            "filename": "plugins/sudoers/gram.c",
            "diff": "@@ -106,7 +106,9 @@ char *errorfile = NULL;\n struct sudoers_parse_tree parsed_policy = {\n     TAILQ_HEAD_INITIALIZER(parsed_policy.userspecs),\n     TAILQ_HEAD_INITIALIZER(parsed_policy.defaults),\n-    NULL /* aliases */\n+    NULL, /* aliases */\n+    NULL, /* lhost */\n+    NULL /* shost */\n };\n \n /*\n@@ -118,7 +120,7 @@ static bool add_userspec(struct member *, struct privilege *);\n static struct defaults *new_default(char *, char *, short);\n static struct member *new_member(char *, int);\n static struct command_digest *new_digest(int, char *);\n-#line 80 \"gram.y\"\n+#line 82 \"gram.y\"\n #ifndef YYSTYPE_DEFINED\n #define YYSTYPE_DEFINED\n typedef union {\n@@ -135,7 +137,7 @@ typedef union {\n     int tok;\n } YYSTYPE;\n #endif /* YYSTYPE_DEFINED */\n-#line 133 \"gram.c\"\n+#line 135 \"gram.c\"\n #define COMMAND 257\n #define ALIAS 258\n #define DEFVAR 259\n@@ -675,7 +677,7 @@ short *yysslim;\n YYSTYPE *yyvs;\n unsigned int yystacksize;\n int yyparse(void);\n-#line 906 \"gram.y\"\n+#line 908 \"gram.y\"\n void\n sudoerserror(const char *s)\n {\n@@ -1019,11 +1021,14 @@ free_userspec(struct userspec *us)\n  * Initialized a sudoers parse tree.\n  */\n void\n-init_parse_tree(struct sudoers_parse_tree *parse_tree)\n+init_parse_tree(struct sudoers_parse_tree *parse_tree, const char *lhost,\n+    const char *shost)\n {\n     TAILQ_INIT(&parse_tree->userspecs);\n     TAILQ_INIT(&parse_tree->defaults);\n     parse_tree->aliases = NULL;\n+    parse_tree->shost = shost;\n+    parse_tree->lhost = lhost;\n }\n \n /*\n@@ -1100,7 +1105,7 @@ init_options(struct command_options *opts)\n     opts->limitprivs = NULL;\n #endif\n }\n-#line 1046 \"gram.c\"\n+#line 1051 \"gram.c\"\n /* allocate initial stack or double stack size, up to YYMAXDEPTH */\n #if defined(__cplusplus) || defined(__STDC__)\n static int yygrowstack(void)\n@@ -1309,23 +1314,23 @@ yyparse()\n     switch (yyn)\n     {\n case 1:\n-#line 178 \"gram.y\"\n+#line 180 \"gram.y\"\n { ; }\n break;\n case 5:\n-#line 186 \"gram.y\"\n+#line 188 \"gram.y\"\n {\n \t\t\t    ;\n \t\t\t}\n break;\n case 6:\n-#line 189 \"gram.y\"\n+#line 191 \"gram.y\"\n {\n \t\t\t    yyerrok;\n \t\t\t}\n break;\n case 7:\n-#line 192 \"gram.y\"\n+#line 194 \"gram.y\"\n {\n \t\t\t    if (!add_userspec(yyvsp[-1].member, yyvsp[0].privilege)) {\n \t\t\t\tsudoerserror(N_(\"unable to allocate memory\"));\n@@ -1334,73 +1339,73 @@ case 7:\n \t\t\t}\n break;\n case 8:\n-#line 198 \"gram.y\"\n+#line 200 \"gram.y\"\n {\n \t\t\t    ;\n \t\t\t}\n break;\n case 9:\n-#line 201 \"gram.y\"\n+#line 203 \"gram.y\"\n {\n \t\t\t    ;\n \t\t\t}\n break;\n case 10:\n-#line 204 \"gram.y\"\n+#line 206 \"gram.y\"\n {\n \t\t\t    ;\n \t\t\t}\n break;\n case 11:\n-#line 207 \"gram.y\"\n+#line 209 \"gram.y\"\n {\n \t\t\t    ;\n \t\t\t}\n break;\n case 12:\n-#line 210 \"gram.y\"\n+#line 212 \"gram.y\"\n {\n \t\t\t    if (!add_defaults(DEFAULTS, NULL, yyvsp[0].defaults))\n \t\t\t\tYYERROR;\n \t\t\t}\n break;\n case 13:\n-#line 214 \"gram.y\"\n+#line 216 \"gram.y\"\n {\n \t\t\t    if (!add_defaults(DEFAULTS_USER, yyvsp[-1].member, yyvsp[0].defaults))\n \t\t\t\tYYERROR;\n \t\t\t}\n break;\n case 14:\n-#line 218 \"gram.y\"\n+#line 220 \"gram.y\"\n {\n \t\t\t    if (!add_defaults(DEFAULTS_RUNAS, yyvsp[-1].member, yyvsp[0].defaults))\n \t\t\t\tYYERROR;\n \t\t\t}\n break;\n case 15:\n-#line 222 \"gram.y\"\n+#line 224 \"gram.y\"\n {\n \t\t\t    if (!add_defaults(DEFAULTS_HOST, yyvsp[-1].member, yyvsp[0].defaults))\n \t\t\t\tYYERROR;\n \t\t\t}\n break;\n case 16:\n-#line 226 \"gram.y\"\n+#line 228 \"gram.y\"\n {\n \t\t\t    if (!add_defaults(DEFAULTS_CMND, yyvsp[-1].member, yyvsp[0].defaults))\n \t\t\t\tYYERROR;\n \t\t\t}\n break;\n case 18:\n-#line 233 \"gram.y\"\n+#line 235 \"gram.y\"\n {\n \t\t\t    HLTQ_CONCAT(yyvsp[-2].defaults, yyvsp[0].defaults, entries);\n \t\t\t    yyval.defaults = yyvsp[-2].defaults;\n \t\t\t}\n break;\n case 19:\n-#line 239 \"gram.y\"\n+#line 241 \"gram.y\"\n {\n \t\t\t    yyval.defaults = new_default(yyvsp[0].string, NULL, true);\n \t\t\t    if (yyval.defaults == NULL) {\n@@ -1410,7 +1415,7 @@ case 19:\n \t\t\t}\n break;\n case 20:\n-#line 246 \"gram.y\"\n+#line 248 \"gram.y\"\n {\n \t\t\t    yyval.defaults = new_default(yyvsp[0].string, NULL, false);\n \t\t\t    if (yyval.defaults == NULL) {\n@@ -1420,7 +1425,7 @@ case 20:\n \t\t\t}\n break;\n case 21:\n-#line 253 \"gram.y\"\n+#line 255 \"gram.y\"\n {\n \t\t\t    yyval.defaults = new_default(yyvsp[-2].string, yyvsp[0].string, true);\n \t\t\t    if (yyval.defaults == NULL) {\n@@ -1430,7 +1435,7 @@ case 21:\n \t\t\t}\n break;\n case 22:\n-#line 260 \"gram.y\"\n+#line 262 \"gram.y\"\n {\n \t\t\t    yyval.defaults = new_default(yyvsp[-2].string, yyvsp[0].string, '+');\n \t\t\t    if (yyval.defaults == NULL) {\n@@ -1440,7 +1445,7 @@ case 22:\n \t\t\t}\n break;\n case 23:\n-#line 267 \"gram.y\"\n+#line 269 \"gram.y\"\n {\n \t\t\t    yyval.defaults = new_default(yyvsp[-2].string, yyvsp[0].string, '-');\n \t\t\t    if (yyval.defaults == NULL) {\n@@ -1450,14 +1455,14 @@ case 23:\n \t\t\t}\n break;\n case 25:\n-#line 277 \"gram.y\"\n+#line 279 \"gram.y\"\n {\n \t\t\t    HLTQ_CONCAT(yyvsp[-2].privilege, yyvsp[0].privilege, entries);\n \t\t\t    yyval.privilege = yyvsp[-2].privilege;\n \t\t\t}\n break;\n case 26:\n-#line 283 \"gram.y\"\n+#line 285 \"gram.y\"\n {\n \t\t\t    struct privilege *p = calloc(1, sizeof(*p));\n \t\t\t    if (p == NULL) {\n@@ -1472,21 +1477,21 @@ case 26:\n \t\t\t}\n break;\n case 27:\n-#line 297 \"gram.y\"\n+#line 299 \"gram.y\"\n {\n \t\t\t    yyval.member = yyvsp[0].member;\n \t\t\t    yyval.member->negated = false;\n \t\t\t}\n break;\n case 28:\n-#line 301 \"gram.y\"\n+#line 303 \"gram.y\"\n {\n \t\t\t    yyval.member = yyvsp[0].member;\n \t\t\t    yyval.member->negated = true;\n \t\t\t}\n break;\n case 29:\n-#line 307 \"gram.y\"\n+#line 309 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, ALIAS);\n \t\t\t    if (yyval.member == NULL) {\n@@ -1496,7 +1501,7 @@ case 29:\n \t\t\t}\n break;\n case 30:\n-#line 314 \"gram.y\"\n+#line 316 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(NULL, ALL);\n \t\t\t    if (yyval.member == NULL) {\n@@ -1506,7 +1511,7 @@ case 30:\n \t\t\t}\n break;\n case 31:\n-#line 321 \"gram.y\"\n+#line 323 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, NETGROUP);\n \t\t\t    if (yyval.member == NULL) {\n@@ -1516,7 +1521,7 @@ case 31:\n \t\t\t}\n break;\n case 32:\n-#line 328 \"gram.y\"\n+#line 330 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, NTWKADDR);\n \t\t\t    if (yyval.member == NULL) {\n@@ -1526,7 +1531,7 @@ case 32:\n \t\t\t}\n break;\n case 33:\n-#line 335 \"gram.y\"\n+#line 337 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, WORD);\n \t\t\t    if (yyval.member == NULL) {\n@@ -1536,7 +1541,7 @@ case 33:\n \t\t\t}\n break;\n case 35:\n-#line 345 \"gram.y\"\n+#line 347 \"gram.y\"\n {\n \t\t\t    struct cmndspec *prev;\n \t\t\t    prev = HLTQ_LAST(yyvsp[-2].cmndspec, cmndspec, entries);\n@@ -1590,7 +1595,7 @@ case 35:\n \t\t\t}\n break;\n case 36:\n-#line 398 \"gram.y\"\n+#line 400 \"gram.y\"\n {\n \t\t\t    struct cmndspec *cs = calloc(1, sizeof(*cs));\n \t\t\t    if (cs == NULL) {\n@@ -1642,7 +1647,7 @@ case 36:\n \t\t\t}\n break;\n case 37:\n-#line 449 \"gram.y\"\n+#line 451 \"gram.y\"\n {\n \t\t\t    yyval.digest = new_digest(SUDO_DIGEST_SHA224, yyvsp[0].string);\n \t\t\t    if (yyval.digest == NULL) {\n@@ -1652,7 +1657,7 @@ case 37:\n \t\t\t}\n break;\n case 38:\n-#line 456 \"gram.y\"\n+#line 458 \"gram.y\"\n {\n \t\t\t    yyval.digest = new_digest(SUDO_DIGEST_SHA256, yyvsp[0].string);\n \t\t\t    if (yyval.digest == NULL) {\n@@ -1662,7 +1667,7 @@ case 38:\n \t\t\t}\n break;\n case 39:\n-#line 463 \"gram.y\"\n+#line 465 \"gram.y\"\n {\n \t\t\t    yyval.digest = new_digest(SUDO_DIGEST_SHA384, yyvsp[0].string);\n \t\t\t    if (yyval.digest == NULL) {\n@@ -1672,7 +1677,7 @@ case 39:\n \t\t\t}\n break;\n case 40:\n-#line 470 \"gram.y\"\n+#line 472 \"gram.y\"\n {\n \t\t\t    yyval.digest = new_digest(SUDO_DIGEST_SHA512, yyvsp[0].string);\n \t\t\t    if (yyval.digest == NULL) {\n@@ -1682,13 +1687,13 @@ case 40:\n \t\t\t}\n break;\n case 41:\n-#line 479 \"gram.y\"\n+#line 481 \"gram.y\"\n {\n \t\t\t    yyval.member = yyvsp[0].member;\n \t\t\t}\n break;\n case 42:\n-#line 482 \"gram.y\"\n+#line 484 \"gram.y\"\n {\n \t\t\t    if (yyvsp[0].member->type != COMMAND) {\n \t\t\t\tsudoerserror(N_(\"a digest requires a path name\"));\n@@ -1700,75 +1705,75 @@ case 42:\n \t\t\t}\n break;\n case 43:\n-#line 493 \"gram.y\"\n+#line 495 \"gram.y\"\n {\n \t\t\t    yyval.member = yyvsp[0].member;\n \t\t\t    yyval.member->negated = false;\n \t\t\t}\n break;\n case 44:\n-#line 497 \"gram.y\"\n+#line 499 \"gram.y\"\n {\n \t\t\t    yyval.member = yyvsp[0].member;\n \t\t\t    yyval.member->negated = true;\n \t\t\t}\n break;\n case 45:\n-#line 503 \"gram.y\"\n+#line 505 \"gram.y\"\n {\n \t\t\t    yyval.string = yyvsp[0].string;\n \t\t\t}\n break;\n case 46:\n-#line 508 \"gram.y\"\n+#line 510 \"gram.y\"\n {\n \t\t\t    yyval.string = yyvsp[0].string;\n \t\t\t}\n break;\n case 47:\n-#line 512 \"gram.y\"\n+#line 514 \"gram.y\"\n {\n \t\t\t    yyval.string = yyvsp[0].string;\n \t\t\t}\n break;\n case 48:\n-#line 517 \"gram.y\"\n+#line 519 \"gram.y\"\n {\n \t\t\t    yyval.string = yyvsp[0].string;\n \t\t\t}\n break;\n case 49:\n-#line 522 \"gram.y\"\n+#line 524 \"gram.y\"\n {\n \t\t\t    yyval.string = yyvsp[0].string;\n \t\t\t}\n break;\n case 50:\n-#line 527 \"gram.y\"\n+#line 529 \"gram.y\"\n {\n \t\t\t    yyval.string = yyvsp[0].string;\n \t\t\t}\n break;\n case 51:\n-#line 531 \"gram.y\"\n+#line 533 \"gram.y\"\n {\n \t\t\t    yyval.string = yyvsp[0].string;\n \t\t\t}\n break;\n case 52:\n-#line 536 \"gram.y\"\n+#line 538 \"gram.y\"\n {\n \t\t\t    yyval.runas = NULL;\n \t\t\t}\n break;\n case 53:\n-#line 539 \"gram.y\"\n+#line 541 \"gram.y\"\n {\n \t\t\t    yyval.runas = yyvsp[-1].runas;\n \t\t\t}\n break;\n case 54:\n-#line 544 \"gram.y\"\n+#line 546 \"gram.y\"\n {\n \t\t\t    yyval.runas = calloc(1, sizeof(struct runascontainer));\n \t\t\t    if (yyval.runas != NULL) {\n@@ -1786,7 +1791,7 @@ case 54:\n \t\t\t}\n break;\n case 55:\n-#line 559 \"gram.y\"\n+#line 561 \"gram.y\"\n {\n \t\t\t    yyval.runas = calloc(1, sizeof(struct runascontainer));\n \t\t\t    if (yyval.runas == NULL) {\n@@ -1798,7 +1803,7 @@ case 55:\n \t\t\t}\n break;\n case 56:\n-#line 568 \"gram.y\"\n+#line 570 \"gram.y\"\n {\n \t\t\t    yyval.runas = calloc(1, sizeof(struct runascontainer));\n \t\t\t    if (yyval.runas == NULL) {\n@@ -1810,7 +1815,7 @@ case 56:\n \t\t\t}\n break;\n case 57:\n-#line 577 \"gram.y\"\n+#line 579 \"gram.y\"\n {\n \t\t\t    yyval.runas = calloc(1, sizeof(struct runascontainer));\n \t\t\t    if (yyval.runas == NULL) {\n@@ -1822,7 +1827,7 @@ case 57:\n \t\t\t}\n break;\n case 58:\n-#line 586 \"gram.y\"\n+#line 588 \"gram.y\"\n {\n \t\t\t    yyval.runas = calloc(1, sizeof(struct runascontainer));\n \t\t\t    if (yyval.runas != NULL) {\n@@ -1840,13 +1845,13 @@ case 58:\n \t\t\t}\n break;\n case 59:\n-#line 603 \"gram.y\"\n+#line 605 \"gram.y\"\n {\n \t\t\t    init_options(&yyval.options);\n \t\t\t}\n break;\n case 60:\n-#line 606 \"gram.y\"\n+#line 608 \"gram.y\"\n {\n \t\t\t    yyval.options.notbefore = parse_gentime(yyvsp[0].string);\n \t\t\t    free(yyvsp[0].string);\n@@ -1857,7 +1862,7 @@ case 60:\n \t\t\t}\n break;\n case 61:\n-#line 614 \"gram.y\"\n+#line 616 \"gram.y\"\n {\n \t\t\t    yyval.options.notafter = parse_gentime(yyvsp[0].string);\n \t\t\t    free(yyvsp[0].string);\n@@ -1868,7 +1873,7 @@ case 61:\n \t\t\t}\n break;\n case 62:\n-#line 622 \"gram.y\"\n+#line 624 \"gram.y\"\n {\n \t\t\t    yyval.options.timeout = parse_timeout(yyvsp[0].string);\n \t\t\t    free(yyvsp[0].string);\n@@ -1882,7 +1887,7 @@ case 62:\n \t\t\t}\n break;\n case 63:\n-#line 633 \"gram.y\"\n+#line 635 \"gram.y\"\n {\n #ifdef HAVE_SELINUX\n \t\t\t    free(yyval.options.role);\n@@ -1891,7 +1896,7 @@ case 63:\n \t\t\t}\n break;\n case 64:\n-#line 639 \"gram.y\"\n+#line 641 \"gram.y\"\n {\n #ifdef HAVE_SELINUX\n \t\t\t    free(yyval.options.type);\n@@ -1900,7 +1905,7 @@ case 64:\n \t\t\t}\n break;\n case 65:\n-#line 645 \"gram.y\"\n+#line 647 \"gram.y\"\n {\n #ifdef HAVE_PRIV_SET\n \t\t\t    free(yyval.options.privs);\n@@ -1909,7 +1914,7 @@ case 65:\n \t\t\t}\n break;\n case 66:\n-#line 651 \"gram.y\"\n+#line 653 \"gram.y\"\n {\n #ifdef HAVE_PRIV_SET\n \t\t\t    free(yyval.options.limitprivs);\n@@ -1918,97 +1923,97 @@ case 66:\n \t\t\t}\n break;\n case 67:\n-#line 659 \"gram.y\"\n+#line 661 \"gram.y\"\n {\n \t\t\t    TAGS_INIT(yyval.tag);\n \t\t\t}\n break;\n case 68:\n-#line 662 \"gram.y\"\n+#line 664 \"gram.y\"\n {\n \t\t\t    yyval.tag.nopasswd = true;\n \t\t\t}\n break;\n case 69:\n-#line 665 \"gram.y\"\n+#line 667 \"gram.y\"\n {\n \t\t\t    yyval.tag.nopasswd = false;\n \t\t\t}\n break;\n case 70:\n-#line 668 \"gram.y\"\n+#line 670 \"gram.y\"\n {\n \t\t\t    yyval.tag.noexec = true;\n \t\t\t}\n break;\n case 71:\n-#line 671 \"gram.y\"\n+#line 673 \"gram.y\"\n {\n \t\t\t    yyval.tag.noexec = false;\n \t\t\t}\n break;\n case 72:\n-#line 674 \"gram.y\"\n+#line 676 \"gram.y\"\n {\n \t\t\t    yyval.tag.setenv = true;\n \t\t\t}\n break;\n case 73:\n-#line 677 \"gram.y\"\n+#line 679 \"gram.y\"\n {\n \t\t\t    yyval.tag.setenv = false;\n \t\t\t}\n break;\n case 74:\n-#line 680 \"gram.y\"\n+#line 682 \"gram.y\"\n {\n \t\t\t    yyval.tag.log_input = true;\n \t\t\t}\n break;\n case 75:\n-#line 683 \"gram.y\"\n+#line 685 \"gram.y\"\n {\n \t\t\t    yyval.tag.log_input = false;\n \t\t\t}\n break;\n case 76:\n-#line 686 \"gram.y\"\n+#line 688 \"gram.y\"\n {\n \t\t\t    yyval.tag.log_output = true;\n \t\t\t}\n break;\n case 77:\n-#line 689 \"gram.y\"\n+#line 691 \"gram.y\"\n {\n \t\t\t    yyval.tag.log_output = false;\n \t\t\t}\n break;\n case 78:\n-#line 692 \"gram.y\"\n+#line 694 \"gram.y\"\n {\n \t\t\t    yyval.tag.follow = true;\n \t\t\t}\n break;\n case 79:\n-#line 695 \"gram.y\"\n+#line 697 \"gram.y\"\n {\n \t\t\t    yyval.tag.follow = false;\n \t\t\t}\n break;\n case 80:\n-#line 698 \"gram.y\"\n+#line 700 \"gram.y\"\n {\n \t\t\t    yyval.tag.send_mail = true;\n \t\t\t}\n break;\n case 81:\n-#line 701 \"gram.y\"\n+#line 703 \"gram.y\"\n {\n \t\t\t    yyval.tag.send_mail = false;\n \t\t\t}\n break;\n case 82:\n-#line 706 \"gram.y\"\n+#line 708 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(NULL, ALL);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2018,7 +2023,7 @@ case 82:\n \t\t\t}\n break;\n case 83:\n-#line 713 \"gram.y\"\n+#line 715 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, ALIAS);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2028,7 +2033,7 @@ case 83:\n \t\t\t}\n break;\n case 84:\n-#line 720 \"gram.y\"\n+#line 722 \"gram.y\"\n {\n \t\t\t    struct sudo_command *c = calloc(1, sizeof(*c));\n \t\t\t    if (c == NULL) {\n@@ -2046,7 +2051,7 @@ case 84:\n \t\t\t}\n break;\n case 87:\n-#line 741 \"gram.y\"\n+#line 743 \"gram.y\"\n {\n \t\t\t    const char *s;\n \t\t\t    s = alias_add(&parsed_policy, yyvsp[-2].string, HOSTALIAS,\n@@ -2058,14 +2063,14 @@ case 87:\n \t\t\t}\n break;\n case 89:\n-#line 753 \"gram.y\"\n+#line 755 \"gram.y\"\n {\n \t\t\t    HLTQ_CONCAT(yyvsp[-2].member, yyvsp[0].member, entries);\n \t\t\t    yyval.member = yyvsp[-2].member;\n \t\t\t}\n break;\n case 92:\n-#line 763 \"gram.y\"\n+#line 765 \"gram.y\"\n {\n \t\t\t    const char *s;\n \t\t\t    s = alias_add(&parsed_policy, yyvsp[-2].string, CMNDALIAS,\n@@ -2077,14 +2082,14 @@ case 92:\n \t\t\t}\n break;\n case 94:\n-#line 775 \"gram.y\"\n+#line 777 \"gram.y\"\n {\n \t\t\t    HLTQ_CONCAT(yyvsp[-2].member, yyvsp[0].member, entries);\n \t\t\t    yyval.member = yyvsp[-2].member;\n \t\t\t}\n break;\n case 97:\n-#line 785 \"gram.y\"\n+#line 787 \"gram.y\"\n {\n \t\t\t    const char *s;\n \t\t\t    s = alias_add(&parsed_policy, yyvsp[-2].string, RUNASALIAS,\n@@ -2096,7 +2101,7 @@ case 97:\n \t\t\t}\n break;\n case 100:\n-#line 800 \"gram.y\"\n+#line 802 \"gram.y\"\n {\n \t\t\t    const char *s;\n \t\t\t    s = alias_add(&parsed_policy, yyvsp[-2].string, USERALIAS,\n@@ -2108,28 +2113,28 @@ case 100:\n \t\t\t}\n break;\n case 102:\n-#line 812 \"gram.y\"\n+#line 814 \"gram.y\"\n {\n \t\t\t    HLTQ_CONCAT(yyvsp[-2].member, yyvsp[0].member, entries);\n \t\t\t    yyval.member = yyvsp[-2].member;\n \t\t\t}\n break;\n case 103:\n-#line 818 \"gram.y\"\n+#line 820 \"gram.y\"\n {\n \t\t\t    yyval.member = yyvsp[0].member;\n \t\t\t    yyval.member->negated = false;\n \t\t\t}\n break;\n case 104:\n-#line 822 \"gram.y\"\n+#line 824 \"gram.y\"\n {\n \t\t\t    yyval.member = yyvsp[0].member;\n \t\t\t    yyval.member->negated = true;\n \t\t\t}\n break;\n case 105:\n-#line 828 \"gram.y\"\n+#line 830 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, ALIAS);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2139,7 +2144,7 @@ case 105:\n \t\t\t}\n break;\n case 106:\n-#line 835 \"gram.y\"\n+#line 837 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(NULL, ALL);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2149,7 +2154,7 @@ case 106:\n \t\t\t}\n break;\n case 107:\n-#line 842 \"gram.y\"\n+#line 844 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, NETGROUP);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2159,7 +2164,7 @@ case 107:\n \t\t\t}\n break;\n case 108:\n-#line 849 \"gram.y\"\n+#line 851 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, USERGROUP);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2169,7 +2174,7 @@ case 108:\n \t\t\t}\n break;\n case 109:\n-#line 856 \"gram.y\"\n+#line 858 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, WORD);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2179,28 +2184,28 @@ case 109:\n \t\t\t}\n break;\n case 111:\n-#line 866 \"gram.y\"\n+#line 868 \"gram.y\"\n {\n \t\t\t    HLTQ_CONCAT(yyvsp[-2].member, yyvsp[0].member, entries);\n \t\t\t    yyval.member = yyvsp[-2].member;\n \t\t\t}\n break;\n case 112:\n-#line 872 \"gram.y\"\n+#line 874 \"gram.y\"\n {\n \t\t\t    yyval.member = yyvsp[0].member;\n \t\t\t    yyval.member->negated = false;\n \t\t\t}\n break;\n case 113:\n-#line 876 \"gram.y\"\n+#line 878 \"gram.y\"\n {\n \t\t\t    yyval.member = yyvsp[0].member;\n \t\t\t    yyval.member->negated = true;\n \t\t\t}\n break;\n case 114:\n-#line 882 \"gram.y\"\n+#line 884 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, ALIAS);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2210,7 +2215,7 @@ case 114:\n \t\t\t}\n break;\n case 115:\n-#line 889 \"gram.y\"\n+#line 891 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(NULL, ALL);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2220,7 +2225,7 @@ case 115:\n \t\t\t}\n break;\n case 116:\n-#line 896 \"gram.y\"\n+#line 898 \"gram.y\"\n {\n \t\t\t    yyval.member = new_member(yyvsp[0].string, WORD);\n \t\t\t    if (yyval.member == NULL) {\n@@ -2229,7 +2234,7 @@ case 116:\n \t\t\t    }\n \t\t\t}\n break;\n-#line 2175 \"gram.c\"\n+#line 2180 \"gram.c\"\n     }\n     yyssp -= yym;\n     yystate = *yyssp;"
        },
        {
            "filename": "plugins/sudoers/gram.y",
            "diff": "@@ -63,7 +63,9 @@ char *errorfile = NULL;\n struct sudoers_parse_tree parsed_policy = {\n     TAILQ_HEAD_INITIALIZER(parsed_policy.userspecs),\n     TAILQ_HEAD_INITIALIZER(parsed_policy.defaults),\n-    NULL /* aliases */\n+    NULL, /* aliases */\n+    NULL, /* lhost */\n+    NULL /* shost */\n };\n \n /*\n@@ -1246,11 +1248,14 @@ free_userspec(struct userspec *us)\n  * Initialized a sudoers parse tree.\n  */\n void\n-init_parse_tree(struct sudoers_parse_tree *parse_tree)\n+init_parse_tree(struct sudoers_parse_tree *parse_tree, const char *lhost,\n+    const char *shost)\n {\n     TAILQ_INIT(&parse_tree->userspecs);\n     TAILQ_INIT(&parse_tree->defaults);\n     parse_tree->aliases = NULL;\n+    parse_tree->shost = shost;\n+    parse_tree->lhost = lhost;\n }\n \n /*"
        },
        {
            "filename": "plugins/sudoers/ldap.c",
            "diff": "@@ -1665,7 +1665,7 @@ sudo_ldap_open(struct sudo_nss *nss)\n     }\n     handle->ld = ld;\n     /* handle->pw = NULL; */\n-    init_parse_tree(&handle->parse_tree);\n+    init_parse_tree(&handle->parse_tree, NULL, NULL);\n     nss->handle = handle;\n \n done:"
        },
        {
            "filename": "plugins/sudoers/match.c",
            "diff": "@@ -72,8 +72,10 @@ int\n user_matches(struct sudoers_parse_tree *parse_tree, const struct passwd *pw,\n     const struct member *m)\n {\n-    struct alias *a;\n+    const char *lhost = parse_tree->lhost ? parse_tree->lhost : user_runhost;\n+    const char *shost = parse_tree->shost ? parse_tree->shost : user_srunhost;\n     int matched = UNSPEC;\n+    struct alias *a;\n     debug_decl(user_matches, SUDOERS_DEBUG_MATCH)\n \n     switch (m->type) {\n@@ -82,8 +84,8 @@ user_matches(struct sudoers_parse_tree *parse_tree, const struct passwd *pw,\n \t    break;\n \tcase NETGROUP:\n \t    if (netgr_matches(m->name,\n-\t\tdef_netgroup_tuple ? user_runhost : NULL,\n-\t\tdef_netgroup_tuple ? user_srunhost : NULL, pw->pw_name))\n+\t\tdef_netgroup_tuple ? lhost : NULL,\n+\t\tdef_netgroup_tuple ? shost : NULL, pw->pw_name))\n \t\tmatched = !m->negated;\n \t    break;\n \tcase USERGROUP:\n@@ -153,11 +155,13 @@ runaslist_matches(struct sudoers_parse_tree *parse_tree,\n     const struct member_list *user_list, const struct member_list *group_list,\n     struct member **matching_user, struct member **matching_group)\n {\n+    const char *lhost = parse_tree->lhost ? parse_tree->lhost : user_runhost;\n+    const char *shost = parse_tree->shost ? parse_tree->shost : user_srunhost;\n+    int user_matched = UNSPEC;\n+    int group_matched = UNSPEC;\n     struct member *m;\n     struct alias *a;\n     int rc;\n-    int user_matched = UNSPEC;\n-    int group_matched = UNSPEC;\n     debug_decl(runaslist_matches, SUDOERS_DEBUG_MATCH)\n \n     if (ISSET(sudo_user.flags, RUNAS_USER_SPECIFIED) || !ISSET(sudo_user.flags, RUNAS_GROUP_SPECIFIED)) {\n@@ -175,8 +179,8 @@ runaslist_matches(struct sudoers_parse_tree *parse_tree,\n \t\t\tbreak;\n \t\t    case NETGROUP:\n \t\t\tif (netgr_matches(m->name,\n-\t\t\t    def_netgroup_tuple ? user_runhost : NULL,\n-\t\t\t    def_netgroup_tuple ? user_srunhost : NULL,\n+\t\t\t    def_netgroup_tuple ? lhost : NULL,\n+\t\t\t    def_netgroup_tuple ? shost : NULL,\n \t\t\t    runas_pw->pw_name))\n \t\t\t    user_matched = !m->negated;\n \t\t\tbreak;\n@@ -309,7 +313,10 @@ int\n hostlist_matches(struct sudoers_parse_tree *parse_tree, const struct passwd *pw,\n     const struct member_list *list)\n {\n-    return hostlist_matches_int(parse_tree, pw, user_runhost, user_srunhost, list);\n+    const char *lhost = parse_tree->lhost ? parse_tree->lhost : user_runhost;\n+    const char *shost = parse_tree->shost ? parse_tree->shost : user_srunhost;\n+\n+    return hostlist_matches_int(parse_tree, pw, lhost, shost, list);\n }\n \n /*"
        },
        {
            "filename": "plugins/sudoers/parse.h",
            "diff": "@@ -272,6 +272,7 @@ struct sudoers_parse_tree {\n     struct userspec_list userspecs;\n     struct defaults_list defaults;\n     struct rbtree *aliases;\n+    const char *shost, *lhost;\n };\n \n /* alias.c */\n@@ -297,7 +298,7 @@ void free_userspec(struct userspec *us);\n void free_userspecs(struct userspec_list *usl);\n void free_default(struct defaults *def, struct member_list **binding);\n void free_defaults(struct defaults_list *defs);\n-void init_parse_tree(struct sudoers_parse_tree *parse_tree);\n+void init_parse_tree(struct sudoers_parse_tree *parse_tree, const char *shost, const char *lhost);\n void free_parse_tree(struct sudoers_parse_tree *parse_tree);\n void reparent_parse_tree(struct sudoers_parse_tree *new_tree);\n "
        },
        {
            "filename": "plugins/sudoers/sssd.c",
            "diff": "@@ -554,7 +554,6 @@ sudo_sss_open(struct sudo_nss *nss)\n \tsudo_warnx(U_(\"%s: %s\"), __func__, U_(\"unable to allocate memory\"));\n \tdebug_return_int(ENOMEM);\n     }\n-    init_parse_tree(&handle->parse_tree);\n \n     /* Load symbols */\n     handle->ssslib = sudo_dso_load(path, SUDO_DSO_LAZY);\n@@ -612,8 +611,6 @@ sudo_sss_open(struct sudo_nss *nss)\n \tdebug_return_int(EFAULT);\n     }\n \n-    nss->handle = handle;\n-\n     /*\n      * If runhost is the same as the local host, check for ipa_hostname\n      * in sssd.conf and use it in preference to user_runhost.\n@@ -625,6 +622,10 @@ sudo_sss_open(struct sudo_nss *nss)\n \t}\n     }\n \n+    /* The \"parse tree\" contains userspecs, defaults, aliases and hostnames. */\n+    init_parse_tree(&handle->parse_tree, handle->ipa_host, handle->ipa_shost);\n+    nss->handle = handle;\n+\n     sudo_debug_printf(SUDO_DEBUG_DEBUG, \"handle=%p\", handle);\n \n     debug_return_int(0);"
        }
    ],
    "commitTime": "2019-08-15 20:20:12"
}