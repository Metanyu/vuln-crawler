{
    "CVSSv3": {
        "CVSS": "3.1",
        "E": "P",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "privilegesRequired": "HIGH",
        "userInteraction": "NONE",
        "scope": "UNCHANGED",
        "confidentiality": "HIGH",
        "integrity": "NONE",
        "availability": "NONE"
    },
    "credit": [
        "avocadio"
    ],
    "cvssDetails": [
        {
            "assigner": "NVD",
            "cvssV3BaseScore": 7.5,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "NONE",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "HIGH",
                "integrity": "NONE",
                "availability": "NONE"
            },
            "severity": "high"
        }
    ],
    "cvssScore": 4.9,
    "disclosureTime": "2023-12-14 20:47:18",
    "epssDetails": {
        "modelVersion": "v2023.03.01",
        "percentile": "0.12317",
        "probability": "0.00045"
    },
    "exploitMaturity": "Proof of Concept",
    "id": "SNYK-UNMANAGED-ASTERISK-6129122",
    "identifiers": {
        "CVE": [
            "CVE-2023-49294"
        ],
        "CWE": [
            "CWE-22"
        ]
    },
    "language": "cpp",
    "malicious": false,
    "packageManager": "unmanaged",
    "publicationTime": "2023-12-15 15:22:06",
    "remediation": "Upgrade asterisk to version certified-18.9-cert6, 18.20.1, 20.5.1, 21.0.1 or higher. ",
    "severity": "medium",
    "socialTrendAlert": false,
    "title": "Path Traversal",
    "vulnDescription": {
        "Overview": "Affected versions of this package are vulnerable to Path Traversal via the manager.c interface. An attacker can read arbitrary files by sending crafted packets to the interface. "
    },
    "source_code": [
        {
            "filename": "main/manager.c",
            "diff": "@@ -3752,12 +3752,43 @@ void astman_live_dangerously(int new_live_dangerously)\n \tlive_dangerously = new_live_dangerously;\n }\n \n+/**\n+ * \\brief Check if a file is restricted or not\n+ *\n+ * \\return 0 on success\n+ * \\return 1 on restricted file\n+ * \\return -1 on failure\n+ */\n static int restrictedFile(const char *filename)\n {\n-\tif (!live_dangerously && !strncasecmp(filename, \"/\", 1) &&\n-\t\t strncasecmp(filename, ast_config_AST_CONFIG_DIR, strlen(ast_config_AST_CONFIG_DIR))) {\n+\tchar *stripped_filename;\n+\tRAII_VAR(char *, path, NULL, ast_free);\n+\tRAII_VAR(char *, real_path, NULL, ast_free);\n+\n+\tif (live_dangerously) {\n+\t\treturn 0;\n+\t}\n+\n+\tstripped_filename = ast_strip(ast_strdupa(filename));\n+\n+\t/* If the file path starts with '/', don't prepend ast_config_AST_CONFIG_DIR */\n+\tif (stripped_filename[0] == '/') {\n+\t\treal_path = realpath(stripped_filename, NULL);\n+\t} else {\n+\t\tif (ast_asprintf(&path, \"%s/%s\", ast_config_AST_CONFIG_DIR, stripped_filename) == -1) {\n+\t\t\treturn -1;\n+\t\t}\n+\t\treal_path = realpath(path, NULL);\n+\t}\n+\n+\tif (!real_path) {\n+\t\treturn -1;\n+\t}\n+\n+\tif (!ast_begins_with(real_path, ast_config_AST_CONFIG_DIR)) {\n \t\treturn 1;\n \t}\n+\n \treturn 0;\n }\n \n@@ -3770,6 +3801,7 @@ static int action_getconfig(struct mansession *s, const struct message *m)\n \tconst char *category_name;\n \tint catcount = 0;\n \tint lineno = 0;\n+\tint ret = 0;\n \tstruct ast_category *cur_category = NULL;\n \tstruct ast_variable *v;\n \tstruct ast_flags config_flags = { CONFIG_FLAG_WITHCOMMENTS | CONFIG_FLAG_NOCACHE };\n@@ -3779,9 +3811,13 @@ static int action_getconfig(struct mansession *s, const struct message *m)\n \t\treturn 0;\n \t}\n \n-\tif (restrictedFile(fn)) {\n+\tret = restrictedFile(fn);\n+\tif (ret == 1) {\n \t\tastman_send_error(s, m, \"File requires escalated priveledges\");\n \t\treturn 0;\n+\t} else if (ret == -1) {\n+\t\tastman_send_error(s, m, \"Config file not found\");\n+\t\treturn 0;\n \t}\n \n \tcfg = ast_config_load2(fn, \"manager\", config_flags);"
        }
    ],
    "commitTime": "2023-12-14 18:47:36"
}