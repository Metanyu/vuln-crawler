{
    "CVSSv3": {
        "CVSS": "3.1",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "privilegesRequired": "HIGH",
        "userInteraction": "REQUIRED",
        "scope": "CHANGED",
        "confidentiality": "HIGH",
        "integrity": "HIGH",
        "availability": "NONE"
    },
    "credit": [
        "Antonio Russo",
        "Antonio Rocco Spataro"
    ],
    "cvssDetails": [],
    "cvssScore": 8.1,
    "disclosureTime": "2024-01-02 22:45:16",
    "epssDetails": null,
    "exploitMaturity": "Not Defined",
    "id": "SNYK-PHP-PRESTASHOPPRESTASHOP-6142751",
    "identifiers": {
        "CVE": [
            "CVE-2024-21627"
        ],
        "CWE": [
            "CWE-79"
        ]
    },
    "language": "php",
    "malicious": false,
    "packageManager": "composer",
    "publicationTime": "2024-01-03 14:56:04",
    "remediation": "Upgrade prestashop/prestashop to version 1.7.8.11, 8.1.3 or higher. ",
    "severity": "high",
    "socialTrendAlert": false,
    "title": "Cross-site Scripting",
    "vulnDescription": {
        "Overview": "prestashop/prestashop is an Open Source e-commerce platform, committed to providing the best shopping cart experience for both merchants and customers. Affected versions of this package are vulnerable to Cross-site Scripting due to improper checks in isCleanHTML method. An attacker can inject malicious scripts by submitting crafted input. Note: In legacy object models, fields of HTML type will call isCleanHTML . "
    },
    "source_code": [
        {
            "filename": "classes/Validate.php",
            "diff": "@@ -515,23 +515,38 @@ public static function isGenericName($name)\n      */\n     public static function isCleanHtml($html, $allow_iframe = false)\n     {\n+        // any html attribute starting with \"on\" (event attributes)\n+        $eventAttributeRegex = '/<\\s*\\w+[^>]*\\s(on\\w+)=[\"\\'][^\"\\']*[\"\\']/ims';\n+\n         $events = 'onmousedown|onmousemove|onmmouseup|onmouseover|onmouseout|onload|onunload|onfocus|onblur|onchange';\n         $events .= '|onsubmit|ondblclick|onclick|onkeydown|onkeyup|onkeypress|onmouseenter|onmouseleave|onerror|onselect|onreset|onabort|ondragdrop|onresize|onactivate|onafterprint|onmoveend';\n         $events .= '|onafterupdate|onbeforeactivate|onbeforecopy|onbeforecut|onbeforedeactivate|onbeforeeditfocus|onbeforepaste|onbeforeprint|onbeforeunload|onbeforeupdate|onmove';\n-        $events .= '|onbounce|oncellchange|oncontextmenu|oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondeactivate|ondrag|ondragend|ondragenter|onmousewheel';\n+        $events .= '|onbounce|oncellchange|oncontextmenu|oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondeactivate|ondrag|ondragend|ondragenter|ondragexit|onmousewheel';\n         $events .= '|ondragleave|ondragover|ondragstart|ondrop|onerrorupdate|onfilterchange|onfinish|onfocusin|onfocusout|onhashchange|onhelp|oninput|onlosecapture|onmessage|onmouseup|onmovestart';\n         $events .= '|onoffline|ononline|onpaste|onpropertychange|onreadystatechange|onresizeend|onresizestart|onrowenter|onrowexit|onrowsdelete|onrowsinserted|onscroll|onsearch|onselectionchange';\n         $events .= '|onselectstart|onstart|onstop|onanimationcancel|onanimationend|onanimationiteration|onanimationstart';\n         $events .= '|onpointerover|onpointerenter|onpointerdown|onpointermove|onpointerup|onpointerout|onpointerleave|onpointercancel|ongotpointercapture|onlostpointercapture';\n+        $events .= '|onpagehide|onpageshow|onautocomplete|onautocompleteerror|oncanplay|oncanplaythrough|onclose|oncuechange|ondurationchange|onemptied|onended|oninvalid|onloadeddata';\n+        $events .= '|onloadedmetadata|onloadstart|onpause|onplay|onplaying|onpopstate|onprogress|onratechange|onreset|onseeked|onseeking|onshow|onsort|onstalled|onstorage|onsuspend|ontimeupdate';\n+        $events .= '|ontoggle|onvolumechange|onwaiting';\n \n-        if (preg_match('/<[\\s]*script/ims', $html) || preg_match('/(' . $events . ')[\\s]*=/ims', $html) || preg_match('/.*script\\:/ims', $html)) {\n+        if (preg_match('/<[\\s]*script/ims', $html) || preg_match($eventAttributeRegex, $html) || preg_match('/(' . $events . ')[\\s]*=/ims', $html) || preg_match('/.*script\\:/ims', $html)) {\n             return false;\n         }\n \n         if (!$allow_iframe && preg_match('/<[\\s]*(i?frame|form|input|embed|object)/ims', $html)) {\n             return false;\n         }\n \n+        // RLO characters detection\n+        $rloCharacters = \"\\xE2\\x80\\xAE\";\n+\n+        // Check if the RLO character is in the string\n+        if (strpos($html, $rloCharacters) !== false) {\n+            // RLO character found, potential RLO attack\n+            return false;\n+        }\n+\n         return true;\n     }\n "
        },
        {
            "filename": "js/admin.js",
            "diff": "@@ -536,11 +536,11 @@ function showRedirectProductOptions(show)\n function redirectSelectChange()\n {\n   redirectTypeValue = $('#redirect_type :selected').val();\n-  if (redirectTypeValue == '404' || \n-      redirectTypeValue == '410' || \n-      redirectTypeValue == 'default' || \n-      redirectTypeValue == '200-displayed' || \n-      redirectTypeValue == '404-displayed' || \n+  if (redirectTypeValue == '404' ||\n+      redirectTypeValue == '410' ||\n+      redirectTypeValue == 'default' ||\n+      redirectTypeValue == '200-displayed' ||\n+      redirectTypeValue == '404-displayed' ||\n       redirectTypeValue == '410-displayed')\n     showRedirectProductSelectOptions(false);\n   else\n@@ -1434,17 +1434,23 @@ function isCleanHtml(content)\n   var events = 'onmousedown|onmousemove|onmmouseup|onmouseover|onmouseout|onload|onunload|onfocus|onblur|onchange';\n   events += '|onsubmit|ondblclick|onclick|onkeydown|onkeyup|onkeypress|onmouseenter|onmouseleave|onerror|onselect|onreset|onabort|ondragdrop|onresize|onactivate|onafterprint|onmoveend';\n   events += '|onafterupdate|onbeforeactivate|onbeforecopy|onbeforecut|onbeforedeactivate|onbeforeeditfocus|onbeforepaste|onbeforeprint|onbeforeunload|onbeforeupdate|onmove';\n-  events += '|onbounce|oncellchange|oncontextmenu|oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondeactivate|ondrag|ondragend|ondragenter|onmousewheel';\n+  events += '|onbounce|oncellchange|oncontextmenu|oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondeactivate|ondrag|ondragend|ondragenter|ondragexit|onmousewheel';\n   events += '|ondragleave|ondragover|ondragstart|ondrop|onerrorupdate|onfilterchange|onfinish|onfocusin|onfocusout|onhashchange|onhelp|oninput|onlosecapture|onmessage|onmouseup|onmovestart';\n   events += '|onoffline|ononline|onpaste|onpropertychange|onreadystatechange|onresizeend|onresizestart|onrowenter|onrowexit|onrowsdelete|onrowsinserted|onscroll|onsearch|onselectionchange';\n-  events += '|onselectstart|onstart|onstop';\n+  events += '|onselectstart|onstart|onstop|onanimationcancel|onanimationend|onanimationiteration|onanimationstart';\n+  events += '|onpointerover|onpointerenter|onpointerdown|onpointermove|onpointerup|onpointerout|onpointerleave|onpointercancel|ongotpointercapture|onlostpointercapture';\n+  events += '|onpagehide|onpageshow|onautocomplete|onautocompleteerror|oncanplay|oncanplaythrough|onclose|oncuechange|ondurationchange|onemptied|onended|oninvalid|onloadeddata';\n+  events += '|onloadedmetadata|onloadstart|onpause|onplay|onplaying|onpopstate|onprogress|onratechange|onreset|onseeked|onseeking|onshow|onsort|onstalled|onstorage|onsuspend|ontimeupdate';\n+  events += '|ontoggle|onvolumechange|onwaiting';\n \n   var script1 = /<[\\s]*script/im;\n   var script2 = new RegExp('('+events+')[\\s]*=', 'im');\n   var script3 = /.*script\\:/im;\n   var script4 = /<[\\s]*(i?frame|embed|object)/im;\n+  var script5 = /<\\s*\\w+[^>]*\\s(on\\w+)=[\"'][^\"']*[\"']/ims;\n+  var rloCharacter = \"\\xE2\\x80\\xAE\";\n \n-  if (script1.test(content) || script2.test(content) || script3.test(content) || script4.test(content))\n+  if (script1.test(content) || script2.test(content) || script3.test(content) || script4.test(content) || script5.test(content) || content.indexOf(rloCharacter) !== -1)\n     return false;\n \n   return true;"
        },
        {
            "filename": "js/tools.js",
            "diff": "@@ -705,20 +705,26 @@ function in_array(value, array)\n \n function isCleanHtml(content)\n {\n-\tvar events = 'onmousedown|onmousemove|onmmouseup|onmouseover|onmouseout|onload|onunload|onfocus|onblur|onchange';\n-\tevents += '|onsubmit|ondblclick|onclick|onkeydown|onkeyup|onkeypress|onmouseenter|onmouseleave|onerror|onselect|onreset|onabort|ondragdrop|onresize|onactivate|onafterprint|onmoveend';\n-\tevents += '|onafterupdate|onbeforeactivate|onbeforecopy|onbeforecut|onbeforedeactivate|onbeforeeditfocus|onbeforepaste|onbeforeprint|onbeforeunload|onbeforeupdate|onmove';\n-\tevents += '|onbounce|oncellchange|oncontextmenu|oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondeactivate|ondrag|ondragend|ondragenter|onmousewheel';\n-\tevents += '|ondragleave|ondragover|ondragstart|ondrop|onerrorupdate|onfilterchange|onfinish|onfocusin|onfocusout|onhashchange|onhelp|oninput|onlosecapture|onmessage|onmouseup|onmovestart';\n-\tevents += '|onoffline|ononline|onpaste|onpropertychange|onreadystatechange|onresizeend|onresizestart|onrowenter|onrowexit|onrowsdelete|onrowsinserted|onscroll|onsearch|onselectionchange';\n-\tevents += '|onselectstart|onstart|onstop';\n+  var events = 'onmousedown|onmousemove|onmmouseup|onmouseover|onmouseout|onload|onunload|onfocus|onblur|onchange';\n+  events += '|onsubmit|ondblclick|onclick|onkeydown|onkeyup|onkeypress|onmouseenter|onmouseleave|onerror|onselect|onreset|onabort|ondragdrop|onresize|onactivate|onafterprint|onmoveend';\n+  events += '|onafterupdate|onbeforeactivate|onbeforecopy|onbeforecut|onbeforedeactivate|onbeforeeditfocus|onbeforepaste|onbeforeprint|onbeforeunload|onbeforeupdate|onmove';\n+  events += '|onbounce|oncellchange|oncontextmenu|oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondeactivate|ondrag|ondragend|ondragenter|ondragexit|onmousewheel';\n+  events += '|ondragleave|ondragover|ondragstart|ondrop|onerrorupdate|onfilterchange|onfinish|onfocusin|onfocusout|onhashchange|onhelp|oninput|onlosecapture|onmessage|onmouseup|onmovestart';\n+  events += '|onoffline|ononline|onpaste|onpropertychange|onreadystatechange|onresizeend|onresizestart|onrowenter|onrowexit|onrowsdelete|onrowsinserted|onscroll|onsearch|onselectionchange';\n+  events += '|onselectstart|onstart|onstop|onanimationcancel|onanimationend|onanimationiteration|onanimationstart';\n+  events += '|onpointerover|onpointerenter|onpointerdown|onpointermove|onpointerup|onpointerout|onpointerleave|onpointercancel|ongotpointercapture|onlostpointercapture';\n+  events += '|onpagehide|onpageshow|onautocomplete|onautocompleteerror|oncanplay|oncanplaythrough|onclose|oncuechange|ondurationchange|onemptied|onended|oninvalid|onloadeddata';\n+  events += '|onloadedmetadata|onloadstart|onpause|onplay|onplaying|onpopstate|onprogress|onratechange|onreset|onseeked|onseeking|onshow|onsort|onstalled|onstorage|onsuspend|ontimeupdate';\n+  events += '|ontoggle|onvolumechange|onwaiting';\n \n \tvar script1 = /<[\\s]*script/im;\n \tvar script2 = new RegExp('('+events+')[\\s]*=', 'im');\n \tvar script3 = /.*script\\:/im;\n \tvar script4 = /<[\\s]*(i?frame|embed|object)/im;\n+  var script5 = /<\\s*\\w+[^>]*\\s(on\\w+)=[\"'][^\"']*[\"']/ims;\n+  var rloCharacter = \"\\xE2\\x80\\xAE\";\n \n-\tif (script1.test(content) || script2.test(content) || script3.test(content) || script4.test(content))\n+\tif (script1.test(content) || script2.test(content) || script3.test(content) || script4.test(content) || script5.test(content) || content.indexOf(rloCharacter) !== -1)\n \t\treturn false;\n \n \treturn true;"
        },
        {
            "filename": "src/Core/ConstraintValidator/CleanHtmlValidator.php",
            "diff": "@@ -70,7 +70,19 @@ public function validate($value, Constraint $constraint)\n         $containsJavascriptEvents = preg_match('/(' . $this->getJavascriptEvents() . ')[\\s]*=/ims', $value);\n \n         $iframe = !$this->allowEmbeddableHtml && preg_match(self::EMBEDDABLE_HTML_PATTERN, $value);\n-        if ($containsScriptTags || $containsJavascriptEvents || $iframe) {\n+\n+        // any html attribute starting with \"on\" (event attributes), as a second layer protection\n+        $eventAttributeRegex = '/<\\s*\\w+[^>]*\\s(on\\w+)=[\"\\'][^\"\\']*[\"\\']/ims';\n+        // RLO characters detection\n+        $rloCharacters = \"\\xE2\\x80\\xAE\";\n+\n+        // Check if the RLO character is in the string\n+        if (strpos($value, $rloCharacters) !== false) {\n+            // RLO character found, potential RLO attack\n+            return false;\n+        }\n+\n+        if ($containsScriptTags || $containsJavascriptEvents || $iframe || preg_match($eventAttributeRegex, $value) || strpos($value, $rloCharacters) !== false) {\n             $this->context->buildViolation($constraint->message)\n                 ->setTranslationDomain('Admin.Notifications.Error')\n                 ->setParameter('%s', $this->formatValue($value))\n@@ -90,11 +102,14 @@ private function getJavascriptEvents()\n         $events = 'onmousedown|onmousemove|onmmouseup|onmouseover|onmouseout|onload|onunload|onfocus|onblur|onchange';\n         $events .= '|onsubmit|ondblclick|onclick|onkeydown|onkeyup|onkeypress|onmouseenter|onmouseleave|onerror|onselect|onreset|onabort|ondragdrop|onresize|onactivate|onafterprint|onmoveend';\n         $events .= '|onafterupdate|onbeforeactivate|onbeforecopy|onbeforecut|onbeforedeactivate|onbeforeeditfocus|onbeforepaste|onbeforeprint|onbeforeunload|onbeforeupdate|onmove';\n-        $events .= '|onbounce|oncellchange|oncontextmenu|oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondeactivate|ondrag|ondragend|ondragenter|onmousewheel';\n+        $events .= '|onbounce|oncellchange|oncontextmenu|oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondeactivate|ondrag|ondragend|ondragenter|ondragexit|onmousewheel';\n         $events .= '|ondragleave|ondragover|ondragstart|ondrop|onerrorupdate|onfilterchange|onfinish|onfocusin|onfocusout|onhashchange|onhelp|oninput|onlosecapture|onmessage|onmouseup|onmovestart';\n         $events .= '|onoffline|ononline|onpaste|onpropertychange|onreadystatechange|onresizeend|onresizestart|onrowenter|onrowexit|onrowsdelete|onrowsinserted|onscroll|onsearch|onselectionchange';\n         $events .= '|onselectstart|onstart|onstop|onanimationcancel|onanimationend|onanimationiteration|onanimationstart';\n         $events .= '|onpointerover|onpointerenter|onpointerdown|onpointermove|onpointerup|onpointerout|onpointerleave|onpointercancel|ongotpointercapture|onlostpointercapture';\n+        $events .= '|onpagehide|onpageshow|onautocomplete|onautocompleteerror|oncanplay|oncanplaythrough|onclose|oncuechange|ondurationchange|onemptied|onended|oninvalid|onloadeddata';\n+        $events .= '|onloadedmetadata|onloadstart|onpause|onplay|onplaying|onpopstate|onprogress|onratechange|onreset|onseeked|onseeking|onshow|onsort|onstalled|onstorage|onsuspend|ontimeupdate';\n+        $events .= '|ontoggle|onvolumechange|onwaiting';\n \n         return $events;\n     }"
        },
        {
            "filename": "tests/Unit/Adapter/ValidateTest.php",
            "diff": "@@ -138,6 +138,20 @@ public function testisValidObjectClassName(bool $expected, string $objectClassNa\n         $this->assertSame($expected, $this->validate->isValidObjectClassName($objectClassName));\n     }\n \n+    /**\n+     * @param string $html\n+     * @param bool $iframeAllowed\n+     * @param $expectedResult\n+     *\n+     * @dataProvider isCleanHtmlDataProvider\n+     *\n+     * @return void\n+     */\n+    public function testIsCleanHtml(string $html, bool $allowFrame, $expectedResult): void\n+    {\n+        $this->assertSame($expectedResult, $this->validate->isCleanHtml($html, $allowFrame));\n+    }\n+\n     public function isValidObjectClassNameDataProvider(): array\n     {\n         return [\n@@ -153,4 +167,100 @@ public function isValidObjectClassNameDataProvider(): array\n             [true, '__'],\n         ];\n     }\n+\n+    private function isCleanHtmlDataProvider()\n+    {\n+        return [\n+            [\n+                '<div randomattribute=\"randomvalue\">test</div>', // nominal case\n+                false,\n+                true\n+            ],\n+            [\n+                '<div\n+\n+randomattribute=\"anything\"   attributewithoutvalue\n+\n+        randomattr=\"random value\">\n+\n+</div>', // nominal case with added spaces and line jumps\n+                false,\n+                true\n+            ],\n+            [\n+                '/form input > embed onerror iframe object', // test plain words with forbidden tag / attributes: should pass\n+                false,\n+                true\n+            ],\n+            [\n+                '<a href=\"#\" onchange=\"evilJavascriptIsCalled()\"></a>', // event attributes are forbidden, should not pass\n+                false,\n+                false\n+            ],\n+            [\n+                '<a href=\"#\" onanything=\"evilJavascriptIsCalled()\"></a>', // random attribute starting with on should not pass\n+                false,\n+                false\n+            ],\n+            [\n+                '<a href=\"#\" oNnotexi=\"evilJavascriptIsCalled()\"></a>', // random attribute starting with on but case insensitive: should not pass\n+                false,\n+                false\n+            ],\n+            [\n+                '<iframe src=\"catvideo.html\" /></iframe>', // iframe forbidden\n+                false,\n+                false\n+            ],\n+            [\n+                '<iframe src=\"catvideo.html\" /></iframe>', // iframe parameter is set to true, should pass\n+                true,\n+                true\n+            ],\n+            [\n+                '<form></form>', // form should not pass,\n+                false,\n+                false\n+            ],\n+            [\n+                '<embed></embed>', // embed should not pass\n+                false,\n+                false\n+            ],\n+            [\n+                '<input>', // input should not pass\n+                false,\n+                false\n+            ],\n+            [\n+                '<script>\n+\n+    </script>', // script tags are forbidden, should not pass (added a random tabulation and line break\n+                false,\n+                false\n+            ],\n+            [\n+                '<object></object>', // objects are forbidden, should not pass\n+                false,\n+                false\n+            ],\n+            [\n+                '<div\n+randomattribute=\"anything\"\n+\n+    onbidule=\"test\" attributewithoutvalue\n+\n+        randomattr=\"random value\">test\n+\n+        </div>', // puting an attribute starting with \"on\" in the middle of other attributes, with spaces and line breaks: shouldn't pass\n+                false,\n+                false\n+            ],\n+            [\n+                '\u202e<img src=x onerror=\"alert(\\'img\\')\">', // test RLO xss attack\n+                false,\n+                false\n+            ]\n+        ];\n+    }\n }"
        },
        {
            "filename": "tests/Unit/Core/ConstraintValidator/CleanHtmlValidatorTest.php",
            "diff": "@@ -56,6 +56,30 @@ public function testItFailsWhenJavascriptEventsAreGiven()\n         ;\n     }\n \n+    public function testItFailsWhenAttributeStartingWithOnIsGiven()\n+    {\n+        $htmlTag = '<a href=\"#\" onanything=\"evilJavascriptIsCalled()\"></a>';\n+\n+        $this->validator->validate($htmlTag, new CleanHtml());\n+\n+        $this->buildViolation((new CleanHtml())->message)\n+            ->setParameter('%s', '\"' . $htmlTag . '\"')\n+            ->assertRaised()\n+        ;\n+    }\n+\n+    public function testCaseInsensitiveOnEventAttributeDetection()\n+    {\n+        $htmlTag = '<a href=\"#\" oNnotexi=\"evilJavascriptIsCalled()\"></a>';\n+\n+        $this->validator->validate($htmlTag, new CleanHtml());\n+\n+        $this->buildViolation((new CleanHtml())->message)\n+            ->setParameter('%s', '\"' . $htmlTag . '\"')\n+            ->assertRaised()\n+        ;\n+    }\n+\n     public function testItFailsWhenIframeIsGiven()\n     {\n         $htmlTag = '<iframe src=\"catvideo.html\" /></iframe>';\n@@ -138,6 +162,61 @@ public function testSucceedsWithPlainWords()\n         $this->context->getViolations();\n     }\n \n+    public function testItSucceedsWhenRegularAttributeIsGiven()\n+    {\n+        $htmlTag = '<div randomattribute=\"blabla\">test</div>';\n+        $this->validator->validate($htmlTag, new CleanHtml());\n+\n+        $this->assertNoViolation();\n+        $this->context->getViolations();\n+    }\n+\n+    public function testSucceedsWithSpaces()\n+    {\n+        $htmlTag = '<div\n+\n+randomattribute=\"blabla\"   attributewithoutvalue\n+\n+        randomattr=\"random value\">\n+\n+</div>';\n+        $this->validator->validate($htmlTag, new CleanHtml());\n+\n+        $this->assertNoViolation();\n+    }\n+\n+    public function itFailsToHaveOnAttributeWithRandomSpacesAndLines()\n+    {\n+        $htmlTag = '<div\n+randomattribute=\"blabla\"\n+\n+    onbidule=\"test\" attributewithoutvalue\n+\n+        randomattr=\"random value\">test\n+\n+        </div>';\n+\n+        $this->buildViolation((new CleanHtml())->message)\n+            ->setParameter('%s', '\"' . $htmlTag . '\"')\n+            ->assertRaised()\n+        ;\n+\n+        $this->context->getViolations();\n+    }\n+\n+    public function itFailsWithRLOInjection()\n+    {\n+        $htmlTag = '\u202e<img src=x onerror=\"alert(\\'img\\')\">';\n+\n+        $this->buildViolation((new CleanHtml())->message)\n+            ->setParameter('%s', '\"' . $htmlTag . '\"')\n+            ->assertRaised()\n+        ;\n+\n+        $this->context->getViolations();\n+\n+    }\n+\n     protected function createValidator()\n     {\n         return new CleanHtmlValidator(false);"
        }
    ],
    "commitTime": "2023-12-13 14:38:33"
}