{
    "CVSSv3": {
        "CVSS": "3.1",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "privilegesRequired": "LOW",
        "userInteraction": "NONE",
        "scope": "UNCHANGED",
        "confidentiality": "NONE",
        "integrity": "LOW",
        "availability": "NONE"
    },
    "credit": [
        "Unknown"
    ],
    "cvssDetails": [
        {
            "assigner": "NVD",
            "cvssV3BaseScore": 5.3,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "NONE",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "NONE",
                "integrity": "LOW",
                "availability": "NONE"
            },
            "severity": "medium"
        }
    ],
    "cvssScore": 4.3,
    "disclosureTime": "2023-12-19 03:30:17",
    "epssDetails": {
        "modelVersion": "v2023.03.01",
        "percentile": "0.38052",
        "probability": "0.00090"
    },
    "exploitMaturity": "Not Defined",
    "id": "SNYK-PHP-CORVEDAPHPSANDBOX-6143591",
    "identifiers": {
        "CVE": [
            "CVE-2014-125107"
        ],
        "CWE": [
            "CWE-77"
        ]
    },
    "language": "php",
    "malicious": false,
    "packageManager": "composer",
    "publicationTime": "2024-01-04 15:37:17",
    "remediation": "Upgrade corveda/php-sandbox to version 1.3.5 or higher. ",
    "severity": "medium",
    "socialTrendAlert": false,
    "title": "Command Injection",
    "vulnDescription": {
        "Overview": "Affected versions of this package are vulnerable to Command Injection due to a flaw in the String Handler component. An attacker can bypass protection mechanisms by manipulating the affected component. This could lead to unauthorized actions being performed within the context of the application. "
    },
    "source_code": [
        {
            "filename": "CHANGELOG.md",
            "diff": "@@ -1,5 +1,12 @@\n #CHANGELOG\n \n+##03/10/2014\n+- Addressed potential vulnerabilities related to SandboxedStrings where sandboxed code could manipulate the strings in a way that could defeat their protection\n+- Solved errors from casting sandboxed strings to int\n+- Overwrote some internal PHP functions to further mask SandboxedStrings from the sandboxed code and prevent type-checking errors\n+- Added more tests related to SandboxedStrings\n+- Made some minor tweaks to PHPSandbox Toolkit\n+\n ##03/05/2014\n - Corrected an issue where the sandbox variable could be accessed from within the sandbox in PHP 5.4+\n "
        },
        {
            "filename": "LICENSE",
            "diff": "@@ -1,4 +1,4 @@\n-Copyright (c) 2013 by Elijah Horton (fieryprophet [at] yahoo.com)\n+Copyright (c) 2013-2014 by Elijah Horton (fieryprophet [at] yahoo.com)\n \n Some rights reserved.\n "
        },
        {
            "filename": "MANUAL.html",
            "diff": "@@ -34,7 +34,7 @@ <h3>1 - About PHPSandbox &amp; PHPSandbox Toolkit</h3>\n                 </a>\n                 <br/>\n                 <h1 style=\"margin: 0;\">\n-                    PHPSandbox Toolkit 1.3.1\n+                    PHPSandbox Toolkit 1.3.3\n                 </h1>\n                 <br/>\n                 <strong>Developed by: </strong> <a href=\"http://www.fieryprophet.com\" target=\"_blank\">Elijah Horton</a>"
        },
        {
            "filename": "README.md",
            "diff": "@@ -8,11 +8,7 @@ It also utilizes [FunctionParser](https://github.com/jeremeamia/FunctionParser)\n \n **Online API Documentation:** [http://fieryprophet.com/phpsandbox-docs/](http://fieryprophet.com/phpsandbox-docs/)\n \n-[![Build Status](https://travis-ci.org/fieryprophet/php-sandbox.png?branch=master)](https://travis-ci.org/fieryprophet/php-sandbox)\n-\n-[![Scrutinizer Quality Score](https://scrutinizer-ci.com/g/fieryprophet/php-sandbox/badges/quality-score.png?s=4f2d82525b9e2c6bae18e26cf643ca3fd09333fc)](https://scrutinizer-ci.com/g/fieryprophet/php-sandbox/)\n-\n-[![Code Coverage](https://scrutinizer-ci.com/g/fieryprophet/php-sandbox/badges/coverage.png?s=d6cef7d18a66d2ac39b76410b76c89fa15d84b8c)](https://scrutinizer-ci.com/g/fieryprophet/php-sandbox/)\n+[![Build Status](https://travis-ci.org/fieryprophet/php-sandbox.png?branch=master)](https://travis-ci.org/fieryprophet/php-sandbox) [![Scrutinizer Quality Score](https://scrutinizer-ci.com/g/fieryprophet/php-sandbox/badges/quality-score.png?s=4f2d82525b9e2c6bae18e26cf643ca3fd09333fc)](https://scrutinizer-ci.com/g/fieryprophet/php-sandbox/) [![Code Coverage](https://scrutinizer-ci.com/g/fieryprophet/php-sandbox/badges/coverage.png?s=d6cef7d18a66d2ac39b76410b76c89fa15d84b8c)](https://scrutinizer-ci.com/g/fieryprophet/php-sandbox/) [![Latest Stable Version](https://poser.pugx.org/fieryprophet/php-sandbox/v/stable.png)](https://packagist.org/packages/fieryprophet/php-sandbox) [![Total Downloads](https://poser.pugx.org/fieryprophet/php-sandbox/downloads.png)](https://packagist.org/packages/fieryprophet/php-sandbox) [![Latest Unstable Version](https://poser.pugx.org/fieryprophet/php-sandbox/v/unstable.png)](https://packagist.org/packages/fieryprophet/php-sandbox) [![License](https://poser.pugx.org/fieryprophet/php-sandbox/license.png)](https://packagist.org/packages/fieryprophet/php-sandbox)\n \n ##Features:\n "
        },
        {
            "filename": "docs/classes/PHPSandbox.Error.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-553992218\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-2138946611\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-553992218\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-2138946611\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-2135081389\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-288135741\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-2135081389\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-288135741\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -2448,7 +2448,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/classes/PHPSandbox.PHPSandbox.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-148348232\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-1578178908\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-148348232\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-1578178908\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1647787725\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-736098440\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-1647787725\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-736098440\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -295,12 +295,21 @@ <h2>Summary</h2>\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__get_declared_classes\" class=\"\">_get_declared_classes()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__get_declared_interfaces\" class=\"\">_get_declared_interfaces()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__get_declared_traits\" class=\"\">_get_declared_traits()</a><br />\n-                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__var_dump\" class=\"\">_var_dump()</a><br />\n-                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__print_r\" class=\"\">_print_r()</a><br />\n-                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__var_export\" class=\"\">_var_export()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__func_get_args\" class=\"\">_func_get_args()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__func_get_arg\" class=\"\">_func_get_arg()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__func_num_args\" class=\"\">_func_num_args()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__wrap\" class=\"\">_wrap()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__var_dump\" class=\"\">_var_dump()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__print_r\" class=\"\">_print_r()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__var_export\" class=\"\">_var_export()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__intval\" class=\"\">_intval()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__floatval\" class=\"\">_floatval()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__arrayval\" class=\"\">_arrayval()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__objectval\" class=\"\">_objectval()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__is_string\" class=\"\">_is_string()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__is_object\" class=\"\">_is_object()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__is_scalar\" class=\"\">_is_scalar()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#method__is_callable\" class=\"\">_is_callable()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#method_call_func\" class=\"\">call_func()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#method_define\" class=\"\">define()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#method_undefine\" class=\"\">undefine()</a><br />\n@@ -549,8 +558,8 @@ <h2>Summary</h2>\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_superglobals\" class=\"\">$superglobals</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_magic_constants\" class=\"\">$magic_constants</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_defined_funcs\" class=\"\">$defined_funcs</a><br />\n-                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_var_funcs\" class=\"\">$var_funcs</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_arg_funcs\" class=\"\">$arg_funcs</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_sandboxed_string_funcs\" class=\"\">$sandboxed_string_funcs</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_name\" class=\"\">$name</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_error_level\" class=\"\">$error_level</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_restore_error_level\" class=\"\">$restore_error_level</a><br />\n@@ -564,8 +573,8 @@ <h2>Summary</h2>\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_auto_whitelist_traits\" class=\"\">$auto_whitelist_traits</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_auto_define_vars\" class=\"\">$auto_define_vars</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_overwrite_defined_funcs\" class=\"\">$overwrite_defined_funcs</a><br />\n-                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_overwrite_var_funcs\" class=\"\">$overwrite_var_funcs</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_overwrite_func_get_args\" class=\"\">$overwrite_func_get_args</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_overwrite_sandboxed_string_funcs\" class=\"\">$overwrite_sandboxed_string_funcs</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_overwrite_superglobals\" class=\"\">$overwrite_superglobals</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_allow_functions\" class=\"\">$allow_functions</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.PHPSandbox.html#property_allow_closures\" class=\"\">$allow_closures</a><br />\n@@ -985,17 +994,17 @@ <h2>Tags</h2>\n \n                                     <div class=\"row-fluid\">\n         <div class=\"span8 content class\">\n-            <a id=\"property_var_funcs\" name=\"property_var_funcs\" class=\"anchor\"></a>\n+            <a id=\"property_arg_funcs\" name=\"property_arg_funcs\" class=\"anchor\"></a>\n             <article class=\"property\">\n-                <h3 class=\"public \">$var_funcs</h3>\n-                <pre class=\"signature\">$var_funcs : array</pre>\n+                <h3 class=\"public \">$arg_funcs</h3>\n+                <pre class=\"signature\">$arg_funcs : array</pre>\n                 <p><em></em></p>\n                 \n \n \n                                 <h4>Type</h4>\n                 array\n-                &mdash; A static array of var_dump, print_r and var_export for redefining those functions                            </article>\n+                &mdash; A static array of func_get_args, func_get_arg, and func_num_args used for redefining those functions                            </article>\n         </div>\n         <aside class=\"span4 detailsbar\">\n             <h1><i class=\"icon-arrow-down\"></i></h1>\n@@ -1010,17 +1019,18 @@ <h2>Tags</h2>\n \n                                     <div class=\"row-fluid\">\n         <div class=\"span8 content class\">\n-            <a id=\"property_arg_funcs\" name=\"property_arg_funcs\" class=\"anchor\"></a>\n+            <a id=\"property_sandboxed_string_funcs\" name=\"property_sandboxed_string_funcs\" class=\"anchor\"></a>\n             <article class=\"property\">\n-                <h3 class=\"public \">$arg_funcs</h3>\n-                <pre class=\"signature\">$arg_funcs : array</pre>\n+                <h3 class=\"public \">$sandboxed_string_funcs</h3>\n+                <pre class=\"signature\">$sandboxed_string_funcs : array</pre>\n                 <p><em></em></p>\n                 \n \n \n                                 <h4>Type</h4>\n                 array\n-                &mdash; A static array of func_get_args, func_get_arg, and func_num_args used for redefining those functions                            </article>\n+                &mdash; A static array of var_dump, print_r and var_export, intval, floatval, is_string, is_object,\n+                         is_scalar and is_callable for redefining those functions                            </article>\n         </div>\n         <aside class=\"span4 detailsbar\">\n             <h1><i class=\"icon-arrow-down\"></i></h1>\n@@ -1456,17 +1466,17 @@ <h2>Tags</h2>\n \n                                     <div class=\"row-fluid\">\n         <div class=\"span8 content class\">\n-            <a id=\"property_overwrite_var_funcs\" name=\"property_overwrite_var_funcs\" class=\"anchor\"></a>\n+            <a id=\"property_overwrite_func_get_args\" name=\"property_overwrite_func_get_args\" class=\"anchor\"></a>\n             <article class=\"property\">\n-                <h3 class=\"public \">$overwrite_var_funcs</h3>\n-                <pre class=\"signature\">$overwrite_var_funcs : bool</pre>\n+                <h3 class=\"public \">$overwrite_func_get_args</h3>\n+                <pre class=\"signature\">$overwrite_func_get_args : bool</pre>\n                 <p><em></em></p>\n                 \n \n \n                                 <h4>Type</h4>\n                 bool\n-                &mdash; Should PHPSandbox overwrite var_dump, print_r, and var_export?                            </article>\n+                &mdash; Should PHPSandbox overwrite func_get_args, func_get_arg and func_num_args?                            </article>\n         </div>\n         <aside class=\"span4 detailsbar\">\n             <h1><i class=\"icon-arrow-down\"></i></h1>\n@@ -1489,17 +1499,17 @@ <h2>Tags</h2>\n \n                                     <div class=\"row-fluid\">\n         <div class=\"span8 content class\">\n-            <a id=\"property_overwrite_func_get_args\" name=\"property_overwrite_func_get_args\" class=\"anchor\"></a>\n+            <a id=\"property_overwrite_sandboxed_string_funcs\" name=\"property_overwrite_sandboxed_string_funcs\" class=\"anchor\"></a>\n             <article class=\"property\">\n-                <h3 class=\"public \">$overwrite_func_get_args</h3>\n-                <pre class=\"signature\">$overwrite_func_get_args : bool</pre>\n+                <h3 class=\"public \">$overwrite_sandboxed_string_funcs</h3>\n+                <pre class=\"signature\">$overwrite_sandboxed_string_funcs : bool</pre>\n                 <p><em></em></p>\n                 \n \n \n                                 <h4>Type</h4>\n                 bool\n-                &mdash; Should PHPSandbox overwrite func_get_args, func_get_arg and func_num_args?                            </article>\n+                &mdash; Should PHPSandbox overwrite $_GET, $_POST, $_COOKIE, $_FILES, $_ENV, $_REQUEST, $_SERVER, $_SESSION and $GLOBALS superglobals? If so, unless alternate superglobal values have been defined they will return as empty arrays.                            </article>\n         </div>\n         <aside class=\"span4 detailsbar\">\n             <h1><i class=\"icon-arrow-down\"></i></h1>\n@@ -1532,7 +1542,7 @@ <h3 class=\"public \">$overwrite_superglobals</h3>\n \n                                 <h4>Type</h4>\n                 bool\n-                &mdash; Should PHPSandbox overwrite $_GET, $_POST, $_COOKIE, $_FILES, $_ENV, $_REQUEST, $_SERVER, $_SESSION and $GLOBALS superglobals? If so, unless alternate superglobal values have been defined they will return as empty arrays.                            </article>\n+                &mdash; Should PHPSandbox overwrite functions to help hide SandboxedStrings?                            </article>\n         </div>\n         <aside class=\"span4 detailsbar\">\n             <h1><i class=\"icon-arrow-down\"></i></h1>\n@@ -6287,6 +6297,168 @@ <h2>Tags</h2>\n \n                                     <div class=\"row-fluid\">\n         <div class=\"span8 content class\">\n+            <a id=\"method__func_get_args\" name=\"method__func_get_args\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">_func_get_args()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_func_get_args(array <span class=\"argument\">$arguments</span>) : array</pre>\n+                <p><em>Get PHPSandbox redefined function arguments array</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>array</td>\n+                                <td>$arguments</td>\n+                                <td><p>Array result from func_get_args() is passed here</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    array\n+                                            &mdash; <p>Returns the redefined arguments array</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method__func_get_arg\" name=\"method__func_get_arg\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">_func_get_arg()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_func_get_arg(array <span class=\"argument\">$arguments</span>, int <span class=\"argument\">$index</span>) : array</pre>\n+                <p><em>Get PHPSandbox redefined function argument</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>array</td>\n+                                <td>$arguments</td>\n+                                <td><p>Array result from func_get_args() is passed here</p>\n+</td>\n+                            </tr>\n+                                                    <tr>\n+                                <td>int</td>\n+                                <td>$index</td>\n+                                <td><p>Requested func_get_arg index is passed here</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    array\n+                                            &mdash; <p>Returns the redefined argument</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method__func_num_args\" name=\"method__func_num_args\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">_func_num_args()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_func_num_args(array <span class=\"argument\">$arguments</span>) : int</pre>\n+                <p><em>Get PHPSandbox redefined number of function arguments</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>array</td>\n+                                <td>$arguments</td>\n+                                <td><p>Array result from func_get_args() is passed here</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    int\n+                                            &mdash; <p>Returns the redefined number of function arguments</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method__wrap\" name=\"method__wrap\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">_wrap()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_wrap(mixed <span class=\"argument\">$value</span>) : mixed|\\PHPSandbox\\SandboxedString</pre>\n+                <p><em>Wrap output value in SandboxString</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to wrap</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    mixed|<a href=\"../classes/PHPSandbox.SandboxedString.html\">\\PHPSandbox\\SandboxedString</a>\n+                                            &mdash; <p>Returns the wrapped value</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n             <a id=\"method__var_dump\" name=\"method__var_dump\" class=\"anchor\"></a>\n             <article class=\"method\">\n                 <h3 class=\"public \">_var_dump()</h3>\n@@ -6377,29 +6549,29 @@ <h2>Tags</h2>\n \n                                     <div class=\"row-fluid\">\n         <div class=\"span8 content class\">\n-            <a id=\"method__func_get_args\" name=\"method__func_get_args\" class=\"anchor\"></a>\n+            <a id=\"method__intval\" name=\"method__intval\" class=\"anchor\"></a>\n             <article class=\"method\">\n-                <h3 class=\"public \">_func_get_args()</h3>\n+                <h3 class=\"public \">_intval()</h3>\n                 <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n-                <pre class=\"signature\" style=\"margin-right: 54px;\">_func_get_args(array <span class=\"argument\">$arguments</span>) : array</pre>\n-                <p><em>Get PHPSandbox redefined function arguments array</em></p>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_intval(mixed <span class=\"argument\">$value</span>) : int</pre>\n+                <p><em>Return integer value of SandboxedString or mixed value</em></p>\n                 \n \n \n                                     <h4>Parameters</h4>\n                     <table class=\"table table-condensed table-hover\">\n                                                     <tr>\n-                                <td>array</td>\n-                                <td>$arguments</td>\n-                                <td><p>Array result from func_get_args() is passed here</p>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to return as integer</p>\n </td>\n                             </tr>\n                                             </table>\n                 \n                 \n                                     <h4>Returns</h4>\n-                    array\n-                                            &mdash; <p>Returns the redefined arguments array</p>\n+                    int\n+                                            &mdash; <p>Returns the integer value</p>\n \n                                                 </article>\n         </div>\n@@ -6416,35 +6588,68 @@ <h2>Tags</h2>\n \n                                     <div class=\"row-fluid\">\n         <div class=\"span8 content class\">\n-            <a id=\"method__func_get_arg\" name=\"method__func_get_arg\" class=\"anchor\"></a>\n+            <a id=\"method__floatval\" name=\"method__floatval\" class=\"anchor\"></a>\n             <article class=\"method\">\n-                <h3 class=\"public \">_func_get_arg()</h3>\n+                <h3 class=\"public \">_floatval()</h3>\n                 <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n-                <pre class=\"signature\" style=\"margin-right: 54px;\">_func_get_arg(array <span class=\"argument\">$arguments</span>, int <span class=\"argument\">$index</span>) : array</pre>\n-                <p><em>Get PHPSandbox redefined function argument</em></p>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_floatval(mixed <span class=\"argument\">$value</span>) : float</pre>\n+                <p><em>Return float value of SandboxedString or mixed value</em></p>\n                 \n \n \n                                     <h4>Parameters</h4>\n                     <table class=\"table table-condensed table-hover\">\n                                                     <tr>\n-                                <td>array</td>\n-                                <td>$arguments</td>\n-                                <td><p>Array result from func_get_args() is passed here</p>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to return as float</p>\n </td>\n                             </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    float\n+                                            &mdash; <p>Returns the float value</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method__arrayval\" name=\"method__arrayval\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">_arrayval()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_arrayval(mixed <span class=\"argument\">$value</span>) : array</pre>\n+                <p><em>Return array value of SandboxedString or mixed value</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n                                                     <tr>\n-                                <td>int</td>\n-                                <td>$index</td>\n-                                <td><p>Requested func_get_arg index is passed here</p>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to return as array</p>\n </td>\n                             </tr>\n                                             </table>\n                 \n                 \n                                     <h4>Returns</h4>\n                     array\n-                                            &mdash; <p>Returns the redefined argument</p>\n+                                            &mdash; <p>Returns the array value</p>\n \n                                                 </article>\n         </div>\n@@ -6461,29 +6666,185 @@ <h2>Tags</h2>\n \n                                     <div class=\"row-fluid\">\n         <div class=\"span8 content class\">\n-            <a id=\"method__func_num_args\" name=\"method__func_num_args\" class=\"anchor\"></a>\n+            <a id=\"method__objectval\" name=\"method__objectval\" class=\"anchor\"></a>\n             <article class=\"method\">\n-                <h3 class=\"public \">_func_num_args()</h3>\n+                <h3 class=\"public \">_objectval()</h3>\n                 <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n-                <pre class=\"signature\" style=\"margin-right: 54px;\">_func_num_args(array <span class=\"argument\">$arguments</span>) : int</pre>\n-                <p><em>Get PHPSandbox redefined number of function arguments</em></p>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_objectval(mixed <span class=\"argument\">$value</span>) : object</pre>\n+                <p><em>Return object value of SandboxedString or mixed value</em></p>\n                 \n \n \n                                     <h4>Parameters</h4>\n                     <table class=\"table table-condensed table-hover\">\n                                                     <tr>\n-                                <td>array</td>\n-                                <td>$arguments</td>\n-                                <td><p>Array result from func_get_args() is passed here</p>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to return as object</p>\n </td>\n                             </tr>\n                                             </table>\n                 \n                 \n                                     <h4>Returns</h4>\n-                    int\n-                                            &mdash; <p>Returns the redefined number of function arguments</p>\n+                    object\n+                                            &mdash; <p>Returns the object value</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method__is_string\" name=\"method__is_string\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">_is_string()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_is_string(mixed <span class=\"argument\">$value</span>) : bool</pre>\n+                <p><em>Return is_string value of SandboxedString or mixed value</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to check if is_string</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    bool\n+                                            &mdash; <p>Returns the is_string value</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method__is_object\" name=\"method__is_object\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">_is_object()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_is_object(mixed <span class=\"argument\">$value</span>) : bool</pre>\n+                <p><em>Return is_object value of SandboxedString or mixed value</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to check if is_object</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    bool\n+                                            &mdash; <p>Returns the is_object value</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method__is_scalar\" name=\"method__is_scalar\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">_is_scalar()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_is_scalar(mixed <span class=\"argument\">$value</span>) : bool</pre>\n+                <p><em>Return is_scalar value of SandboxedString or mixed value</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to check if is_scalar</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    bool\n+                                            &mdash; <p>Returns the is_scalar value</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method__is_callable\" name=\"method__is_callable\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">_is_callable()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">_is_callable(mixed <span class=\"argument\">$value</span>) : bool</pre>\n+                <p><em>Return is_callable value of SandboxedString or mixed value</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to check if is_callable</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    bool\n+                                            &mdash; <p>Returns the is_callable value</p>\n \n                                                 </article>\n         </div>\n@@ -18938,7 +19299,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/classes/PHPSandbox.SandboxWhitelistVisitor.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-174531007\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-872821338\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-174531007\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-872821338\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1263837536\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-2118974906\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-1263837536\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-2118974906\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -455,7 +455,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/classes/PHPSandbox.SandboxedString.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-298168079\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-2041490650\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-298168079\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-2041490650\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-171292534\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-2075822163\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-171292534\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-2075822163\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -210,6 +210,11 @@ <h2>Summary</h2>\n                                                                     <a href=\"../classes/PHPSandbox.SandboxedString.html#method___construct\" class=\"\">__construct()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.SandboxedString.html#method___toString\" class=\"\">__toString()</a><br />\n                                                                     <a href=\"../classes/PHPSandbox.SandboxedString.html#method___invoke\" class=\"\">__invoke()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.SandboxedString.html#method_offsetSet\" class=\"\">offsetSet()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.SandboxedString.html#method_offsetGet\" class=\"\">offsetGet()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.SandboxedString.html#method_offsetExists\" class=\"\">offsetExists()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.SandboxedString.html#method_offsetUnset\" class=\"\">offsetUnset()</a><br />\n+                                                                    <a href=\"../classes/PHPSandbox.SandboxedString.html#method_getIterator\" class=\"\">getIterator()</a><br />\n                                                             </section>\n                             <section class=\"span4\">\n                                                                     <em>No public properties found</em>\n@@ -456,6 +461,190 @@ <h2>Tags</h2>\n         </aside>\n     </div>\n \n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method_offsetSet\" name=\"method_offsetSet\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">offsetSet()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">offsetSet(mixed <span class=\"argument\">$offset</span>, mixed <span class=\"argument\">$value</span>)</pre>\n+                <p><em>Set string value at specified offset</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$offset</td>\n+                                <td><p>Offset to set value</p>\n+</td>\n+                            </tr>\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$value</td>\n+                                <td><p>Value to set</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                            </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method_offsetGet\" name=\"method_offsetGet\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">offsetGet()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">offsetGet(mixed <span class=\"argument\">$offset</span>) : string</pre>\n+                <p><em>Get string value at specified offset</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$offset</td>\n+                                <td><p>Offset to get value</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    string\n+                                            &mdash; <p>Value to return</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method_offsetExists\" name=\"method_offsetExists\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">offsetExists()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">offsetExists(mixed <span class=\"argument\">$offset</span>) : bool</pre>\n+                <p><em>Check if specified offset exists in string value</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$offset</td>\n+                                <td><p>Offset to check</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    bool\n+                                            &mdash; <p>Return true if offset exists, false otherwise</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method_offsetUnset\" name=\"method_offsetUnset\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">offsetUnset()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">offsetUnset(mixed <span class=\"argument\">$offset</span>)</pre>\n+                <p><em>Unset string value at specified offset</em></p>\n+                \n+\n+\n+                                    <h4>Parameters</h4>\n+                    <table class=\"table table-condensed table-hover\">\n+                                                    <tr>\n+                                <td>mixed</td>\n+                                <td>$offset</td>\n+                                <td><p>Offset to unset</p>\n+</td>\n+                            </tr>\n+                                            </table>\n+                \n+                \n+                            </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n+                                    <div class=\"row-fluid\">\n+        <div class=\"span8 content class\">\n+            <a id=\"method_getIterator\" name=\"method_getIterator\" class=\"anchor\"></a>\n+            <article class=\"method\">\n+                <h3 class=\"public \">getIterator()</h3>\n+                <a href=\"#source-view\" role=\"button\" class=\"pull-right btn\" data-toggle=\"modal\" style=\"font-size: 1.1em; padding: 9px 14px\"><i class=\"icon-code\"></i></a>\n+                <pre class=\"signature\" style=\"margin-right: 54px;\">getIterator() : \\ArrayIterator</pre>\n+                <p><em>Return iterator for string value</em></p>\n+                \n+\n+\n+                \n+                \n+                                    <h4>Returns</h4>\n+                    \\ArrayIterator\n+                                            &mdash; <p>Array iterator to return</p>\n+\n+                                                </article>\n+        </div>\n+        <aside class=\"span4 detailsbar\">\n+            <h1><i class=\"icon-arrow-down\"></i></h1>\n+                                                            <dl>\n+                                                                            </dl>\n+            <h2>Tags</h2>\n+            <table class=\"table table-condensed\">\n+                                    <tr><td colspan=\"2\"><em>None found</em></td></tr>\n+                            </table>\n+        </aside>\n+    </div>\n+\n                                                                     </div>\n     </section>\n \n@@ -506,7 +695,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/classes/PHPSandbox.ValidatorVisitor.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-190716146\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-761076047\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-190716146\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-761076047\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1067596443\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1291512294\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-1067596443\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-1291512294\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -556,12 +556,6 @@ <h4>Parameters</h4>\n                             </tr>\n                                             </table>\n                 \n-                                    <h4>Throws</h4>\n-                    <dl>\n-                                                    <dt>\\PHPSandbox\\Error</dt>\n-                            <dd><p>Throws exception if $node attempts to cast when $allow_casting is false in the PHPSandbox configuration</p>\n-</dd>\n-                                                                    </dl>\n                 \n                                     <h4>Returns</h4>\n                     string|null\n@@ -630,7 +624,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/classes/PHPSandbox.WhitelistVisitor.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-1971830681\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-2090806726\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-1971830681\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-2090806726\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-868130616\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-185668004\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-868130616\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-185668004\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -459,7 +459,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/files/Error.php.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-1697921261\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-174432776\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-1697921261\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-174432776\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-130381843\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-7998099\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-130381843\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-7998099\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -269,7 +269,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/files/Error.php.txt",
            "diff": "@@ -11,7 +11,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class Error extends \\Exception {\n         /* START ERROR CODES */"
        },
        {
            "filename": "docs/files/PHPSandbox.php.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-555703967\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-101492745\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-555703967\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-101492745\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-2138167363\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-288228325\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-2138167363\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-288228325\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -269,7 +269,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/files/PHPSandbox.php.txt",
            "diff": "@@ -14,7 +14,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class PHPSandbox {\n         /**\n@@ -87,14 +87,6 @@\n             'get_declared_interfaces',\n             'get_declared_traits'\n         );\n-        /**\n-         * @var    array          A static array of var_dump, print_r and var_export for redefining those functions\n-         */\n-        public static $var_funcs = array(\n-            'var_dump',\n-            'print_r',\n-            'var_export'\n-        );\n         /**\n          * @var    array          A static array of func_get_args, func_get_arg, and func_num_args used for redefining those functions\n          */\n@@ -103,6 +95,21 @@\n             'func_get_arg',\n             'func_num_args'\n         );\n+        /**\n+         * @var    array          A static array of var_dump, print_r and var_export, intval, floatval, is_string, is_object,\n+         *                          is_scalar and is_callable for redefining those functions\n+         */\n+        public static $sandboxed_string_funcs = array(\n+            'var_dump',\n+            'print_r',\n+            'var_export',\n+            'intval',\n+            'floatval',\n+            'is_string',\n+            'is_object',\n+            'is_scalar',\n+            'is_callable'\n+        );\n         /**\n          * @var    string       The randomly generated name of the PHPSandbox variable passed to the generated closure\n          */\n@@ -253,11 +260,6 @@\n          * @default true\n          */\n         public $overwrite_defined_funcs     = true;\n-        /**\n-         * @var    bool       Should PHPSandbox overwrite var_dump, print_r, and var_export?\n-         * @default true\n-         */\n-        public $overwrite_var_funcs         = true;\n         /**\n          * @var    bool       Should PHPSandbox overwrite func_get_args, func_get_arg and func_num_args?\n          * @default true\n@@ -267,6 +269,11 @@\n          * @var    bool       Should PHPSandbox overwrite $_GET, $_POST, $_COOKIE, $_FILES, $_ENV, $_REQUEST, $_SERVER, $_SESSION and $GLOBALS superglobals? If so, unless alternate superglobal values have been defined they will return as empty arrays.\n          * @default true\n          */\n+        public $overwrite_sandboxed_string_funcs         = true;\n+        /**\n+         * @var    bool       Should PHPSandbox overwrite functions to help hide SandboxedStrings?\n+         * @default true\n+         */\n         public $overwrite_superglobals      = true;\n         /**\n          * @var    bool       Should PHPSandbox allow sandboxed code to declare functions?\n@@ -1920,6 +1927,58 @@\n             }\n             return array_values($traits);\n         }\n+        /** Get PHPSandbox redefined function arguments array\n+         *\n+         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         *\n+         * @return  array           Returns the redefined arguments array\n+         */\n+        public function _func_get_args(array $arguments = array()){\n+            foreach($arguments as $index => $value){\n+                if($value instanceof self){\n+                    unset($arguments[$index]); //hide PHPSandbox variable\n+                }\n+            }\n+            return $arguments;\n+        }\n+        /** Get PHPSandbox redefined function argument\n+         *\n+         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         *\n+         * @param   int             $index          Requested func_get_arg index is passed here\n+         *\n+         * @return  array           Returns the redefined argument\n+         */\n+        public function _func_get_arg(array $arguments = array(), $index = 0){\n+            if($arguments[$index] instanceof self){\n+                $index++;   //get next argument instead\n+            }\n+            return isset($arguments[$index]) && !($arguments[$index] instanceof self) ? $arguments[$index] : null;\n+        }\n+        /** Get PHPSandbox redefined number of function arguments\n+         *\n+         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         *\n+         * @return  int             Returns the redefined number of function arguments\n+         */\n+        public function _func_num_args(array $arguments = array()){\n+            $count = count($arguments);\n+            foreach($arguments as $argument){\n+                if($argument instanceof self){\n+                    $count--;\n+                }\n+            }\n+            return $count > 0 ? $count : 0;\n+        }\n+        /** Wrap output value in SandboxString\n+         *\n+         * @param   mixed                   $value      Value to wrap\n+         *\n+         * @return  mixed|SandboxedString   Returns the wrapped value\n+         */\n+        public function _wrap($value){\n+            return is_string($value) ? new SandboxedString($value, $this) : $value;\n+        }\n         /** Get PHPSandbox redefined var_dump\n          *\n          * @return  array           Returns the redefined var_dump\n@@ -1965,48 +2024,86 @@\n             }\n             return call_user_func_array('var_export', $arguments);\n         }\n-        /** Get PHPSandbox redefined function arguments array\n+        /** Return integer value of SandboxedString or mixed value\n          *\n-         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         * @param   mixed           $value      Value to return as integer\n          *\n-         * @return  array           Returns the redefined arguments array\n+         * @return  int             Returns the integer value\n          */\n-        public function _func_get_args(array $arguments = array()){\n-            foreach($arguments as $index => $value){\n-                if($value instanceof self){\n-                    unset($arguments[$index]); //hide PHPSandbox variable\n-                }\n-            }\n-            return $arguments;\n+        public function _intval($value){\n+            return intval($value instanceof SandboxedString ? strval($value): $value);\n         }\n-        /** Get PHPSandbox redefined function argument\n+        /** Return float value of SandboxedString or mixed value\n          *\n-         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         * @param   mixed           $value      Value to return as float\n          *\n-         * @param   int             $index          Requested func_get_arg index is passed here\n+         * @return  float           Returns the float value\n+         */\n+        public function _floatval($value){\n+            return floatval($value instanceof SandboxedString ? strval($value): $value);\n+        }\n+        /** Return array value of SandboxedString or mixed value\n          *\n-         * @return  array           Returns the redefined argument\n+         * @param   mixed           $value      Value to return as array\n+         *\n+         * @return  array           Returns the array value\n          */\n-        public function _func_get_arg(array $arguments = array(), $index = 0){\n-            if($arguments[$index] instanceof self){\n-                $index++;   //get next argument instead\n+        public function _arrayval($value){\n+            if($value instanceof SandboxedString){\n+                return (array)strval($value);\n             }\n-            return isset($arguments[$index]) && !($arguments[$index] instanceof self) ? $arguments[$index] : null;\n+            return is_array($value) ? $value : (array)$value;\n         }\n-        /** Get PHPSandbox redefined number of function arguments\n+        /** Return object value of SandboxedString or mixed value\n          *\n-         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         * @param   mixed           $value      Value to return as object\n          *\n-         * @return  int             Returns the redefined number of function arguments\n+         * @return  object          Returns the object value\n          */\n-        public function _func_num_args(array $arguments = array()){\n-            $count = count($arguments);\n-            foreach($arguments as $argument){\n-                if($argument instanceof self){\n-                    $count--;\n-                }\n+        public function _objectval($value){\n+            if($value instanceof SandboxedString){\n+                return (object)strval($value);\n             }\n-            return $count > 0 ? $count : 0;\n+            return is_object($value) ? $value : (object)$value;\n+        }\n+        /** Return is_string value of SandboxedString or mixed value\n+         *\n+         * @param   mixed           $value      Value to check if is_string\n+         *\n+         * @return  bool            Returns the is_string value\n+         */\n+        public function _is_string($value){\n+            return ($value instanceof SandboxedString) ? true : is_string($value);\n+        }\n+        /** Return is_object value of SandboxedString or mixed value\n+         *\n+         * @param   mixed           $value      Value to check if is_object\n+         *\n+         * @return  bool            Returns the is_object value\n+         */\n+        public function _is_object($value){\n+            return ($value instanceof SandboxedString) ? false : is_object($value);\n+        }\n+        /** Return is_scalar value of SandboxedString or mixed value\n+         *\n+         * @param   mixed           $value      Value to check if is_scalar\n+         *\n+         * @return  bool            Returns the is_scalar value\n+         */\n+        public function _is_scalar($value){\n+            return ($value instanceof SandboxedString) ? true : is_scalar($value);\n+        }\n+        /** Return is_callable value of SandboxedString or mixed value\n+         *\n+         * @param   mixed           $value      Value to check if is_callable\n+         *\n+         * @return  bool            Returns the is_callable value\n+         */\n+        public function _is_callable($value){\n+            if($value instanceof SandboxedString){\n+                $value = strval($value);\n+            }\n+            return is_callable($value);\n         }\n         /** Get PHPSandbox redefined function. This is an internal PHPSandbox function but requires public access to work.\n          *\n@@ -5720,6 +5817,8 @@\n                     $this->error(\"Sandboxed code attempted to call closure!\", Error::CLOSURE_ERROR);\n                 }\n                 return true;\n+            } else if($name instanceof SandboxedString){\n+                $name = strval($name);\n             }\n             if(!$name || !is_string($name)){\n                 $this->error(\"Sandboxed code attempted to call unnamed function!\", Error::VALID_FUNC_ERROR, null, '');\n@@ -5751,6 +5850,9 @@\n          */\n         public function check_var($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed variable!\", Error::VALID_VAR_ERROR, null, '');\n             }\n@@ -5780,6 +5882,9 @@\n          */\n         public function check_global($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed global!\", Error::VALID_GLOBAL_ERROR, null, '');\n             }\n@@ -5807,6 +5912,9 @@\n          */\n         public function check_superglobal($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed superglobal!\", Error::VALID_SUPERGLOBAL_ERROR, null, '');\n             }\n@@ -5837,6 +5945,9 @@\n          */\n         public function check_const($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed constant!\", Error::VALID_CONST_ERROR, null, '');\n             }\n@@ -5872,6 +5983,9 @@\n          */\n         public function check_magic_const($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed magic constant!\", Error::VALID_MAGIC_CONST_ERROR, null, '');\n             }\n@@ -5902,6 +6016,9 @@\n          */\n         public function check_namespace($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed namespace!\", Error::VALID_NAMESPACE_ERROR, null, '');\n             }\n@@ -5932,6 +6049,9 @@\n          */\n         public function check_alias($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed alias!\", Error::VALID_ALIAS_ERROR, null, '');\n             }\n@@ -5973,6 +6093,9 @@\n          */\n         public function check_class($name, $extends = false){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             $action = $extends ? 'extend' : 'call';\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to $action unnamed class!\", Error::VALID_CLASS_ERROR, null, '');\n@@ -6007,6 +6130,9 @@\n          */\n         public function check_interface($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed interface!\", Error::VALID_INTERFACE_ERROR, null, '');\n             }\n@@ -6037,6 +6163,9 @@\n          */\n         public function check_trait($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed trait!\", Error::VALID_TRAIT_ERROR, null, '');\n             }\n@@ -6067,6 +6196,9 @@\n          */\n         public function check_keyword($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed keyword!\", Error::VALID_KEYWORD_ERROR, null, '');\n             }\n@@ -6093,6 +6225,9 @@\n          */\n         public function check_operator($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed operator!\", Error::VALID_OPERATOR_ERROR, null, '');\n             }\n@@ -6119,6 +6254,9 @@\n          */\n         public function check_primitive($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed primitive!\", Error::VALID_PRIMITIVE_ERROR, null, '');\n             }\n@@ -6145,6 +6283,9 @@\n          */\n         public function check_type($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed type!\", Error::VALID_TYPE_ERROR, null, '');\n             }\n@@ -6484,7 +6625,7 @@\n                 $this->prepared_code .\n                 $this->appended_code .\n                 \"\\r\\n\" . '};' .\n-                \"\\r\\n\" . 'if( PHP_MAJOR_VERSION >= 5 && PHP_MINOR_VERSION > 3){ $closure = $closure->bindTo(null); }' .\n+                \"\\r\\n\" . 'if(method_exists($closure, \"bindTo\")){ $closure = $closure->bindTo(null); }' .\n                 \"\\r\\n\" . 'return $closure();';\n \n             usleep(1); //guarantee at least some time passes"
        },
        {
            "filename": "docs/files/SandboxWhitelistVisitor.php.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-891059786\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-2011979904\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-891059786\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-2011979904\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-337296115\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1143894290\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-337296115\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-1143894290\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -269,7 +269,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/files/SandboxWhitelistVisitor.php.txt",
            "diff": "@@ -13,7 +13,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class SandboxWhitelistVisitor extends \\PHPParser_NodeVisitorAbstract {\n         /** The PHPSandbox instance to check against"
        },
        {
            "filename": "docs/files/SandboxedString.php.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-1040308460\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-1701606012\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-1040308460\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-1701606012\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-418048951\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1646168305\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-418048951\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-1646168305\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -269,7 +269,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/files/SandboxedString.php.txt",
            "diff": "@@ -11,9 +11,9 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n-    class SandboxedString {\n+    class SandboxedString implements \\ArrayAccess, \\IteratorAggregate {\n         /**\n          * @var string\n          */\n@@ -23,8 +23,8 @@\n          */\n         private $sandbox;\n         /** Constructs the SandboxedString\n-         * @param   string      $value      Original string value\n-         * @param   PHPSandbox  $sandbox    The current sandbox instance to test against\n+         * @param   string      $value          Original string value\n+         * @param   PHPSandbox  $sandbox        The current sandbox instance to test against\n          */\n         public function __construct($value, PHPSandbox $sandbox){\n             $this->value = $value;\n@@ -43,12 +43,51 @@\n             if($this->sandbox->check_func($this->value)){\n                 $name = strtolower($this->value);\n                 if((in_array($name, PHPSandbox::$defined_funcs) && $this->sandbox->overwrite_defined_funcs)\n-                    || (in_array($name, PHPSandbox::$var_funcs) && $this->sandbox->overwrite_var_funcs)\n+                    || (in_array($name, PHPSandbox::$sandboxed_string_funcs) && $this->sandbox->overwrite_sandboxed_string_funcs)\n                     || (in_array($name, PHPSandbox::$arg_funcs) && $this->sandbox->overwrite_func_get_args)){\n                     return call_user_func_array(array($this->sandbox, '_' . $this->value), func_get_args());\n                 }\n                 return call_user_func_array($name, func_get_args());\n             }\n-            return null;\n+            return '';\n+        }\n+        /** Set string value at specified offset\n+         * @param   mixed       $offset            Offset to set value\n+         * @param   mixed       $value             Value to set\n+         */\n+        public function offsetSet($offset, $value){\n+            if($offset === null){\n+                $this->value .= $value;\n+            } else {\n+                $this->value[$offset] = $value;\n+            }\n+        }\n+        /** Get string value at specified offset\n+         * @param   mixed       $offset            Offset to get value\n+         *\n+         * @return  string      Value to return\n+         */\n+        public function offsetGet($offset){\n+            return $this->value[$offset];\n+        }\n+        /** Check if specified offset exists in string value\n+         * @param   mixed       $offset            Offset to check\n+         *\n+         * @return  bool        Return true if offset exists, false otherwise\n+         */\n+        public function offsetExists($offset){\n+            return isset($this->value[$offset]);\n+        }\n+        /** Unset string value at specified offset\n+         * @param   mixed       $offset            Offset to unset\n+         */\n+        public function offsetUnset($offset){\n+            unset($this->value[$offset]);\n+        }\n+        /** Return iterator for string value\n+         * @return  \\ArrayIterator      Array iterator to return\n+         */\n+        public function getIterator(){\n+            return new \\ArrayIterator(str_split(strval($this->value)));\n         }\n     }"
        },
        {
            "filename": "docs/files/ValidatorVisitor.php.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-907988671\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-999918227\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-907988671\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-999918227\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-194642397\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-226640883\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-194642397\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-226640883\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -269,7 +269,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/files/ValidatorVisitor.php.txt",
            "diff": "@@ -13,7 +13,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class ValidatorVisitor extends \\PHPParser_NodeVisitorAbstract {\n         /** The PHPSandbox instance to check against\n@@ -42,10 +42,21 @@\n                 if(!$this->sandbox->allow_escaping){\n                     $this->sandbox->error(\"Sandboxed code attempted to escape to HTML!\", Error::ESCAPE_ERROR, $node);\n                 }\n+            } else if($node instanceof \\PHPParser_Node_Expr_Cast_String){\n+                return new \\PHPParser_Node_Expr_New(new \\PHPParser_Node_Name_FullyQualified(array('PHPSandbox\\\\SandboxedString')), array(new \\PHPParser_Node_Arg($node->expr), new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))))));\n             } else if($node instanceof \\PHPParser_Node_Expr_Cast){\n                 if(!$this->sandbox->allow_casting){\n                     $this->sandbox->error(\"Sandboxed code attempted to cast!\", Error::CAST_ERROR, $node);\n                 }\n+                if($node instanceof \\PHPParser_Node_Expr_Cast_Int){\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_intval', array(new \\PHPParser_Node_Arg($node->expr)), $node->getAttributes());\n+                } else if($node instanceof \\PHPParser_Node_Expr_Cast_Double){\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_floatval', array(new \\PHPParser_Node_Arg($node->expr)), $node->getAttributes());\n+                } else if($node instanceof \\PHPParser_Node_Expr_Cast_Array){\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_arrayval', array(new \\PHPParser_Node_Arg($node->expr)), $node->getAttributes());\n+                } else if($node instanceof \\PHPParser_Node_Expr_Cast_Object){\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_objectval', array(new \\PHPParser_Node_Arg($node->expr)), $node->getAttributes());\n+                }\n             } else if($node instanceof \\PHPParser_Node_Expr_FuncCall){\n                 if($node->name instanceof \\PHPParser_Node_Name){\n                     $name = strtolower($node->name->toString());\n@@ -60,7 +71,7 @@\n                     if($this->sandbox->overwrite_defined_funcs && in_array($name, PHPSandbox::$defined_funcs)){\n                         return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_' . $name, array(new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_FuncCall(new \\PHPParser_Node_Name(array($name))))), $node->getAttributes());\n                     }\n-                    if($this->sandbox->overwrite_var_funcs && in_array($name, PHPSandbox::$var_funcs)){\n+                    if($this->sandbox->overwrite_sandboxed_string_funcs && in_array($name, PHPSandbox::$sandboxed_string_funcs)){\n                         $args = $node->args;\n                         return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_' . $name, $args, $node->getAttributes());\n                     }\n@@ -74,6 +85,7 @@\n                         }\n                         return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_' . $name, array(new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_FuncCall(new \\PHPParser_Node_Name(array('func_get_args'))))), $node->getAttributes());\n                     }\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_wrap', array(new \\PHPParser_Node_Arg($node)), $node->getAttributes());\n                 } else {\n                     return new \\PHPParser_Node_Expr_Ternary(\n                         new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), 'check_func', array(new \\PHPParser_Node_Arg($node->name)), $node->getAttributes()),\n@@ -371,6 +383,11 @@\n                 if(!$this->sandbox->check_operator($name)){\n                     $this->sandbox->error(\"Operator failed custom validation!\", Error::VALID_OPERATOR_ERROR, $node, $name);\n                 }\n+                if($node instanceof \\PHPParser_Node_Expr_Concat){\n+                    return new \\PHPParser_Node_Expr_New(new \\PHPParser_Node_Name_FullyQualified(array('PHPSandbox\\\\SandboxedString')), array(new \\PHPParser_Node_Arg($node), new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))))));\n+                } else if($node instanceof \\PHPParser_Node_Expr_AssignConcat){\n+                    return new \\PHPParser_Node_Expr_Assign($node->var, new \\PHPParser_Node_Expr_New(new \\PHPParser_Node_Name_FullyQualified(array('PHPSandbox\\\\SandboxedString')), array(new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_Concat($node->var, $node->expr)), new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name)))))));\n+                }\n             } else if($name = $this->is_primitive($node)){\n                 if(!$this->sandbox->check_primitive($name)){\n                     $this->sandbox->error(\"Primitive failed custom validation!\", Error::VALID_PRIMITIVE_ERROR, $node, $name);\n@@ -580,24 +597,9 @@\n          *\n          * @param   \\PHPParser_Node   $node          The sandboxed $node to test\n          *\n-         * @throws  Error             Throws exception if $node attempts to cast when $allow_casting is false in the PHPSandbox configuration\n-         *\n          * @return  string|null       Return string name of node, or null if it is not a primitive\n          */\n         protected function is_primitive(\\PHPParser_Node $node){\n-            switch($node->getType()){\n-                case 'Expr_Cast_Array':\n-                case 'Expr_Cast_Bool':\n-                case 'Expr_Cast_Double':\n-                case 'Expr_Cast_Int':\n-                case 'Expr_Cast_String':\n-                case 'Expr_Cast_Object':\n-                case 'Expr_Cast_Unset':\n-                    if(!$this->sandbox->allow_casting){\n-                        $this->sandbox->error(\"Sandboxed code attempted to cast!\", Error::CAST_ERROR, $node);\n-                    }\n-                    break;\n-            }\n             switch($node->getType()){\n                 case 'Expr_Cast_Array':\n                 case 'Expr_Array':"
        },
        {
            "filename": "docs/files/WhitelistVisitor.php.html",
            "diff": "@@ -139,19 +139,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-854772276\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-1453035608\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-854772276\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-1453035608\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1662890078\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-91137763\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-1662890078\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-91137763\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -269,7 +269,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/files/WhitelistVisitor.php.txt",
            "diff": "@@ -13,7 +13,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class WhitelistVisitor extends \\PHPParser_NodeVisitorAbstract {\n         /** The PHPSandbox instance to check against"
        },
        {
            "filename": "docs/graphs/class.html",
            "diff": "@@ -156,7 +156,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/index.html",
            "diff": "@@ -91,19 +91,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-1624839564\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-751769504\"></a>\n                                 <a href=\"namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-1624839564\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-751769504\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1810365709\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1827995365\"></a>\n                                 <a href=\"namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-1810365709\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-1827995365\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -202,7 +202,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/namespaces/PHPSandbox.html",
            "diff": "@@ -91,19 +91,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-25397207\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-2043401959\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-25397207\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-2043401959\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-134930522\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-158188391\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-134930522\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-158188391\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -225,7 +225,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/namespaces/default.html",
            "diff": "@@ -91,19 +91,19 @@\n                                 <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-170220695\"></a>\n+                                    <a class=\"accordion-toggle \" data-toggle=\"collapse\" data-target=\"#namespace-2146406286\"></a>\n                                 <a href=\"../namespaces/default.html\" style=\"margin-left: 30px; padding-left: 0\">\\</a>\n             </div>\n-            <div id=\"namespace-170220695\" class=\"accordion-body collapse in\">\n+            <div id=\"namespace-2146406286\" class=\"accordion-body collapse in\">\n                 <div class=\"accordion-inner\">\n \n                                                     <div class=\"accordion\" style=\"margin-bottom: 0\">\n         <div class=\"accordion-group\">\n             <div class=\"accordion-heading\">\n-                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-1814876905\"></a>\n+                                    <a class=\"accordion-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#namespace-44708510\"></a>\n                                 <a href=\"../namespaces/PHPSandbox.html\" style=\"margin-left: 30px; padding-left: 0\">PHPSandbox</a>\n             </div>\n-            <div id=\"namespace-1814876905\" class=\"accordion-body collapse \">\n+            <div id=\"namespace-44708510\" class=\"accordion-body collapse \">\n                 <div class=\"accordion-inner\">\n \n                     \n@@ -202,7 +202,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/reports/deprecated.html",
            "diff": "@@ -143,7 +143,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/reports/errors.html",
            "diff": "@@ -110,7 +110,7 @@\n                         <h3>\n                             <i class=\"icon-file\"></i>\n                             PHPSandbox.php\n-                            <small style=\"float: right;padding-right: 10px;\">1</small>\n+                            <small style=\"float: right;padding-right: 10px;\">2</small>\n                         </h3>\n                         <div>\n                             <table class=\"table markers table-bordered\">\n@@ -124,7 +124,12 @@ <h3>\n                                 <tbody>\n                                                                     <tr>\n                                         <td>error</td>\n-                                        <td>6607</td>\n+                                        <td>6748</td>\n+                                        <td>Argument $name is missing from the Docblock of getSandbox()</td>\n+                                    </tr>\n+                                                                    <tr>\n+                                        <td>error</td>\n+                                        <td>6748</td>\n                                         <td>No summary for method getSandbox()</td>\n                                     </tr>\n                                                             </tbody>\n@@ -208,7 +213,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "docs/reports/markers.html",
            "diff": "@@ -144,7 +144,7 @@ <h1><i class=\"icon-pushpin\"></i></h1>\n                 <section class=\"span10 offset1\">\n                     <hr />\n                     Documentation is powered by <a href=\"http://www.phpdoc.org/\">phpDocumentor </a> and authored\n-                    on March 5th, 2014 at 04:43.\n+                    on March 10th, 2014 at 20:56.\n                 </section>\n             </section>\n         </section>"
        },
        {
            "filename": "src/PHPSandbox/Error.php",
            "diff": "@@ -11,7 +11,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class Error extends \\Exception {\n         /* START ERROR CODES */"
        },
        {
            "filename": "src/PHPSandbox/PHPSandbox.php",
            "diff": "@@ -14,7 +14,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class PHPSandbox {\n         /**\n@@ -87,14 +87,6 @@ class PHPSandbox {\n             'get_declared_interfaces',\n             'get_declared_traits'\n         );\n-        /**\n-         * @var    array          A static array of var_dump, print_r and var_export for redefining those functions\n-         */\n-        public static $var_funcs = array(\n-            'var_dump',\n-            'print_r',\n-            'var_export'\n-        );\n         /**\n          * @var    array          A static array of func_get_args, func_get_arg, and func_num_args used for redefining those functions\n          */\n@@ -103,6 +95,21 @@ class PHPSandbox {\n             'func_get_arg',\n             'func_num_args'\n         );\n+        /**\n+         * @var    array          A static array of var_dump, print_r and var_export, intval, floatval, is_string, is_object,\n+         *                          is_scalar and is_callable for redefining those functions\n+         */\n+        public static $sandboxed_string_funcs = array(\n+            'var_dump',\n+            'print_r',\n+            'var_export',\n+            'intval',\n+            'floatval',\n+            'is_string',\n+            'is_object',\n+            'is_scalar',\n+            'is_callable'\n+        );\n         /**\n          * @var    string       The randomly generated name of the PHPSandbox variable passed to the generated closure\n          */\n@@ -253,11 +260,6 @@ class PHPSandbox {\n          * @default true\n          */\n         public $overwrite_defined_funcs     = true;\n-        /**\n-         * @var    bool       Should PHPSandbox overwrite var_dump, print_r, and var_export?\n-         * @default true\n-         */\n-        public $overwrite_var_funcs         = true;\n         /**\n          * @var    bool       Should PHPSandbox overwrite func_get_args, func_get_arg and func_num_args?\n          * @default true\n@@ -267,6 +269,11 @@ class PHPSandbox {\n          * @var    bool       Should PHPSandbox overwrite $_GET, $_POST, $_COOKIE, $_FILES, $_ENV, $_REQUEST, $_SERVER, $_SESSION and $GLOBALS superglobals? If so, unless alternate superglobal values have been defined they will return as empty arrays.\n          * @default true\n          */\n+        public $overwrite_sandboxed_string_funcs         = true;\n+        /**\n+         * @var    bool       Should PHPSandbox overwrite functions to help hide SandboxedStrings?\n+         * @default true\n+         */\n         public $overwrite_superglobals      = true;\n         /**\n          * @var    bool       Should PHPSandbox allow sandboxed code to declare functions?\n@@ -1920,6 +1927,58 @@ public function _get_declared_traits(array $traits = array()){\n             }\n             return array_values($traits);\n         }\n+        /** Get PHPSandbox redefined function arguments array\n+         *\n+         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         *\n+         * @return  array           Returns the redefined arguments array\n+         */\n+        public function _func_get_args(array $arguments = array()){\n+            foreach($arguments as $index => $value){\n+                if($value instanceof self){\n+                    unset($arguments[$index]); //hide PHPSandbox variable\n+                }\n+            }\n+            return $arguments;\n+        }\n+        /** Get PHPSandbox redefined function argument\n+         *\n+         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         *\n+         * @param   int             $index          Requested func_get_arg index is passed here\n+         *\n+         * @return  array           Returns the redefined argument\n+         */\n+        public function _func_get_arg(array $arguments = array(), $index = 0){\n+            if($arguments[$index] instanceof self){\n+                $index++;   //get next argument instead\n+            }\n+            return isset($arguments[$index]) && !($arguments[$index] instanceof self) ? $arguments[$index] : null;\n+        }\n+        /** Get PHPSandbox redefined number of function arguments\n+         *\n+         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         *\n+         * @return  int             Returns the redefined number of function arguments\n+         */\n+        public function _func_num_args(array $arguments = array()){\n+            $count = count($arguments);\n+            foreach($arguments as $argument){\n+                if($argument instanceof self){\n+                    $count--;\n+                }\n+            }\n+            return $count > 0 ? $count : 0;\n+        }\n+        /** Wrap output value in SandboxString\n+         *\n+         * @param   mixed                   $value      Value to wrap\n+         *\n+         * @return  mixed|SandboxedString   Returns the wrapped value\n+         */\n+        public function _wrap($value){\n+            return is_string($value) ? new SandboxedString($value, $this) : $value;\n+        }\n         /** Get PHPSandbox redefined var_dump\n          *\n          * @return  array           Returns the redefined var_dump\n@@ -1965,48 +2024,86 @@ public function _var_export(){\n             }\n             return call_user_func_array('var_export', $arguments);\n         }\n-        /** Get PHPSandbox redefined function arguments array\n+        /** Return integer value of SandboxedString or mixed value\n          *\n-         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         * @param   mixed           $value      Value to return as integer\n          *\n-         * @return  array           Returns the redefined arguments array\n+         * @return  int             Returns the integer value\n          */\n-        public function _func_get_args(array $arguments = array()){\n-            foreach($arguments as $index => $value){\n-                if($value instanceof self){\n-                    unset($arguments[$index]); //hide PHPSandbox variable\n-                }\n-            }\n-            return $arguments;\n+        public function _intval($value){\n+            return intval($value instanceof SandboxedString ? strval($value): $value);\n         }\n-        /** Get PHPSandbox redefined function argument\n+        /** Return float value of SandboxedString or mixed value\n          *\n-         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         * @param   mixed           $value      Value to return as float\n          *\n-         * @param   int             $index          Requested func_get_arg index is passed here\n+         * @return  float           Returns the float value\n+         */\n+        public function _floatval($value){\n+            return floatval($value instanceof SandboxedString ? strval($value): $value);\n+        }\n+        /** Return array value of SandboxedString or mixed value\n          *\n-         * @return  array           Returns the redefined argument\n+         * @param   mixed           $value      Value to return as array\n+         *\n+         * @return  array           Returns the array value\n          */\n-        public function _func_get_arg(array $arguments = array(), $index = 0){\n-            if($arguments[$index] instanceof self){\n-                $index++;   //get next argument instead\n+        public function _arrayval($value){\n+            if($value instanceof SandboxedString){\n+                return (array)strval($value);\n             }\n-            return isset($arguments[$index]) && !($arguments[$index] instanceof self) ? $arguments[$index] : null;\n+            return is_array($value) ? $value : (array)$value;\n         }\n-        /** Get PHPSandbox redefined number of function arguments\n+        /** Return object value of SandboxedString or mixed value\n          *\n-         * @param   array           $arguments      Array result from func_get_args() is passed here\n+         * @param   mixed           $value      Value to return as object\n          *\n-         * @return  int             Returns the redefined number of function arguments\n+         * @return  object          Returns the object value\n          */\n-        public function _func_num_args(array $arguments = array()){\n-            $count = count($arguments);\n-            foreach($arguments as $argument){\n-                if($argument instanceof self){\n-                    $count--;\n-                }\n+        public function _objectval($value){\n+            if($value instanceof SandboxedString){\n+                return (object)strval($value);\n             }\n-            return $count > 0 ? $count : 0;\n+            return is_object($value) ? $value : (object)$value;\n+        }\n+        /** Return is_string value of SandboxedString or mixed value\n+         *\n+         * @param   mixed           $value      Value to check if is_string\n+         *\n+         * @return  bool            Returns the is_string value\n+         */\n+        public function _is_string($value){\n+            return ($value instanceof SandboxedString) ? true : is_string($value);\n+        }\n+        /** Return is_object value of SandboxedString or mixed value\n+         *\n+         * @param   mixed           $value      Value to check if is_object\n+         *\n+         * @return  bool            Returns the is_object value\n+         */\n+        public function _is_object($value){\n+            return ($value instanceof SandboxedString) ? false : is_object($value);\n+        }\n+        /** Return is_scalar value of SandboxedString or mixed value\n+         *\n+         * @param   mixed           $value      Value to check if is_scalar\n+         *\n+         * @return  bool            Returns the is_scalar value\n+         */\n+        public function _is_scalar($value){\n+            return ($value instanceof SandboxedString) ? true : is_scalar($value);\n+        }\n+        /** Return is_callable value of SandboxedString or mixed value\n+         *\n+         * @param   mixed           $value      Value to check if is_callable\n+         *\n+         * @return  bool            Returns the is_callable value\n+         */\n+        public function _is_callable($value){\n+            if($value instanceof SandboxedString){\n+                $value = strval($value);\n+            }\n+            return is_callable($value);\n         }\n         /** Get PHPSandbox redefined function. This is an internal PHPSandbox function but requires public access to work.\n          *\n@@ -5720,6 +5817,8 @@ public function check_func($name){\n                     $this->error(\"Sandboxed code attempted to call closure!\", Error::CLOSURE_ERROR);\n                 }\n                 return true;\n+            } else if($name instanceof SandboxedString){\n+                $name = strval($name);\n             }\n             if(!$name || !is_string($name)){\n                 $this->error(\"Sandboxed code attempted to call unnamed function!\", Error::VALID_FUNC_ERROR, null, '');\n@@ -5751,6 +5850,9 @@ public function check_func($name){\n          */\n         public function check_var($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed variable!\", Error::VALID_VAR_ERROR, null, '');\n             }\n@@ -5780,6 +5882,9 @@ public function check_var($name){\n          */\n         public function check_global($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed global!\", Error::VALID_GLOBAL_ERROR, null, '');\n             }\n@@ -5807,6 +5912,9 @@ public function check_global($name){\n          */\n         public function check_superglobal($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed superglobal!\", Error::VALID_SUPERGLOBAL_ERROR, null, '');\n             }\n@@ -5837,6 +5945,9 @@ public function check_superglobal($name){\n          */\n         public function check_const($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed constant!\", Error::VALID_CONST_ERROR, null, '');\n             }\n@@ -5872,6 +5983,9 @@ public function check_const($name){\n          */\n         public function check_magic_const($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed magic constant!\", Error::VALID_MAGIC_CONST_ERROR, null, '');\n             }\n@@ -5902,6 +6016,9 @@ public function check_magic_const($name){\n          */\n         public function check_namespace($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed namespace!\", Error::VALID_NAMESPACE_ERROR, null, '');\n             }\n@@ -5932,6 +6049,9 @@ public function check_namespace($name){\n          */\n         public function check_alias($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed alias!\", Error::VALID_ALIAS_ERROR, null, '');\n             }\n@@ -5973,6 +6093,9 @@ public function check_use($name){\n          */\n         public function check_class($name, $extends = false){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             $action = $extends ? 'extend' : 'call';\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to $action unnamed class!\", Error::VALID_CLASS_ERROR, null, '');\n@@ -6007,6 +6130,9 @@ public function check_class($name, $extends = false){\n          */\n         public function check_interface($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed interface!\", Error::VALID_INTERFACE_ERROR, null, '');\n             }\n@@ -6037,6 +6163,9 @@ public function check_interface($name){\n          */\n         public function check_trait($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed trait!\", Error::VALID_TRAIT_ERROR, null, '');\n             }\n@@ -6067,6 +6196,9 @@ public function check_trait($name){\n          */\n         public function check_keyword($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed keyword!\", Error::VALID_KEYWORD_ERROR, null, '');\n             }\n@@ -6093,6 +6225,9 @@ public function check_keyword($name){\n          */\n         public function check_operator($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed operator!\", Error::VALID_OPERATOR_ERROR, null, '');\n             }\n@@ -6119,6 +6254,9 @@ public function check_operator($name){\n          */\n         public function check_primitive($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed primitive!\", Error::VALID_PRIMITIVE_ERROR, null, '');\n             }\n@@ -6145,6 +6283,9 @@ public function check_primitive($name){\n          */\n         public function check_type($name){\n             $original_name = $name;\n+            if($name instanceof SandboxedString){\n+                $name = strval($name);\n+            }\n             if(!$name){\n                 $this->error(\"Sandboxed code attempted to call unnamed type!\", Error::VALID_TYPE_ERROR, null, '');\n             }\n@@ -6484,7 +6625,7 @@ public function prepare($code){\n                 $this->prepared_code .\n                 $this->appended_code .\n                 \"\\r\\n\" . '};' .\n-                \"\\r\\n\" . 'if( PHP_MAJOR_VERSION >= 5 && PHP_MINOR_VERSION > 3){ $closure = $closure->bindTo(null); }' .\n+                \"\\r\\n\" . 'if(method_exists($closure, \"bindTo\")){ $closure = $closure->bindTo(null); }' .\n                 \"\\r\\n\" . 'return $closure();';\n \n             usleep(1); //guarantee at least some time passes"
        },
        {
            "filename": "src/PHPSandbox/SandboxWhitelistVisitor.php",
            "diff": "@@ -13,7 +13,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class SandboxWhitelistVisitor extends \\PHPParser_NodeVisitorAbstract {\n         /** The PHPSandbox instance to check against"
        },
        {
            "filename": "src/PHPSandbox/SandboxedString.php",
            "diff": "@@ -11,9 +11,9 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n-    class SandboxedString {\n+    class SandboxedString implements \\ArrayAccess, \\IteratorAggregate {\n         /**\n          * @var string\n          */\n@@ -23,8 +23,8 @@ class SandboxedString {\n          */\n         private $sandbox;\n         /** Constructs the SandboxedString\n-         * @param   string      $value      Original string value\n-         * @param   PHPSandbox  $sandbox    The current sandbox instance to test against\n+         * @param   string      $value          Original string value\n+         * @param   PHPSandbox  $sandbox        The current sandbox instance to test against\n          */\n         public function __construct($value, PHPSandbox $sandbox){\n             $this->value = $value;\n@@ -43,12 +43,51 @@ public function __invoke(){\n             if($this->sandbox->check_func($this->value)){\n                 $name = strtolower($this->value);\n                 if((in_array($name, PHPSandbox::$defined_funcs) && $this->sandbox->overwrite_defined_funcs)\n-                    || (in_array($name, PHPSandbox::$var_funcs) && $this->sandbox->overwrite_var_funcs)\n+                    || (in_array($name, PHPSandbox::$sandboxed_string_funcs) && $this->sandbox->overwrite_sandboxed_string_funcs)\n                     || (in_array($name, PHPSandbox::$arg_funcs) && $this->sandbox->overwrite_func_get_args)){\n                     return call_user_func_array(array($this->sandbox, '_' . $this->value), func_get_args());\n                 }\n                 return call_user_func_array($name, func_get_args());\n             }\n-            return null;\n+            return '';\n+        }\n+        /** Set string value at specified offset\n+         * @param   mixed       $offset            Offset to set value\n+         * @param   mixed       $value             Value to set\n+         */\n+        public function offsetSet($offset, $value){\n+            if($offset === null){\n+                $this->value .= $value;\n+            } else {\n+                $this->value[$offset] = $value;\n+            }\n+        }\n+        /** Get string value at specified offset\n+         * @param   mixed       $offset            Offset to get value\n+         *\n+         * @return  string      Value to return\n+         */\n+        public function offsetGet($offset){\n+            return $this->value[$offset];\n+        }\n+        /** Check if specified offset exists in string value\n+         * @param   mixed       $offset            Offset to check\n+         *\n+         * @return  bool        Return true if offset exists, false otherwise\n+         */\n+        public function offsetExists($offset){\n+            return isset($this->value[$offset]);\n+        }\n+        /** Unset string value at specified offset\n+         * @param   mixed       $offset            Offset to unset\n+         */\n+        public function offsetUnset($offset){\n+            unset($this->value[$offset]);\n+        }\n+        /** Return iterator for string value\n+         * @return  \\ArrayIterator      Array iterator to return\n+         */\n+        public function getIterator(){\n+            return new \\ArrayIterator(str_split(strval($this->value)));\n         }\n     }\n\\ No newline at end of file"
        },
        {
            "filename": "src/PHPSandbox/ValidatorVisitor.php",
            "diff": "@@ -13,7 +13,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class ValidatorVisitor extends \\PHPParser_NodeVisitorAbstract {\n         /** The PHPSandbox instance to check against\n@@ -42,10 +42,21 @@ public function leaveNode(\\PHPParser_Node $node){\n                 if(!$this->sandbox->allow_escaping){\n                     $this->sandbox->error(\"Sandboxed code attempted to escape to HTML!\", Error::ESCAPE_ERROR, $node);\n                 }\n+            } else if($node instanceof \\PHPParser_Node_Expr_Cast_String){\n+                return new \\PHPParser_Node_Expr_New(new \\PHPParser_Node_Name_FullyQualified(array('PHPSandbox\\\\SandboxedString')), array(new \\PHPParser_Node_Arg($node->expr), new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))))));\n             } else if($node instanceof \\PHPParser_Node_Expr_Cast){\n                 if(!$this->sandbox->allow_casting){\n                     $this->sandbox->error(\"Sandboxed code attempted to cast!\", Error::CAST_ERROR, $node);\n                 }\n+                if($node instanceof \\PHPParser_Node_Expr_Cast_Int){\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_intval', array(new \\PHPParser_Node_Arg($node->expr)), $node->getAttributes());\n+                } else if($node instanceof \\PHPParser_Node_Expr_Cast_Double){\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_floatval', array(new \\PHPParser_Node_Arg($node->expr)), $node->getAttributes());\n+                } else if($node instanceof \\PHPParser_Node_Expr_Cast_Array){\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_arrayval', array(new \\PHPParser_Node_Arg($node->expr)), $node->getAttributes());\n+                } else if($node instanceof \\PHPParser_Node_Expr_Cast_Object){\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_objectval', array(new \\PHPParser_Node_Arg($node->expr)), $node->getAttributes());\n+                }\n             } else if($node instanceof \\PHPParser_Node_Expr_FuncCall){\n                 if($node->name instanceof \\PHPParser_Node_Name){\n                     $name = strtolower($node->name->toString());\n@@ -60,7 +71,7 @@ public function leaveNode(\\PHPParser_Node $node){\n                     if($this->sandbox->overwrite_defined_funcs && in_array($name, PHPSandbox::$defined_funcs)){\n                         return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_' . $name, array(new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_FuncCall(new \\PHPParser_Node_Name(array($name))))), $node->getAttributes());\n                     }\n-                    if($this->sandbox->overwrite_var_funcs && in_array($name, PHPSandbox::$var_funcs)){\n+                    if($this->sandbox->overwrite_sandboxed_string_funcs && in_array($name, PHPSandbox::$sandboxed_string_funcs)){\n                         $args = $node->args;\n                         return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_' . $name, $args, $node->getAttributes());\n                     }\n@@ -74,6 +85,7 @@ public function leaveNode(\\PHPParser_Node $node){\n                         }\n                         return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_' . $name, array(new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_FuncCall(new \\PHPParser_Node_Name(array('func_get_args'))))), $node->getAttributes());\n                     }\n+                    return new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), '_wrap', array(new \\PHPParser_Node_Arg($node)), $node->getAttributes());\n                 } else {\n                     return new \\PHPParser_Node_Expr_Ternary(\n                         new \\PHPParser_Node_Expr_MethodCall(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))), 'check_func', array(new \\PHPParser_Node_Arg($node->name)), $node->getAttributes()),\n@@ -371,6 +383,11 @@ public function leaveNode(\\PHPParser_Node $node){\n                 if(!$this->sandbox->check_operator($name)){\n                     $this->sandbox->error(\"Operator failed custom validation!\", Error::VALID_OPERATOR_ERROR, $node, $name);\n                 }\n+                if($node instanceof \\PHPParser_Node_Expr_Concat){\n+                    return new \\PHPParser_Node_Expr_New(new \\PHPParser_Node_Name_FullyQualified(array('PHPSandbox\\\\SandboxedString')), array(new \\PHPParser_Node_Arg($node), new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name))))));\n+                } else if($node instanceof \\PHPParser_Node_Expr_AssignConcat){\n+                    return new \\PHPParser_Node_Expr_Assign($node->var, new \\PHPParser_Node_Expr_New(new \\PHPParser_Node_Name_FullyQualified(array('PHPSandbox\\\\SandboxedString')), array(new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_Concat($node->var, $node->expr)), new \\PHPParser_Node_Arg(new \\PHPParser_Node_Expr_StaticCall(new \\PHPParser_Node_Name_FullyQualified(\"PHPSandbox\\\\PHPSandbox\"), 'getSandbox', array(new \\PHPParser_Node_Scalar_String($this->sandbox->name)))))));\n+                }\n             } else if($name = $this->is_primitive($node)){\n                 if(!$this->sandbox->check_primitive($name)){\n                     $this->sandbox->error(\"Primitive failed custom validation!\", Error::VALID_PRIMITIVE_ERROR, $node, $name);\n@@ -580,24 +597,9 @@ protected function is_operator(\\PHPParser_Node $node){\n          *\n          * @param   \\PHPParser_Node   $node          The sandboxed $node to test\n          *\n-         * @throws  Error             Throws exception if $node attempts to cast when $allow_casting is false in the PHPSandbox configuration\n-         *\n          * @return  string|null       Return string name of node, or null if it is not a primitive\n          */\n         protected function is_primitive(\\PHPParser_Node $node){\n-            switch($node->getType()){\n-                case 'Expr_Cast_Array':\n-                case 'Expr_Cast_Bool':\n-                case 'Expr_Cast_Double':\n-                case 'Expr_Cast_Int':\n-                case 'Expr_Cast_String':\n-                case 'Expr_Cast_Object':\n-                case 'Expr_Cast_Unset':\n-                    if(!$this->sandbox->allow_casting){\n-                        $this->sandbox->error(\"Sandboxed code attempted to cast!\", Error::CAST_ERROR, $node);\n-                    }\n-                    break;\n-            }\n             switch($node->getType()){\n                 case 'Expr_Cast_Array':\n                 case 'Expr_Array':"
        },
        {
            "filename": "src/PHPSandbox/WhitelistVisitor.php",
            "diff": "@@ -13,7 +13,7 @@\n      * @namespace PHPSandbox\n      *\n      * @author  Elijah Horton <fieryprophet@yahoo.com>\n-     * @version 1.3.2\n+     * @version 1.3.3\n      */\n     class WhitelistVisitor extends \\PHPParser_NodeVisitorAbstract {\n         /** The PHPSandbox instance to check against"
        },
        {
            "filename": "tests/PHPSandbox/Tests/Config/DefaultConfigTest.php",
            "diff": "@@ -310,4 +310,34 @@ public function testCallbackViolations(){\n             $this->setExpectedException('PHPSandbox\\Error');\r\n             $this->sandbox->execute(function(){ array_filter(array(\"1\"), \"var_dump\"); });\r\n         }\r\n+\r\n+        /**\r\n+         * Test whether sandbox disallows violating callbacks even with manipulated sandboxed strings\r\n+         */\r\n+        public function testCallbackViolationsWithStringManipulation(){\r\n+            $this->setExpectedException('PHPSandbox\\Error');\r\n+            $this->sandbox->execute(function(){ $x = substr(\"var_dump2\", 0, -1); array_filter(array(\"1\"), $x); });\r\n+        }\r\n+\r\n+        /**\r\n+         * Test whether sandboxed strings do not cause conflicts with intval\r\n+         */\r\n+        public function testSandboxedStringsSatisfyIntval(){\r\n+            $this->sandbox->whitelist_func('intval');\r\n+            $this->assertEquals(1, $this->sandbox->execute(function(){ return intval(\"1\"); }));\r\n+        }\r\n+\r\n+        /**\r\n+         * Test whether sandboxed strings do not cause conflicts with is_string, is_object, or is_scalar\r\n+         */\r\n+        public function testSandboxedStringsMimicStrings(){\r\n+            $this->sandbox->whitelist_func(array(\r\n+                'is_string',\r\n+                'is_object',\r\n+                'is_scalar'\r\n+            ));\r\n+            $this->assertEquals(true, $this->sandbox->execute(function(){ return is_string(\"1\"); }));\r\n+            $this->assertEquals(false, $this->sandbox->execute(function(){ return is_object(\"1\"); }));\r\n+            $this->assertEquals(true, $this->sandbox->execute(function(){ return is_scalar(\"1\"); }));\r\n+        }\r\n     }\n\\ No newline at end of file"
        },
        {
            "filename": "toolkit/index.php",
            "diff": "@@ -119,7 +119,7 @@\n             'blacklist' => $blacklist,\n             'definitions' => $definitions\n         ));\n-        $sandbox->set_error_handler(function(\\PHPSandbox\\Error $e){ echo '<h2 style=\"color: red;\">' . $e->getMessage() . '</h2>'; });\n+        $sandbox->set_error_handler(function(\\PHPSandbox\\Error $e){ die('<h2 style=\"color: red;\">' . $e->getMessage() . '</h2>'); });\n         try {\n             ob_start();\n             if($setup_code){\n@@ -137,7 +137,7 @@\n             ob_end_clean();\n             die('<pre>' . $buffer . '</pre>');\n         } catch(\\PHPSandbox\\Error $e){\n-            echo '<h2 style=\"color: red;\">' . $e->getMessage() . '</h2>';\n+            die('<h2 style=\"color: red;\">' . $e->getMessage() . '</h2>');\n         }\n     }\n \n@@ -313,6 +313,7 @@\n             <a href=\"javascript:;\" class=\"help\">Help</a>\n         </strong>\n     </p>\n+    <div align=\"center\" style=\"font-size: 8px; font-weight: bold;\">&copy; Copyright 2013 - <?php echo date(\"Y\"); ?> Elijah Horton. - Some Rights Reserved.<br/>See <a href=\"../LICENSE\" target=\"_blank\">LICENSE</a> for details.</div>\n     <hr class=\"hr\"/>\n     <h3 style=\"margin: 0;\">Choose Template:</h3>\n     <br/>\n@@ -558,6 +559,7 @@\n     <br/>\n     <br/>\n     <input type=\"button\" value=\"Run Code In Sandbox\" id=\"run\" style=\"width: 100%;\"/>\n+    <br/>\n </div>\n <div id=\"output_container\">\n     <h2>Output</h2>"
        },
        {
            "filename": "toolkit/templates/002 - Evil Function.json",
            "diff": "@@ -1 +1 @@\n-{\"code\":\"\\/*\\n    This template demonstrates how an eval is blocked\\n    if the eval function is not allowed\\n*\\/\\n\\neval('echo \\\"This should not work if eval is disallowed.\\\"');\",\"options\":{\"allow_variables\":\"0\"},\"blacklist\":null,\"whitelist\":null}\n\\ No newline at end of file\n+{\"code\":\"\\/*\\n    This template demonstrates how an eval is blocked\\n    if the eval function is not allowed\\n*\\/\\n\\neval('echo \\\"This should not work if eval is disallowed.\\\";');\",\"options\":{\"allow_variables\":\"0\"},\"blacklist\":null,\"whitelist\":null}\n\\ No newline at end of file"
        }
    ],
    "commitTime": "2014-03-10 21:10:27"
}