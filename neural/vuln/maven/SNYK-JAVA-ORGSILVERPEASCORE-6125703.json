{
    "CVSSv3": {
        "CVSS": "3.1",
        "E": "P",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "privilegesRequired": "NONE",
        "userInteraction": "NONE",
        "scope": "UNCHANGED",
        "confidentiality": "HIGH",
        "integrity": "NONE",
        "availability": "NONE"
    },
    "credit": [
        "Unknown"
    ],
    "cvssDetails": [
        {
            "assigner": "NVD",
            "cvssV3BaseScore": 7.5,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "NONE",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "HIGH",
                "integrity": "NONE",
                "availability": "NONE"
            },
            "severity": "high"
        }
    ],
    "cvssScore": 7.5,
    "disclosureTime": "2023-12-13 15:30:58",
    "epssDetails": {
        "modelVersion": "v2023.03.01",
        "percentile": "0.06914",
        "probability": "0.00043"
    },
    "exploitMaturity": "Proof of Concept",
    "id": "SNYK-JAVA-ORGSILVERPEASCORE-6125703",
    "identifiers": {
        "CVE": [
            "CVE-2023-47323"
        ],
        "CWE": [
            "CWE-284"
        ]
    },
    "language": "java",
    "malicious": false,
    "packageManager": "maven",
    "publicationTime": "2023-12-14 14:37:52",
    "remediation": "A fix was pushed into the master branch but not yet published. ",
    "severity": "high",
    "socialTrendAlert": false,
    "title": "Improper Access Control",
    "vulnDescription": {
        "Overview": "org.silverpeas.core:silverpeas-core-web is a WEB platform that improves the collaboration between the actors of a company or organization. Affected versions of this package are vulnerable to Improper Access Control due to improper access control on the ID parameter. An attacker can read all messages exchanged between users, including private messages intended for administrators, by manipulating the ID parameter. "
    },
    "source_code": [
        {
            "filename": "core-api/src/main/java/org/silverpeas/core/NotFoundException.java",
            "diff": "@@ -29,6 +29,7 @@\n  * @author mmoquillon\n  */\n public class NotFoundException extends SilverpeasRuntimeException {\n+  private static final long serialVersionUID = 4337528679207374468L;\n \n   public NotFoundException(final String message) {\n     super(message);"
        },
        {
            "filename": "core-library/src/main/java/org/silverpeas/core/notification/user/client/model/SentNotificationDAO.java",
            "diff": "@@ -141,21 +141,19 @@ public static List<String> getReceivers(Connection con, int notifId)\n \n   public static SentNotificationDetail getNotif(Connection con, int notifId)\n       throws SQLException {\n-\n-    SentNotificationDetail notif = new SentNotificationDetail();\n-\n+    SentNotificationDetail notif = null;\n     String query = \"select \" + COLUMNS + \" from ST_NotifSended where notifId = ?\";\n     PreparedStatement prepStmt = null;\n     ResultSet rs = null;\n     try {\n       prepStmt = con.prepareStatement(query);\n       prepStmt.setInt(1, notifId);\n       rs = prepStmt.executeQuery();\n-      while (rs.next()) {\n+      if (rs.next()) {\n         notif = convertFrom(rs);\n+        // r\u00e9cup\u00e9rer les destinataires\n+        notif.setUsers(getReceivers(con, notifId));\n       }\n-      // r\u00e9cup\u00e9rer les destinataires\n-      notif.setUsers(getReceivers(con, notifId));\n     } finally {\n       DBUtil.close(rs, prepStmt);\n     }"
        },
        {
            "filename": "core-library/src/main/java/org/silverpeas/core/notification/user/client/model/SentNotificationInterface.java",
            "diff": "@@ -46,9 +46,10 @@ void saveNotifUser(NotificationMetaData metaData, Set<UserRecipient> usersSet)\n   List<SentNotificationDetail> getAllNotifByUser(String userId)\n       throws NotificationException;\n \n-  SentNotificationDetail getNotification(int notifId) throws NotificationException;\n+  SentNotificationDetail getNotification(final String userId, int notifId)\n+      throws NotificationException;\n \n-  void deleteNotif(int notifId, String userId) throws NotificationException;\n+  void deleteNotif(String userId, int notifId) throws NotificationException;\n \n   void deleteNotifByUser(String userId) throws NotificationException;\n }\n\\ No newline at end of file"
        },
        {
            "filename": "core-library/src/main/java/org/silverpeas/core/notification/user/client/model/SentNotificationInterfaceImpl.java",
            "diff": "@@ -23,6 +23,7 @@\n  */\n package org.silverpeas.core.notification.user.client.model;\n \n+import org.silverpeas.core.NotFoundException;\n import org.silverpeas.core.notification.NotificationException;\n import org.silverpeas.core.notification.user.client.NotificationMetaData;\n import org.silverpeas.core.notification.user.client.UserRecipient;\n@@ -80,27 +81,33 @@ public List<SentNotificationDetail> getAllNotifByUser(String userId)\n   }\n \n   @Override\n-  public SentNotificationDetail getNotification(int notifId) throws NotificationException {\n+  public SentNotificationDetail getNotification(final String userId, int notifId)\n+      throws NotificationException {\n+    final SentNotificationDetail notif;\n     try (Connection con = openConnection()) {\n-      return SentNotificationDAO.getNotif(con, notifId);\n+      notif = SentNotificationDAO.getNotif(con, notifId);\n     } catch (Exception e) {\n       throw new NotificationException(e);\n     }\n+    if (notif == null) {\n+      throw new NotFoundException(\n+          String.format(\"Sent notification %s not found for user %s\", notifId, userId));\n+    } else if (Integer.parseInt(userId) != notif.getUserId()) {\n+      throw new ForbiddenRuntimeException(\n+          String.format(\"Forbidden access to the sent notification %s for user %s\", notifId,\n+              userId));\n+    }\n+    return notif;\n   }\n \n   @Transactional\n   @Override\n-  public void deleteNotif(int notifId, String userId) throws NotificationException {\n+  public void deleteNotif(String userId, int notifId) throws NotificationException {\n     try (Connection con = openConnection()) {\n-      SentNotificationDetail toDel = getNotification(notifId);\n-\n-      //check rights : check that the current user has the rights to delete the notification\n-      if(Integer.parseInt(userId) == toDel.getUserId()) {\n-        SentNotificationDAO.deleteNotif(con, notifId);\n-      } else {\n-        throw new ForbiddenRuntimeException(\n-            \"Unauthorized to delete the notification \" + notifId + \" for user \" + userId);\n-      }\n+      SentNotificationDetail toDel = getNotification(userId, notifId);\n+      SentNotificationDAO.deleteNotif(con, toDel.getNotifId());\n+    } catch (NotFoundException | ForbiddenRuntimeException e) {\n+      throw e;\n     } catch (Exception e) {\n       throw new NotificationException(e);\n     }"
        },
        {
            "filename": "core-library/src/main/java/org/silverpeas/core/notification/user/server/channel/silvermail/SILVERMAILPersistence.java",
            "diff": "@@ -23,6 +23,7 @@\n  */\n package org.silverpeas.core.notification.user.server.channel.silvermail;\n \n+import org.silverpeas.core.NotFoundException;\n import org.silverpeas.core.admin.PaginationPage;\n import org.silverpeas.core.admin.user.model.User;\n import org.silverpeas.core.backgroundprocess.AbstractBackgroundProcessRequest;\n@@ -62,19 +63,14 @@ public class SILVERMAILPersistence {\n   private SILVERMAILPersistence() {\n   }\n \n-  private static void markMessageAsRead(SILVERMAILMessageBean smb)\n-      throws SILVERMAILException {\n-    try {\n-      boolean hasToUpdate = smb.getReaden() != 1;\n-      if (hasToUpdate) {\n-        smb.setReaden(1);\n-        Transaction.performInOne(() -> getRepository().save(smb));\n-        DefaultServerEventNotifier.get().notify(UserNotificationServerEvent\n-            .readOf(String.valueOf(smb.getUserId()), smb.getId(), smb.getSubject(), smb\n-                .getSenderName()));\n-      }\n-    } catch (Exception e) {\n-      throw new SILVERMAILException(\"Cannot mark the message \" + smb.getId() + \" as read\", e);\n+  private static void markMessageAsRead(SILVERMAILMessageBean smb) {\n+    boolean hasToUpdate = smb.getReaden() != 1;\n+    if (hasToUpdate) {\n+      smb.setReaden(1);\n+      Transaction.performInOne(() -> getRepository().save(smb));\n+      DefaultServerEventNotifier.get().notify(UserNotificationServerEvent\n+          .readOf(String.valueOf(smb.getUserId()), smb.getId(), smb.getSubject(), smb\n+              .getSenderName()));\n     }\n   }\n \n@@ -166,50 +162,66 @@ public static SilverpeasList<SILVERMAILMessage> getMessageOfFolder(String userId\n \n   /**\n    * Gets a message by its identifier.\n+   * @param userId the identifier of the user owning the message.\n    * @param msgId the message identifier.\n+   * @throws NotFoundException if message with given identifier does not exist.\n+   * @throws ForbiddenRuntimeException if message with given identifier is not owned by the user\n+   * with the given identifier.\n    */\n-  public static SILVERMAILMessage getMessage(long msgId) {\n-    return findByCriteria(SilvermailCriteria.get().byId(msgId)).stream().findFirst().orElse(null);\n+  public static SILVERMAILMessage getMessage(final String userId, long msgId) {\n+    final SILVERMAILMessage message = findByCriteria(SilvermailCriteria.get().byId(msgId)).stream()\n+        .findFirst()\n+        .orElseThrow(() -> new NotFoundException(\n+            String.format(\"Message %s not found for user %s\", msgId, userId)));\n+    if (message.getUserId() != Long.parseLong(userId)) {\n+      throw new ForbiddenRuntimeException(\n+          String.format(\"Forbidden access to message %s for user %s\", msgId, userId));\n+    }\n+    return message;\n   }\n \n   /**\n    * Gets a message by its identifier and mark it as read.\n+   * @param userId the identifier of the user owning the message.\n    * @param msgId the message identifier.\n+   * @throws NotFoundException if message with given identifier does not exist.\n+   * @throws ForbiddenRuntimeException if message with given identifier is not owned by the user\n+   * with the given identifier.\n    */\n-  public static SILVERMAILMessage getMessageAndMarkAsRead(long msgId) throws SILVERMAILException {\n-    final SILVERMAILMessage silverMailMessage = getMessage(msgId);\n-    if (silverMailMessage != null) {\n-      final SILVERMAILMessageBean smb = getRepository().getById(String.valueOf(msgId));\n-      markMessageAsRead(smb);\n-    }\n+  public static SILVERMAILMessage getMessageAndMarkAsRead(final String userId, long msgId) {\n+    final SILVERMAILMessage silverMailMessage = getMessage(userId, msgId);\n+    final SILVERMAILMessageBean smb = getRepository().getById(String.valueOf(msgId));\n+    markMessageAsRead(smb);\n     return silverMailMessage;\n   }\n \n   /**\n-   *\n+   * Deletes a message by its identifier.\n+   * @param userId the identifier of the user owning the message.\n+   * @param msgId the identifier of the message to delete.\n+   * @throws NotFoundException if message with given identifier does not exist.\n+   * @throws ForbiddenRuntimeException if message with given identifier is not owned by the user\n+   * with the given identifier.\n    */\n-  public static void deleteMessage(long msgId, String userId) throws SILVERMAILException {\n-    try {\n-      Transaction.performInOne(() -> {\n-        SILVERMAILMessageBeanRepository repository = getRepository();\n-        SILVERMAILMessageBean toDel = repository.getById(String.valueOf(msgId));\n-\n-        //check rights : check that the current user has the rights to delete the message\n-        // notification\n-        if (Long.parseLong(userId) == toDel.getUserId()) {\n-          BackgroundProcessTask.push(new LongTextDeletionRequest(toDel.getBody()));\n-          repository.delete(toDel);\n-        } else {\n-          throw new ForbiddenRuntimeException(\n-              \"Unauthorized deletion of message \" + msgId + \" for user \" + userId);\n-        }\n-        return null;\n-      });\n-      DefaultServerEventNotifier.get()\n-          .notify(UserNotificationServerEvent.deletionOf(userId, String.valueOf(msgId)));\n-    } catch (Exception e) {\n-      throw new SILVERMAILException(\"Cannot delete the message \" + msgId, e);\n-    }\n+  public static void deleteMessage(String userId, long msgId) {\n+    Transaction.performInOne(() -> {\n+      SILVERMAILMessageBeanRepository repository = getRepository();\n+      SILVERMAILMessageBean toDel = repository.getById(String.valueOf(msgId));\n+      if (toDel == null) {\n+        throw new NotFoundException(\n+            String.format(\"Error when deleting message %s (not found) for user %s\", msgId, userId));\n+      }\n+      if (Long.parseLong(userId) == toDel.getUserId()) {\n+        BackgroundProcessTask.push(new LongTextDeletionRequest(toDel.getBody()));\n+        repository.delete(toDel);\n+      } else {\n+        throw new ForbiddenRuntimeException(\n+            \"Unauthorized deletion of message \" + msgId + \" for user \" + userId);\n+      }\n+      return null;\n+    });\n+    DefaultServerEventNotifier.get()\n+        .notify(UserNotificationServerEvent.deletionOf(userId, String.valueOf(msgId)));\n   }\n \n   public static void deleteAllMessagesInFolder(String currentUserId) {"
        },
        {
            "filename": "core-rs/src/main/java/org/silverpeas/core/web/rs/RESTWebService.java",
            "diff": "@@ -24,12 +24,14 @@\n  */\n package org.silverpeas.core.web.rs;\n \n+import org.silverpeas.core.NotFoundException;\n import org.silverpeas.core.admin.PaginationPage;\n import org.silverpeas.core.admin.service.OrganizationController;\n import org.silverpeas.core.admin.user.model.SilverpeasRole;\n import org.silverpeas.core.admin.user.model.User;\n import org.silverpeas.core.personalization.UserPreferences;\n import org.silverpeas.core.personalization.service.PersonalizationServiceProvider;\n+import org.silverpeas.core.security.authorization.ForbiddenRuntimeException;\n import org.silverpeas.core.util.LocalizationBundle;\n import org.silverpeas.core.util.ResourceLocator;\n import org.silverpeas.core.util.StringUtil;\n@@ -329,6 +331,10 @@ public R execute() {\n           throw new WebApplicationException(Response.Status.FORBIDDEN);\n         }\n         return webTreatment.execute();\n+      } catch (final NotFoundException ex) {\n+        throw new WebApplicationException(ex, Response.Status.NOT_FOUND);\n+      } catch (final ForbiddenRuntimeException ex) {\n+        throw new WebApplicationException(ex, Response.Status.FORBIDDEN);\n       } catch (final WebApplicationException ex) {\n         throw ex;\n       } catch (final Exception ex) {"
        },
        {
            "filename": "core-war/src/main/java/org/silverpeas/web/notificationserver/channel/silvermail/SILVERMAILSessionController.java",
            "diff": "@@ -34,7 +34,6 @@\n import org.silverpeas.core.notification.NotificationException;\n import org.silverpeas.core.notification.user.client.model.SentNotificationDetail;\n import org.silverpeas.core.notification.user.client.model.SentNotificationInterface;\n-import org.silverpeas.core.notification.user.server.channel.silvermail.SILVERMAILException;\n import org.silverpeas.core.notification.user.server.channel.silvermail.SILVERMAILMessage;\n import org.silverpeas.core.notification.user.server.channel.silvermail.SILVERMAILPersistence;\n import org.silverpeas.core.notification.user.server.channel.silvermail.SilvermailCriteria.QUERY_ORDER_BY;\n@@ -149,9 +148,9 @@ public List<SentUserNotificationItem> getUserMessageList() throws NotificationEx\n   }\n \n   public SentNotificationDetail getSentNotification(String notifId) throws NotificationException {\n-    SentNotificationDetail sentNotification = null;\n-      sentNotification = getNotificationInterface().getNotification(Integer.parseInt(notifId));\n-      sentNotification.setSource(getSource(sentNotification.getComponentId()));\n+    SentNotificationDetail sentNotification = getNotificationInterface().getNotification(\n+        getUserId(), Integer.parseInt(notifId));\n+    sentNotification.setSource(getSource(sentNotification.getComponentId()));\n     return sentNotification;\n   }\n \n@@ -193,20 +192,19 @@ private String getSource(String componentId) {\n    * @throws NotificationException\n    */\n   public void deleteSentNotif(String notifId) throws NotificationException {\n-      getNotificationInterface().deleteNotif(Integer.parseInt(notifId), getUserId());\n+      getNotificationInterface().deleteNotif(getUserId(), Integer.parseInt(notifId));\n   }\n \n   public void deleteAllSentNotif() throws NotificationException {\n       getNotificationInterface().deleteNotifByUser(getUserId());\n   }\n \n-  private SentNotificationInterface getNotificationInterface() throws NotificationException {\n+  private SentNotificationInterface getNotificationInterface() {\n     return SentNotificationInterface.get();\n   }\n \n-  public SILVERMAILMessage getMessage(long messageId)\n-      throws SILVERMAILException {\n-    return SILVERMAILPersistence.getMessageAndMarkAsRead(messageId);\n+  public SILVERMAILMessage getMessage(long messageId) {\n+    return SILVERMAILPersistence.getMessageAndMarkAsRead(getUserId(), messageId);\n   }\n \n   /**\n@@ -229,23 +227,17 @@ public void setCurrentMessageId(long value) {\n     currentMessageId = value;\n   }\n \n-  public SILVERMAILMessage getCurrentMessage() throws SILVERMAILException {\n+  public SILVERMAILMessage getCurrentMessage() {\n     return getMessage(currentMessageId);\n   }\n \n   /**\n    * Delete the message notification\n-   *\n    * @param notifId\n-   * @throws SILVERMAILException\n    */\n-  public void deleteMessage(String notifId) throws SILVERMAILException {\n-    try {\n-      long notificationId = Long.parseLong(notifId);\n-      SILVERMAILPersistence.deleteMessage(notificationId, getUserId());\n-    } catch (SILVERMAILException e) {\n-      throw new SILVERMAILException(e);\n-    }\n+  public void deleteMessage(String notifId) {\n+    long notificationId = Long.parseLong(notifId);\n+    SILVERMAILPersistence.deleteMessage(getUserId(), notificationId);\n   }\n \n   static {"
        },
        {
            "filename": "core-war/src/main/java/org/silverpeas/web/notificationserver/channel/silvermail/requesthandlers/ReadMessage.java",
            "diff": "@@ -42,11 +42,12 @@ public class ReadMessage implements SILVERMAILRequestHandler {\n   @Override\n   public String handleRequest(ComponentSessionController componentSC,\n       HttpServletRequest request) {\n+    SILVERMAILSessionController silvermailScc = (SILVERMAILSessionController) componentSC;\n     try {\n       String sId = request.getParameter(\"ID\");\n       long id = Long.parseLong(sId);\n-\n-      ((SILVERMAILSessionController) componentSC).setCurrentMessageId(id);\n+      silvermailScc.setCurrentMessageId(id);\n+      request.setAttribute(\"currentMessage\", silvermailScc.getCurrentMessage());\n     } catch (NumberFormatException e) {\n       SilverLogger.getLogger(this).error(e.getMessage(), e);\n     }"
        },
        {
            "filename": "core-war/src/main/webapp/SILVERMAIL/jsp/readMessage.jsp",
            "diff": "@@ -34,7 +34,7 @@\n <c:set var=\"componentId\" value=\"${requestScope.componentId}\"/>\n <c:set var=\"sessionController\" value=\"${requestScope.SILVERMAIL}\"/>\n <c:set var=\"from\" value=\"${param.from}\"/>\n-<c:set var=\"msg\" value=\"${sessionController.currentMessage}\"/>\n+<c:set var=\"msg\" value=\"${requestScope.currentMessage}\"/>\n <fmt:setLocale value=\"${sessionScope[sessionController].language}\"/>\n <view:setBundle bundle=\"${requestScope.resources.multilangBundle}\"/>\n <view:setBundle bundle=\"${requestScope.resources.iconsBundle}\" var=\"icons\"/>"
        },
        {
            "filename": "core-war/src/main/webapp/admin/jsp/errorpageMain.jsp",
            "diff": "@@ -50,6 +50,7 @@ if (response.isCommitted() == false) {\n <%@ page import=\"javax.ws.rs.WebApplicationException\" %>\n <%@ page import=\"org.silverpeas.core.util.logging.SilverLogger\" %>\n <%@ page import=\"org.silverpeas.core.web.mvc.webcomponent.SilverpeasHttpServlet\" %>\n+<%@ page import=\"org.silverpeas.core.NotFoundException\" %>\n \n <%@ include file=\"import.jsp\" %>\n \n@@ -68,6 +69,10 @@ if (exception instanceof SilverpeasTrappedException) {\n   extraInfos = StringUtil.defaultStringIfNotDefined(ste.getExtraInfos(), null);\n   // Trace the exception\n   HomePageUtil.traceException(exception);\n+} else if (exception instanceof NotFoundException) {\n+  SilverLogger.getLogger(SilverpeasHttpServlet.class).error(exception.getMessage());\n+  response.sendError(HttpServletResponse.SC_NOT_FOUND, exception.getMessage());\n+  return;\n } else if (exception instanceof ForbiddenRuntimeException) {\n   SilverLogger.getLogger(SilverpeasHttpServlet.class).error(exception.getMessage());\n   response.sendError(HttpServletResponse.SC_FORBIDDEN, exception.getMessage());"
        },
        {
            "filename": "core-web/src/main/java/org/silverpeas/core/webapi/notification/user/InboxUserNotificationResource.java",
            "diff": "@@ -25,7 +25,6 @@\n \n import org.silverpeas.core.admin.PaginationPage;\n import org.silverpeas.core.annotation.WebService;\n-import org.silverpeas.core.notification.user.server.channel.silvermail.SILVERMAILException;\n import org.silverpeas.core.notification.user.server.channel.silvermail.SILVERMAILMessage;\n import org.silverpeas.core.util.SilverpeasList;\n import org.silverpeas.core.web.rs.RESTWebService;\n@@ -86,7 +85,9 @@ protected String getResourceBasePath() {\n   @Path(\"{id}\")\n   @Produces(MediaType.APPLICATION_JSON)\n   public InboxUserNotificationEntity get(@PathParam(\"id\") long id) {\n-    return asWebEntity(getMessage(id));\n+    return process(() -> asWebEntity(getMessage(getUser().getId(), id)))\n+        .lowestAccessRole(null)\n+        .execute();\n   }\n \n   /**\n@@ -96,11 +97,11 @@ public InboxUserNotificationEntity get(@PathParam(\"id\") long id) {\n   @Path(\"{id}\")\n   @Produces(MediaType.APPLICATION_JSON)\n   public Response delete(@PathParam(\"id\") long id) {\n-    try {\n-      deleteMessage(id, getUser().getId());\n-    } catch (SILVERMAILException e) {\n-      throw new WebApplicationException(e);\n-    }\n+    process(() -> {\n+      deleteMessage(getUser().getId(), id);\n+      return null;\n+    }).lowestAccessRole(null)\n+      .execute();\n     return Response.ok().build();\n   }\n \n@@ -115,11 +116,9 @@ public Response delete(@PathParam(\"id\") long id) {\n   @Path(\"{id}/read\")\n   @Produces(MediaType.APPLICATION_JSON)\n   public InboxUserNotificationEntity markAsRead(@PathParam(\"id\") long id) {\n-    try {\n-      return asWebEntity(getMessageAndMarkAsRead(id));\n-    } catch (SILVERMAILException e) {\n-      throw new WebApplicationException(e);\n-    }\n+    return process(() -> asWebEntity(getMessageAndMarkAsRead(getUser().getId(), id)))\n+        .lowestAccessRole(null)\n+        .execute();\n   }\n \n   /**"
        }
    ],
    "commitTime": "2023-11-07 16:05:41"
}