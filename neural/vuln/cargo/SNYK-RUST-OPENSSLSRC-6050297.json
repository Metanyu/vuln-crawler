{
    "CVSSv3": {
        "CVSS": "3.1",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "privilegesRequired": "NONE",
        "userInteraction": "NONE",
        "scope": "UNCHANGED",
        "confidentiality": "NONE",
        "integrity": "NONE",
        "availability": "LOW"
    },
    "credit": [
        "David Benjamin"
    ],
    "cvssDetails": [
        {
            "assigner": "Red Hat",
            "cvssV3BaseScore": 5.3,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "NONE",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "NONE",
                "integrity": "NONE",
                "availability": "LOW"
            },
            "severity": "medium"
        },
        {
            "assigner": "NVD",
            "cvssV3BaseScore": 5.3,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "NONE",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "NONE",
                "integrity": "NONE",
                "availability": "LOW"
            },
            "severity": "medium"
        },
        {
            "assigner": "SUSE",
            "cvssV3BaseScore": 7.5,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "NONE",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "NONE",
                "integrity": "NONE",
                "availability": "HIGH"
            },
            "severity": "high"
        }
    ],
    "cvssScore": 5.3,
    "disclosureTime": "2023-10-24 00:00:00",
    "epssDetails": {
        "modelVersion": "v2023.03.01",
        "percentile": "0.33112",
        "probability": "0.00079"
    },
    "exploitMaturity": "Not Defined",
    "id": "SNYK-RUST-OPENSSLSRC-6050297",
    "identifiers": {
        "CVE": [
            "CVE-2023-5678"
        ],
        "CWE": [
            "CWE-400"
        ]
    },
    "language": "rust",
    "malicious": false,
    "packageManager": "cargo",
    "publicationTime": "2023-12-27 19:17:02",
    "remediation": "Upgrade openssl-src to version 300.2.0+3.2.0 or higher. ",
    "severity": "medium",
    "socialTrendAlert": false,
    "title": "Denial of Service (DoS)",
    "vulnDescription": {
        "Overview": "openssl-src is a crate that contains the logic to build OpenSSL and is intended to be consumed by the openssl-sys crate. Affected versions of this package are vulnerable to Denial of Service (DoS) when the DH_generate_key() , DH_check_pub_key() , DH_check_pub_key_ex() , EVP_PKEY_public_check() , and EVP_PKEY_generate() functions are used. An attacker can cause long delays and potentially a Denial of Service by supplying excessively long X9.42 DH keys or parameters obtained from an untrusted source. Note: This is only exploitable if the application uses these functions to generate or check an X9.42 DH key or parameters. Also, the OpenSSL pkey command line application, when using the -pubcheck option, as well as the OpenSSL genpkey command line application, are vulnerable to this issue. "
    },
    "source_code": [
        {
            "filename": "crypto/dh/dh_check.c",
            "diff": "@@ -249,6 +249,18 @@ int DH_check_pub_key_ex(const DH *dh, const BIGNUM *pub_key)\n  */\n int DH_check_pub_key(const DH *dh, const BIGNUM *pub_key, int *ret)\n {\n+    /* Don't do any checks at all with an excessively large modulus */\n+    if (BN_num_bits(dh->params.p) > OPENSSL_DH_CHECK_MAX_MODULUS_BITS) {\n+        ERR_raise(ERR_LIB_DH, DH_R_MODULUS_TOO_LARGE);\n+        *ret = DH_MODULUS_TOO_LARGE | DH_CHECK_PUBKEY_INVALID;\n+        return 0;\n+    }\n+\n+    if (dh->params.q != NULL && BN_ucmp(dh->params.p, dh->params.q) < 0) {\n+        *ret |= DH_CHECK_INVALID_Q_VALUE | DH_CHECK_PUBKEY_INVALID;\n+        return 1;\n+    }\n+\n     return ossl_ffc_validate_public_key(&dh->params, pub_key, ret);\n }\n "
        },
        {
            "filename": "crypto/dh/dh_err.c",
            "diff": "@@ -1,6 +1,6 @@\n /*\n  * Generated by util/mkerr.pl DO NOT EDIT\n- * Copyright 1995-2021 The OpenSSL Project Authors. All Rights Reserved.\n+ * Copyright 1995-2023 The OpenSSL Project Authors. All Rights Reserved.\n  *\n  * Licensed under the Apache License 2.0 (the \"License\").  You may not use\n  * this file except in compliance with the License.  You can obtain a copy\n@@ -54,6 +54,7 @@ static const ERR_STRING_DATA DH_str_reasons[] = {\n     {ERR_PACK(ERR_LIB_DH, 0, DH_R_PARAMETER_ENCODING_ERROR),\n     \"parameter encoding error\"},\n     {ERR_PACK(ERR_LIB_DH, 0, DH_R_PEER_KEY_ERROR), \"peer key error\"},\n+    {ERR_PACK(ERR_LIB_DH, 0, DH_R_Q_TOO_LARGE), \"q too large\"},\n     {ERR_PACK(ERR_LIB_DH, 0, DH_R_SHARED_INFO_ERROR), \"shared info error\"},\n     {ERR_PACK(ERR_LIB_DH, 0, DH_R_UNABLE_TO_CHECK_GENERATOR),\n     \"unable to check generator\"},"
        },
        {
            "filename": "crypto/dh/dh_key.c",
            "diff": "@@ -49,6 +49,12 @@ int ossl_dh_compute_key(unsigned char *key, const BIGNUM *pub_key, DH *dh)\n         goto err;\n     }\n \n+    if (dh->params.q != NULL\n+        && BN_num_bits(dh->params.q) > OPENSSL_DH_MAX_MODULUS_BITS) {\n+        ERR_raise(ERR_LIB_DH, DH_R_Q_TOO_LARGE);\n+        goto err;\n+    }\n+\n     if (BN_num_bits(dh->params.p) < DH_MIN_MODULUS_BITS) {\n         ERR_raise(ERR_LIB_DH, DH_R_MODULUS_TOO_SMALL);\n         return 0;\n@@ -267,6 +273,12 @@ static int generate_key(DH *dh)\n         return 0;\n     }\n \n+    if (dh->params.q != NULL\n+        && BN_num_bits(dh->params.q) > OPENSSL_DH_MAX_MODULUS_BITS) {\n+        ERR_raise(ERR_LIB_DH, DH_R_Q_TOO_LARGE);\n+        return 0;\n+    }\n+\n     if (BN_num_bits(dh->params.p) < DH_MIN_MODULUS_BITS) {\n         ERR_raise(ERR_LIB_DH, DH_R_MODULUS_TOO_SMALL);\n         return 0;"
        },
        {
            "filename": "crypto/err/openssl.txt",
            "diff": "@@ -500,6 +500,7 @@ DH_R_NO_PARAMETERS_SET:107:no parameters set\n DH_R_NO_PRIVATE_VALUE:100:no private value\n DH_R_PARAMETER_ENCODING_ERROR:105:parameter encoding error\n DH_R_PEER_KEY_ERROR:111:peer key error\n+DH_R_Q_TOO_LARGE:130:q too large\n DH_R_SHARED_INFO_ERROR:113:shared info error\n DH_R_UNABLE_TO_CHECK_GENERATOR:121:unable to check generator\n DSA_R_BAD_FFC_PARAMETERS:114:bad ffc parameters"
        },
        {
            "filename": "include/crypto/dherr.h",
            "diff": "@@ -1,6 +1,6 @@\n /*\n  * Generated by util/mkerr.pl DO NOT EDIT\n- * Copyright 2020-2021 The OpenSSL Project Authors. All Rights Reserved.\n+ * Copyright 2020-2023 The OpenSSL Project Authors. All Rights Reserved.\n  *\n  * Licensed under the Apache License 2.0 (the \"License\").  You may not use\n  * this file except in compliance with the License.  You can obtain a copy"
        },
        {
            "filename": "include/openssl/dh.h",
            "diff": "@@ -141,7 +141,7 @@ DECLARE_ASN1_ITEM(DHparams)\n #   define DH_GENERATOR_3          3\n #   define DH_GENERATOR_5          5\n \n-/* DH_check error codes */\n+/* DH_check error codes, some of them shared with DH_check_pub_key */\n /*\n  * NB: These values must align with the equivalently named macros in\n  * internal/ffc.h.\n@@ -151,10 +151,10 @@ DECLARE_ASN1_ITEM(DHparams)\n #   define DH_UNABLE_TO_CHECK_GENERATOR    0x04\n #   define DH_NOT_SUITABLE_GENERATOR       0x08\n #   define DH_CHECK_Q_NOT_PRIME            0x10\n-#   define DH_CHECK_INVALID_Q_VALUE        0x20\n+#   define DH_CHECK_INVALID_Q_VALUE        0x20 /* +DH_check_pub_key */\n #   define DH_CHECK_INVALID_J_VALUE        0x40\n #   define DH_MODULUS_TOO_SMALL            0x80\n-#   define DH_MODULUS_TOO_LARGE            0x100\n+#   define DH_MODULUS_TOO_LARGE            0x100 /* +DH_check_pub_key */\n \n /* DH_check_pub_key error codes */\n #   define DH_CHECK_PUBKEY_TOO_SMALL       0x01"
        },
        {
            "filename": "include/openssl/dherr.h",
            "diff": "@@ -1,6 +1,6 @@\n /*\n  * Generated by util/mkerr.pl DO NOT EDIT\n- * Copyright 1995-2021 The OpenSSL Project Authors. All Rights Reserved.\n+ * Copyright 1995-2023 The OpenSSL Project Authors. All Rights Reserved.\n  *\n  * Licensed under the Apache License 2.0 (the \"License\").  You may not use\n  * this file except in compliance with the License.  You can obtain a copy\n@@ -50,6 +50,7 @@\n #  define DH_R_NO_PRIVATE_VALUE                            100\n #  define DH_R_PARAMETER_ENCODING_ERROR                    105\n #  define DH_R_PEER_KEY_ERROR                              111\n+#  define DH_R_Q_TOO_LARGE                                 130\n #  define DH_R_SHARED_INFO_ERROR                           113\n #  define DH_R_UNABLE_TO_CHECK_GENERATOR                   121\n "
        }
    ],
    "commitTime": "2023-11-06 07:54:30"
}