{
    "CVSSv3": {
        "CVSS": "3.1",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "privilegesRequired": "HIGH",
        "userInteraction": "REQUIRED",
        "scope": "UNCHANGED",
        "confidentiality": "LOW",
        "integrity": "LOW",
        "availability": "NONE"
    },
    "credit": [
        "Unknown"
    ],
    "cvssDetails": [
        {
            "assigner": "NVD",
            "cvssV3BaseScore": 5.4,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "LOW",
                "userInteraction": "REQUIRED",
                "scope": "CHANGED",
                "confidentiality": "LOW",
                "integrity": "LOW",
                "availability": "NONE"
            },
            "severity": "medium"
        }
    ],
    "cvssScore": 3.5,
    "disclosureTime": "2023-12-12 18:44:05",
    "epssDetails": {
        "modelVersion": "v2023.03.01",
        "percentile": "0.06909",
        "probability": "0.00043"
    },
    "exploitMaturity": "Not Defined",
    "id": "SNYK-DOTNET-UMBRACOCMSWEB-6124075",
    "identifiers": {
        "CVE": [
            "CVE-2023-38694"
        ],
        "CWE": [
            "CWE-79"
        ]
    },
    "language": "dotnet",
    "malicious": false,
    "packageManager": "nuget",
    "publicationTime": "2023-12-13 12:51:14",
    "remediation": "Upgrade UmbracoCms.Web to version 8.18.10 or higher. ",
    "severity": "low",
    "socialTrendAlert": false,
    "title": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "vulnDescription": {
        "Overview": "UmbracoCms.Web is an ASP.NET CMS. Affected versions of this package are vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') via a specific part of the backoffice interface. An attacker with access to this area can inject unauthorized HTML code into a form that is not designed to handle such input. "
    },
    "source_code": [
        {
            "filename": "src/Umbraco.Web/Editors/UsersController.cs",
            "diff": "@@ -7,6 +7,7 @@\n using System.Net.Http;\n using System.Runtime.Serialization;\n using System.Security.Cryptography;\n+using System.Text.RegularExpressions;\n using System.Threading;\n using System.Threading.Tasks;\n using System.Web;\n@@ -578,7 +579,7 @@ private async Task SendUserInviteEmailAsync(UserBasic userDisplay, string from,\n             var emailBody = Services.TextService.Localize(\"user\", \"inviteEmailCopyFormat\",\n                 //Ensure the culture of the found user is used for the email!\n                 UserExtensions.GetUserCulture(to.Language, Services.TextService, GlobalSettings),\n-                new[] { userDisplay.Name, from, message, inviteUri.ToString(), fromEmail });\n+                new[] { userDisplay.Name, from, Regex.Replace(WebUtility.HtmlEncode(message),\"(\\r\\n|\\r|\\n)\", \"<br/>\"), inviteUri.ToString(), fromEmail });\n \n             await UserManager.EmailService.SendAsync(\n                 //send the special UmbracoEmailMessage which configures it's own sender"
        }
    ],
    "commitTime": "2023-12-11 12:01:05"
}