{
    "CVSSv3": {
        "CVSS": "3.1",
        "attackVector": "LOCAL",
        "attackComplexity": "LOW",
        "privilegesRequired": "LOW",
        "userInteraction": "REQUIRED",
        "scope": "UNCHANGED",
        "confidentiality": "HIGH",
        "integrity": "HIGH",
        "availability": "NONE"
    },
    "credit": [
        "Unknown"
    ],
    "cvssDetails": [
        {
            "assigner": "NVD",
            "cvssV3BaseScore": 7.8,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "LOCAL",
                "attackComplexity": "LOW",
                "privilegesRequired": "LOW",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "HIGH",
                "integrity": "HIGH",
                "availability": "HIGH"
            },
            "severity": "high"
        }
    ],
    "cvssScore": 6.6,
    "disclosureTime": "2023-11-02 12:57:00",
    "epssDetails": {
        "modelVersion": "v2023.03.01",
        "percentile": "0.12293",
        "probability": "0.00045"
    },
    "exploitMaturity": "Not Defined",
    "id": "SNYK-PYTHON-ANSIBLECORE-6135748",
    "identifiers": {
        "CVE": [
            "CVE-2023-5764"
        ],
        "CWE": [
            "CWE-94"
        ]
    },
    "language": "python",
    "malicious": false,
    "packageManager": "pip",
    "publicationTime": "2023-12-21 12:28:20",
    "remediation": "Upgrade ansible-core to version 2.15.7rc1, 2.16.1rc1 or higher. ",
    "severity": "medium",
    "socialTrendAlert": false,
    "title": "Improper Control of Generation of Code ('Code Injection')",
    "vulnDescription": {
        "Overview": "ansible-core is an a radically simple IT automation system. It handles configuration management, application deployment, cloud provisioning, ad-hoc task execution, network automation, and multi-node orchestration. Ansible makes complex changes like zero-downtime rolling updates with load balancers easy. Affected versions of this package are vulnerable to Improper Control of Generation of Code ('Code Injection'). An attacker can inject malicious code into the template, leading to unauthorized access and potential data compromise. "
    },
    "source_code": [
        {
            "filename": "changelogs/fragments/cve-2023-5764.yml",
            "diff": "@@ -0,0 +1,6 @@\n+security_fixes:\n+- templating - Address issues where internal templating can cause unsafe\n+  variables to lose their unsafe designation (CVE-2023-5764)\n+breaking_changes:\n+- assert - Nested templating may result in an inability for the conditional\n+  to be evaluated. See the porting guide for more information."
        },
        {
            "filename": "lib/ansible/module_utils/common/json.py",
            "diff": "@@ -30,7 +30,7 @@ def _preprocess_unsafe_encode(value):\n     Used in ``AnsibleJSONEncoder.iterencode``\n     \"\"\"\n     if _is_unsafe(value):\n-        value = {'__ansible_unsafe': to_text(value, errors='surrogate_or_strict', nonstring='strict')}\n+        value = {'__ansible_unsafe': to_text(value._strip_unsafe(), errors='surrogate_or_strict', nonstring='strict')}\n     elif is_sequence(value):\n         value = [_preprocess_unsafe_encode(v) for v in value]\n     elif isinstance(value, Mapping):\n@@ -63,7 +63,7 @@ def default(self, o):\n                 value = {'__ansible_vault': to_text(o._ciphertext, errors='surrogate_or_strict', nonstring='strict')}\n         elif getattr(o, '__UNSAFE__', False):\n             # unsafe object, this will never be triggered, see ``AnsibleJSONEncoder.iterencode``\n-            value = {'__ansible_unsafe': to_text(o, errors='surrogate_or_strict', nonstring='strict')}\n+            value = {'__ansible_unsafe': to_text(o._strip_unsafe(), errors='surrogate_or_strict', nonstring='strict')}\n         elif isinstance(o, Mapping):\n             # hostvars and other objects\n             value = dict(o)"
        },
        {
            "filename": "lib/ansible/parsing/yaml/dumper.py",
            "diff": "@@ -24,7 +24,7 @@\n from ansible.module_utils.six import text_type, binary_type\n from ansible.module_utils.common.yaml import SafeDumper\n from ansible.parsing.yaml.objects import AnsibleUnicode, AnsibleSequence, AnsibleMapping, AnsibleVaultEncryptedUnicode\n-from ansible.utils.unsafe_proxy import AnsibleUnsafeText, AnsibleUnsafeBytes, NativeJinjaUnsafeText, NativeJinjaText\n+from ansible.utils.unsafe_proxy import AnsibleUnsafeText, AnsibleUnsafeBytes, NativeJinjaUnsafeText, NativeJinjaText, _is_unsafe\n from ansible.template import AnsibleUndefined\n from ansible.vars.hostvars import HostVars, HostVarsVars\n from ansible.vars.manager import VarsWithSources\n@@ -47,10 +47,14 @@ def represent_vault_encrypted_unicode(self, data):\n \n \n def represent_unicode(self, data):\n+    if _is_unsafe(data):\n+        data = data._strip_unsafe()\n     return yaml.representer.SafeRepresenter.represent_str(self, text_type(data))\n \n \n def represent_binary(self, data):\n+    if _is_unsafe(data):\n+        data = data._strip_unsafe()\n     return yaml.representer.SafeRepresenter.represent_binary(self, binary_type(data))\n \n "
        },
        {
            "filename": "lib/ansible/playbook/conditional.py",
            "diff": "@@ -21,7 +21,7 @@\n \n import typing as t\n \n-from ansible.errors import AnsibleError, AnsibleUndefinedVariable\n+from ansible.errors import AnsibleError, AnsibleUndefinedVariable, AnsibleTemplateError\n from ansible.module_utils.common.text.converters import to_native\n from ansible.playbook.attribute import FieldAttribute\n from ansible.template import Templar\n@@ -102,14 +102,14 @@ def _check_conditional(self, conditional: str, templar: Templar, all_vars: dict[\n                     return False\n \n             # If the result of the first-pass template render (to resolve inline templates) is marked unsafe,\n-            # explicitly disable lookups on the final pass to prevent evaluation of untrusted content in the\n-            # constructed template.\n-            disable_lookups = hasattr(conditional, '__UNSAFE__')\n+            # explicitly fail since the next templating operation would never evaluate\n+            if hasattr(conditional, '__UNSAFE__'):\n+                raise AnsibleTemplateError('Conditional is marked as unsafe, and cannot be evaluated.')\n \n             # NOTE The spaces around True and False are intentional to short-circuit literal_eval for\n             #      jinja2_native=False and avoid its expensive calls.\n             return templar.template(\n                 \"{%% if %s %%} True {%% else %%} False {%% endif %%}\" % conditional,\n-                disable_lookups=disable_lookups).strip() == \"True\"\n+            ).strip() == \"True\"\n         except AnsibleUndefinedVariable as e:\n             raise AnsibleUndefinedVariable(\"error while evaluating conditional (%s): %s\" % (original, e))"
        },
        {
            "filename": "lib/ansible/playbook/task.py",
            "diff": "@@ -289,6 +289,30 @@ def post_validate(self, templar):\n \n         super(Task, self).post_validate(templar)\n \n+    def _post_validate_args(self, attr, value, templar):\n+        # smuggle an untemplated copy of the task args for actions that need more control over the templating of their\n+        # input (eg, debug's var/msg, assert's \"that\" conditional expressions)\n+        self.untemplated_args = value\n+\n+        # now recursively template the args dict\n+        args = templar.template(value)\n+\n+        # FIXME: could we just nuke this entirely and/or wrap it up in ModuleArgsParser or something?\n+        if '_variable_params' in args:\n+            variable_params = args.pop('_variable_params')\n+            if isinstance(variable_params, dict):\n+                if C.INJECT_FACTS_AS_VARS:\n+                    display.warning(\"Using a variable for a task's 'args' is unsafe in some situations \"\n+                                    \"(see https://docs.ansible.com/ansible/devel/reference_appendices/faq.html#argsplat-unsafe)\")\n+                variable_params.update(args)\n+                args = variable_params\n+            else:\n+                # if we didn't get a dict, it means there's garbage remaining after k=v parsing, just give up\n+                # see https://github.com/ansible/ansible/issues/79862\n+                raise AnsibleError(f\"invalid or malformed argument: '{variable_params}'\")\n+\n+        return args\n+\n     def _post_validate_loop(self, attr, value, templar):\n         '''\n         Override post validation for the loop field, which is templated"
        },
        {
            "filename": "lib/ansible/plugins/action/assert.py",
            "diff": "@@ -64,8 +64,29 @@ def run(self, tmp=None, task_vars=None):\n \n         quiet = boolean(self._task.args.get('quiet', False), strict=False)\n \n+        # directly access 'that' via untemplated args from the task so we can intelligently trust embedded\n+        # templates and preserve the original inputs/locations for better messaging on assert failures and\n+        # errors.\n+        # FIXME: even in devel, things like `that: item` don't always work properly (truthy string value\n+        # is not really an embedded expression)\n+        # we could fix that by doing direct var lookups on the inputs\n+        # FIXME: some form of this code should probably be shared between debug, assert, and\n+        # Task.post_validate, since they\n+        # have a lot of overlapping needs\n+        try:\n+            thats = self._task.untemplated_args['that']\n+        except KeyError:\n+            # in the case of \"we got our entire args dict from a template\", we can just consult the\n+            # post-templated dict (the damage has likely already been done for embedded templates anyway)\n+            thats = self._task.args['that']\n+\n+        # FIXME: this is a case where we only want to resolve indirections, NOT recurse containers\n+        # (and even then, the leaf-most expression being wrapped is at least suboptimal\n+        # (since its expression will be \"eaten\").\n+        if isinstance(thats, str):\n+            thats = self._templar.template(thats)\n+\n         # make sure the 'that' items are a list\n-        thats = self._task.args['that']\n         if not isinstance(thats, list):\n             thats = [thats]\n "
        },
        {
            "filename": "lib/ansible/plugins/callback/__init__.py",
            "diff": "@@ -38,7 +38,7 @@\n from ansible.plugins import AnsiblePlugin\n from ansible.utils.color import stringc\n from ansible.utils.display import Display\n-from ansible.utils.unsafe_proxy import AnsibleUnsafeText, NativeJinjaUnsafeText\n+from ansible.utils.unsafe_proxy import AnsibleUnsafeText, NativeJinjaUnsafeText, _is_unsafe\n from ansible.vars.clean import strip_internal_keys, module_response_deepcopy\n \n import yaml\n@@ -113,6 +113,8 @@ def _munge_data_for_lossy_yaml(scalar):\n \n def _pretty_represent_str(self, data):\n     \"\"\"Uses block style for multi-line strings\"\"\"\n+    if _is_unsafe(data):\n+        data = data._strip_unsafe()\n     data = text_type(data)\n     if _should_use_block(data):\n         style = '|'"
        },
        {
            "filename": "lib/ansible/plugins/filter/core.py",
            "diff": "@@ -37,6 +37,7 @@\n from ansible.utils.encrypt import do_encrypt, PASSLIB_AVAILABLE\n from ansible.utils.hashing import md5s, checksum_s\n from ansible.utils.unicode import unicode_wrap\n+from ansible.utils.unsafe_proxy import _is_unsafe\n from ansible.utils.vars import merge_hash\n \n display = Display()\n@@ -215,6 +216,8 @@ def from_yaml(data):\n         # The ``text_type`` call here strips any custom\n         # string wrapper class, so that CSafeLoader can\n         # read the data\n+        if _is_unsafe(data):\n+            data = data._strip_unsafe()\n         return yaml_load(text_type(to_text(data, errors='surrogate_or_strict')))\n     return data\n \n@@ -224,6 +227,8 @@ def from_yaml_all(data):\n         # The ``text_type`` call here strips any custom\n         # string wrapper class, so that CSafeLoader can\n         # read the data\n+        if _is_unsafe(data):\n+            data = data._strip_unsafe()\n         return yaml_load_all(text_type(to_text(data, errors='surrogate_or_strict')))\n     return data\n "
        },
        {
            "filename": "lib/ansible/plugins/lookup/first_found.py",
            "diff": "@@ -139,7 +139,6 @@\n     elements: path\n \"\"\"\n import os\n-import re\n \n from collections.abc import Mapping, Sequence\n \n@@ -150,10 +149,22 @@\n from ansible.plugins.lookup import LookupBase\n \n \n+def _splitter(value, chars):\n+    chars = set(chars)\n+    v = ''\n+    for c in value:\n+        if c in chars:\n+            yield v\n+            v = ''\n+            continue\n+        v += c\n+    yield v\n+\n+\n def _split_on(terms, spliters=','):\n     termlist = []\n     if isinstance(terms, string_types):\n-        termlist = re.split(r'[%s]' % ''.join(map(re.escape, spliters)), terms)\n+        termlist = list(_splitter(terms, spliters))\n     else:\n         # added since options will already listify\n         for t in terms:"
        },
        {
            "filename": "lib/ansible/template/__init__.py",
            "diff": "@@ -31,7 +31,7 @@\n from numbers import Number\n from traceback import format_exc\n \n-from jinja2.exceptions import TemplateSyntaxError, UndefinedError\n+from jinja2.exceptions import TemplateSyntaxError, UndefinedError, SecurityError\n from jinja2.loaders import FileSystemLoader\n from jinja2.nativetypes import NativeEnvironment\n from jinja2.runtime import Context, StrictUndefined\n@@ -55,7 +55,7 @@\n from ansible.utils.display import Display\n from ansible.utils.listify import listify_lookup_plugin_terms\n from ansible.utils.native_jinja import NativeJinjaText\n-from ansible.utils.unsafe_proxy import to_unsafe_text, wrap_var\n+from ansible.utils.unsafe_proxy import to_unsafe_text, wrap_var, AnsibleUnsafeText, AnsibleUnsafeBytes, NativeJinjaUnsafeText\n \n display = Display()\n \n@@ -365,10 +365,21 @@ class AnsibleContext(Context):\n     flag is checked post-templating, and (when set) will result in the\n     final templated result being wrapped in AnsibleUnsafe.\n     '''\n+    _disallowed_callables = frozenset({\n+        AnsibleUnsafeText._strip_unsafe.__qualname__,\n+        AnsibleUnsafeBytes._strip_unsafe.__qualname__,\n+        NativeJinjaUnsafeText._strip_unsafe.__qualname__,\n+    })\n+\n     def __init__(self, *args, **kwargs):\n         super(AnsibleContext, self).__init__(*args, **kwargs)\n         self.unsafe = False\n \n+    def call(self, obj, *args, **kwargs):\n+        if getattr(obj, '__qualname__', None) in self._disallowed_callables or obj in self._disallowed_callables:\n+            raise SecurityError(f\"{obj!r} is not safely callable\")\n+        return super().call(obj, *args, **kwargs)\n+\n     def _is_unsafe(self, val):\n         '''\n         Our helper function, which will also recursively check dict and"
        },
        {
            "filename": "lib/ansible/utils/unsafe_proxy.py",
            "diff": "@@ -69,15 +69,264 @@ class AnsibleUnsafe(object):\n \n \n class AnsibleUnsafeBytes(binary_type, AnsibleUnsafe):\n-    def decode(self, *args, **kwargs):\n-        \"\"\"Wrapper method to ensure type conversions maintain unsafe context\"\"\"\n-        return AnsibleUnsafeText(super(AnsibleUnsafeBytes, self).decode(*args, **kwargs))\n+    def _strip_unsafe(self):\n+        return super().__bytes__()\n+\n+    def __str__(self, /):  # pylint: disable=invalid-str-returned\n+        return self.encode()\n+\n+    def __bytes__(self, /):  # pylint: disable=invalid-bytes-returned\n+        return self\n+\n+    def __repr__(self, /):  # pylint: disable=invalid-repr-returned\n+        return AnsibleUnsafeText(super().__repr__())\n+\n+    def __format__(self, format_spec, /):  # pylint: disable=invalid-format-returned\n+        return self.__class__(super().__format__(format_spec))\n+\n+    def __getitem__(self, key, /):\n+        return self.__class__(super().__getitem__(key))\n+\n+    def __iter__(self, /):\n+        cls = self.__class__\n+        return (cls(c) for c in super().__iter__())\n+\n+    def __reversed__(self, /):\n+        return self[::-1]\n+\n+    def __add__(self, value, /):\n+        return self.__class__(super().__add__(value))\n+\n+    def __radd__(self, value, /):\n+        return self.__class__(value.__add__(self))\n+\n+    def __mul__(self, value, /):\n+        return self.__class__(super().__mul__(value))\n+\n+    __rmul__ = __mul__\n+\n+    def __mod__(self, value, /):\n+        return self.__class__(super().__mod__(value))\n+\n+    def __rmod__(self, value, /):\n+        return self.__class__(super().__rmod__(value))\n+\n+    def capitalize(self, /):\n+        return self.__class__(super().capitalize())\n+\n+    def casefold(self, /):\n+        return self.__class__(super().casefold())\n+\n+    def center(self, width, fillchar=b' ', /):\n+        return self.__class__(super().center(width, fillchar))\n+\n+    def decode(self, /, encoding='utf-8', errors='strict'):\n+        return AnsibleUnsafeText(super().decode(encoding=encoding, errors=errors))\n+\n+    def removeprefix(self, prefix, /):\n+        return self.__class__(super().removeprefix(prefix))\n+\n+    def removesuffix(self, suffix, /):\n+        return self.__class__(super().removesuffix(suffix))\n+\n+    def expandtabs(self, /, tabsize=8):\n+        return self.__class__(super().expandtabs(tabsize))\n+\n+    def format(self, /, *args, **kwargs):\n+        return self.__class__(super().format(*args, **kwargs))\n+\n+    def format_map(self, mapping, /):\n+        return self.__class__(super().format_map(mapping))\n+\n+    def join(self, iterable_of_bytes, /):\n+        return self.__class__(super().join(iterable_of_bytes))\n+\n+    def ljust(self, width, fillchar=b' ', /):\n+        return self.__class__(super().ljust(width, fillchar))\n+\n+    def lower(self, /):\n+        return self.__class__(super().lower())\n+\n+    def lstrip(self, bytes=None, /):\n+        return self.__class__(super().lstrip(bytes))\n+\n+    def partition(self, sep, /):\n+        cls = self.__class__\n+        return tuple(cls(e) for e in super().partition(sep))\n+\n+    def replace(self, old, new, count=-1, /):\n+        return self.__class__(super().replace(old, new, count))\n+\n+    def rjust(self, width, fillchar=b' ', /):\n+        return self.__class__(super().rjust(width, fillchar))\n+\n+    def rpartition(self, sep, /):\n+        cls = self.__class__\n+        return tuple(cls(e) for e in super().rpartition(sep))\n+\n+    def rstrip(self, bytes=None, /):\n+        return self.__class__(super().rstrip(bytes))\n+\n+    def split(self, /, sep=None, maxsplit=-1):\n+        cls = self.__class__\n+        return [cls(e) for e in super().split(sep=sep, maxsplit=maxsplit)]\n+\n+    def rsplit(self, /, sep=None, maxsplit=-1):\n+        cls = self.__class__\n+        return [cls(e) for e in super().rsplit(sep=sep, maxsplit=maxsplit)]\n+\n+    def splitlines(self, /, keepends=False):\n+        cls = self.__class__\n+        return [cls(e) for e in super().splitlines(keepends=keepends)]\n+\n+    def strip(self, bytes=None, /):\n+        return self.__class__(super().strip(bytes))\n+\n+    def swapcase(self, /):\n+        return self.__class__(super().swapcase())\n+\n+    def title(self, /):\n+        return self.__class__(super().title())\n+\n+    def translate(self, table, /, delete=b''):\n+        return self.__class__(super().translate(table, delete=delete))\n+\n+    def upper(self, /):\n+        return self.__class__(super().upper())\n+\n+    def zfill(self, width, /):\n+        return self.__class__(super().zfill(width))\n \n \n class AnsibleUnsafeText(text_type, AnsibleUnsafe):\n-    def encode(self, *args, **kwargs):\n-        \"\"\"Wrapper method to ensure type conversions maintain unsafe context\"\"\"\n-        return AnsibleUnsafeBytes(super(AnsibleUnsafeText, self).encode(*args, **kwargs))\n+    # def __getattribute__(self, name):\n+    #     print(f'attr: {name}')\n+    #     return object.__getattribute__(self, name)\n+\n+    def _strip_unsafe(self, /):\n+        return super().__str__()\n+\n+    def __str__(self, /):  # pylint: disable=invalid-str-returned\n+        return self\n+\n+    def __repr__(self, /):  # pylint: disable=invalid-repr-returned\n+        return self.__class__(super().__repr__())\n+\n+    def __format__(self, format_spec, /):  # pylint: disable=invalid-format-returned\n+        return self.__class__(super().__format__(format_spec))\n+\n+    def __getitem__(self, key, /):\n+        return self.__class__(super().__getitem__(key))\n+\n+    def __iter__(self, /):\n+        cls = self.__class__\n+        return (cls(c) for c in super().__iter__())\n+\n+    def __reversed__(self, /):\n+        return self[::-1]\n+\n+    def __add__(self, value, /):\n+        return self.__class__(super().__add__(value))\n+\n+    def __radd__(self, value, /):\n+        return self.__class__(value.__add__(self))\n+\n+    def __mul__(self, value, /):\n+        return self.__class__(super().__mul__(value))\n+\n+    __rmul__ = __mul__\n+\n+    def __mod__(self, value, /):\n+        return self.__class__(super().__mod__(value))\n+\n+    def __rmod__(self, value, /):\n+        return self.__class__(super().__rmod__(value))\n+\n+    def capitalize(self, /):\n+        return self.__class__(super().capitalize())\n+\n+    def casefold(self, /):\n+        return self.__class__(super().casefold())\n+\n+    def center(self, width, fillchar=' ', /):\n+        return self.__class__(super().center(width, fillchar))\n+\n+    def encode(self, /, encoding='utf-8', errors='strict'):\n+        return AnsibleUnsafeBytes(super().encode(encoding=encoding, errors=errors))\n+\n+    def removeprefix(self, prefix, /):\n+        return self.__class__(super().removeprefix(prefix))\n+\n+    def removesuffix(self, suffix, /):\n+        return self.__class__(super().removesuffix(suffix))\n+\n+    def expandtabs(self, /, tabsize=8):\n+        return self.__class__(super().expandtabs(tabsize))\n+\n+    def format(self, /, *args, **kwargs):\n+        return self.__class__(super().format(*args, **kwargs))\n+\n+    def format_map(self, mapping, /):\n+        return self.__class__(super().format_map(mapping))\n+\n+    def join(self, iterable, /):\n+        return self.__class__(super().join(iterable))\n+\n+    def ljust(self, width, fillchar=' ', /):\n+        return self.__class__(super().ljust(width, fillchar))\n+\n+    def lower(self, /):\n+        return self.__class__(super().lower())\n+\n+    def lstrip(self, chars=None, /):\n+        return self.__class__(super().lstrip(chars))\n+\n+    def partition(self, sep, /):\n+        cls = self.__class__\n+        return tuple(cls(e) for e in super().partition(sep))\n+\n+    def replace(self, old, new, count=-1, /):\n+        return self.__class__(super().replace(old, new, count))\n+\n+    def rjust(self, width, fillchar=' ', /):\n+        return self.__class__(super().rjust(width, fillchar))\n+\n+    def rpartition(self, sep, /):\n+        cls = self.__class__\n+        return tuple(cls(e) for e in super().rpartition(sep))\n+\n+    def rstrip(self, chars=None, /):\n+        return self.__class__(super().rstrip(chars))\n+\n+    def split(self, /, sep=None, maxsplit=-1):\n+        cls = self.__class__\n+        return [cls(e) for e in super().split(sep=sep, maxsplit=maxsplit)]\n+\n+    def rsplit(self, /, sep=None, maxsplit=-1):\n+        cls = self.__class__\n+        return [cls(e) for e in super().rsplit(sep=sep, maxsplit=maxsplit)]\n+\n+    def splitlines(self, /, keepends=False):\n+        cls = self.__class__\n+        return [cls(e) for e in super().splitlines(keepends=keepends)]\n+\n+    def strip(self, chars=None, /):\n+        return self.__class__(super().strip(chars))\n+\n+    def swapcase(self, /):\n+        return self.__class__(super().swapcase())\n+\n+    def title(self, /):\n+        return self.__class__(super().title())\n+\n+    def translate(self, table, /):\n+        return self.__class__(super().translate(table))\n+\n+    def upper(self, /):\n+        return self.__class__(super().upper())\n+\n+    def zfill(self, width, /):\n+        return self.__class__(super().zfill(width))\n \n \n class NativeJinjaUnsafeText(NativeJinjaText, AnsibleUnsafeText):\n@@ -126,3 +375,7 @@ def to_unsafe_bytes(*args, **kwargs):\n \n def to_unsafe_text(*args, **kwargs):\n     return wrap_var(to_text(*args, **kwargs))\n+\n+\n+def _is_unsafe(obj):\n+    return getattr(obj, '__UNSAFE__', False) is True"
        },
        {
            "filename": "test/integration/targets/ansible-galaxy-collection-scm/tasks/scm_dependency_deduplication.yml",
            "diff": "@@ -13,22 +13,22 @@\n         in command.stdout_lines\n       - >-\n         \"Installing 'namespace_1.collection_1:1.0.0' to\n-        '{{ install_path }}/namespace_1/collection_1'\"\n+        '\" ~ install_path ~ \"/namespace_1/collection_1'\"\n         in command.stdout_lines\n       - >-\n         'Created collection for namespace_1.collection_1:1.0.0 at\n-        {{ install_path }}/namespace_1/collection_1'\n+        ' ~ install_path ~ '/namespace_1/collection_1'\n         in command.stdout_lines\n       - >-\n         'namespace_1.collection_1:1.0.0 was installed successfully'\n         in command.stdout_lines\n       - >-\n         \"Installing 'namespace_2.collection_2:1.0.0' to\n-        '{{ install_path }}/namespace_2/collection_2'\"\n+        '\" ~ install_path ~ \"/namespace_2/collection_2'\"\n         in command.stdout_lines\n       - >-\n         'Created collection for namespace_2.collection_2:1.0.0 at\n-        {{ install_path }}/namespace_2/collection_2'\n+        ' ~ install_path ~ '/namespace_2/collection_2'\n         in command.stdout_lines\n       - >-\n         'namespace_2.collection_2:1.0.0 was installed successfully'\n@@ -58,22 +58,22 @@\n         in command.stdout_lines\n       - >-\n         \"Installing 'namespace_1.collection_1:1.0.0' to\n-        '{{ install_path }}/namespace_1/collection_1'\"\n+        '\" ~ install_path ~ \"/namespace_1/collection_1'\"\n         in command.stdout_lines\n       - >-\n         'Created collection for namespace_1.collection_1:1.0.0 at\n-        {{ install_path }}/namespace_1/collection_1'\n+        ' ~ install_path ~ '/namespace_1/collection_1'\n         in command.stdout_lines\n       - >-\n         'namespace_1.collection_1:1.0.0 was installed successfully'\n         in command.stdout_lines\n       - >-\n         \"Installing 'namespace_2.collection_2:1.0.0' to\n-        '{{ install_path }}/namespace_2/collection_2'\"\n+        '\" ~ install_path ~ \"/namespace_2/collection_2'\"\n         in command.stdout_lines\n       - >-\n         'Created collection for namespace_2.collection_2:1.0.0 at\n-        {{ install_path }}/namespace_2/collection_2'\n+        ' ~ install_path ~ '/namespace_2/collection_2'\n         in command.stdout_lines\n       - >-\n         'namespace_2.collection_2:1.0.0 was installed successfully'"
        },
        {
            "filename": "test/integration/targets/ansible-vault/roles/test_vault_embedded/tasks/main.yml",
            "diff": "@@ -2,7 +2,7 @@\n - name: Assert that a embedded vault of a string with no newline works\n   assert:\n     that:\n-      - '\"{{ vault_encrypted_one_line_var }}\" == \"Setec Astronomy\"'\n+      - 'vault_encrypted_one_line_var == \"Setec Astronomy\"'\n \n - name: Assert that a multi line embedded vault works, including new line\n   assert:"
        },
        {
            "filename": "test/integration/targets/ansible-vault/roles/test_vault_file_encrypted_embedded/tasks/main.yml",
            "diff": "@@ -2,7 +2,7 @@\n - name: Assert that a vault encrypted file with embedded vault of a string with no newline works\n   assert:\n     that:\n-      - '\"{{ vault_file_encrypted_with_encrypted_one_line_var }}\" == \"Setec Astronomy\"'\n+      - 'vault_file_encrypted_with_encrypted_one_line_var == \"Setec Astronomy\"'\n \n - name: Assert that a vault encrypted file with multi line embedded vault works, including new line\n   assert:"
        },
        {
            "filename": "test/integration/targets/apt_repository/tasks/apt.yml",
            "diff": "@@ -50,7 +50,7 @@\n     that:\n       - 'result.changed'\n       - 'result.state == \"present\"'\n-      - 'result.repo == \"{{test_ppa_name}}\"'\n+      - 'result.repo == test_ppa_name'\n \n - name: 'examine apt cache mtime'\n   stat: path='/var/cache/apt/pkgcache.bin'\n@@ -81,7 +81,7 @@\n     that:\n       - 'result.changed'\n       - 'result.state == \"present\"'\n-      - 'result.repo == \"{{test_ppa_name}}\"'\n+      - 'result.repo == test_ppa_name'\n \n - name: 'examine apt cache mtime'\n   stat: path='/var/cache/apt/pkgcache.bin'\n@@ -112,7 +112,7 @@\n     that:\n       - 'result.changed'\n       - 'result.state == \"present\"'\n-      - 'result.repo == \"{{test_ppa_name}}\"'\n+      - 'result.repo == test_ppa_name'\n \n - name: 'examine apt cache mtime'\n   stat: path='/var/cache/apt/pkgcache.bin'\n@@ -151,7 +151,7 @@\n     that:\n       - 'result.changed'\n       - 'result.state == \"present\"'\n-      - 'result.repo == \"{{test_ppa_spec}}\"'\n+      - 'result.repo == test_ppa_spec'\n       - '\"sources_added\" in result'\n       - 'result.sources_added | length == 1'\n       - '\"git\" in result.sources_added[0]'\n@@ -176,7 +176,7 @@\n     that:\n       - 'result.changed'\n       - 'result.state == \"absent\"'\n-      - 'result.repo == \"{{test_ppa_spec}}\"'\n+      - 'result.repo == test_ppa_spec'\n       - '\"sources_added\" in result'\n       - 'result.sources_added | length == 0'\n       - '\"sources_removed\" in result'\n@@ -207,7 +207,7 @@\n     that:\n       - 'result.changed'\n       - 'result.state == \"present\"'\n-      - 'result.repo == \"{{test_ppa_spec}}\"'\n+      - 'result.repo == test_ppa_spec'\n \n - name: 'examine source file'\n   stat: path='/etc/apt/sources.list.d/{{test_ppa_filename}}.list'"
        },
        {
            "filename": "test/integration/targets/assert/assert.out.nested_tmpl.stderr",
            "diff": "@@ -0,0 +1,4 @@\n++ ansible-playbook -i localhost, -c local nested_tmpl.yml\n+++ set +x\n+[WARNING]: conditional statements should not include jinja2 templating\n+delimiters such as {{ }} or {% %}. Found: \"{{ foo }}\" == \"bar\""
        },
        {
            "filename": "test/integration/targets/assert/assert.out.nested_tmpl.stdout",
            "diff": "@@ -0,0 +1,12 @@\n+\n+PLAY [localhost] ***************************************************************\n+\n+TASK [assert] ******************************************************************\n+ok: [localhost] => {\n+    \"changed\": false,\n+    \"msg\": \"All assertions passed\"\n+}\n+\n+PLAY RECAP *********************************************************************\n+localhost                  : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n+"
        },
        {
            "filename": "test/integration/targets/assert/nested_tmpl.yml",
            "diff": "@@ -0,0 +1,9 @@\n+- hosts: localhost\n+  gather_facts: False\n+  tasks:\n+    - assert:\n+        that:\n+          - '\"{{ foo }}\" == \"bar\"'\n+          - foo == \"bar\"\n+      vars:\n+        foo: bar"
        },
        {
            "filename": "test/integration/targets/assert/quiet.yml",
            "diff": "@@ -5,12 +5,12 @@\n     item_A: yes\n   tasks:\n   - assert:\n-      that: \"{{ item }} is defined\"\n+      that: \"item is defined\"\n       quiet: True\n     with_items:\n       - item_A\n   - assert:\n-      that: \"{{ item }} is defined\"\n+      that: \"item is defined\"\n       quiet: False\n     with_items:\n       - item_A"
        },
        {
            "filename": "test/integration/targets/assert/runme.sh",
            "diff": "@@ -45,7 +45,7 @@ cleanup() {\n    fi\n }\n \n-BASEFILE=assert_quiet.out\n+BASEFILE=assert.out\n \n ORIGFILE=\"${BASEFILE}\"\n OUTFILE=\"${BASEFILE}.new\"\n@@ -69,3 +69,4 @@ export ANSIBLE_NOCOLOR=1\n export ANSIBLE_RETRY_FILES_ENABLED=0\n \n run_test quiet\n+run_test nested_tmpl"
        },
        {
            "filename": "test/integration/targets/command_shell/tasks/main.yml",
            "diff": "@@ -320,7 +320,7 @@\n   assert:\n     that:\n     - shell_result0 is changed\n-    - shell_result0.cmd == '{{ remote_tmp_dir_test }}/test.sh'\n+    - shell_result0.cmd == remote_tmp_dir_test ~ '/test.sh'\n     - shell_result0.rc == 0\n     - shell_result0.stderr == ''\n     - shell_result0.stdout == 'win'"
        },
        {
            "filename": "test/integration/targets/copy/tasks/tests.yml",
            "diff": "@@ -1250,7 +1250,7 @@\n   assert:\n     that:\n       - \"copy_result6.changed\"\n-      - \"copy_result6.dest == '{{remote_dir_expanded}}/multiline.txt'\"\n+      - \"copy_result6.dest == remote_dir_expanded ~ '/multiline.txt'\"\n       - \"copy_result6.checksum == '9cd0697c6a9ff6689f0afb9136fa62e0b3fee903'\"\n \n # test overwriting a file as an unprivileged user (pull request #8624)\n@@ -2153,26 +2153,26 @@\n     assert:\n       that:\n       - testcase5 is changed\n-      - \"stat_new_dir_with_chown.stat.uid == {{ ansible_copy_test_user.uid }}\"\n-      - \"stat_new_dir_with_chown.stat.gid == {{ ansible_copy_test_group.gid }}\"\n-      - \"stat_new_dir_with_chown.stat.pw_name == '{{ ansible_copy_test_user_name }}'\"\n-      - \"stat_new_dir_with_chown.stat.gr_name == '{{ ansible_copy_test_user_name }}'\"\n-      - \"stat_new_dir_with_chown_file1.stat.uid == {{ ansible_copy_test_user.uid }}\"\n-      - \"stat_new_dir_with_chown_file1.stat.gid == {{ ansible_copy_test_group.gid }}\"\n-      - \"stat_new_dir_with_chown_file1.stat.pw_name == '{{ ansible_copy_test_user_name }}'\"\n-      - \"stat_new_dir_with_chown_file1.stat.gr_name == '{{ ansible_copy_test_user_name }}'\"\n-      - \"stat_new_dir_with_chown_subdir.stat.uid == {{ ansible_copy_test_user.uid }}\"\n-      - \"stat_new_dir_with_chown_subdir.stat.gid == {{ ansible_copy_test_group.gid }}\"\n-      - \"stat_new_dir_with_chown_subdir.stat.pw_name == '{{ ansible_copy_test_user_name }}'\"\n-      - \"stat_new_dir_with_chown_subdir.stat.gr_name == '{{ ansible_copy_test_user_name }}'\"\n-      - \"stat_new_dir_with_chown_subdir_file12.stat.uid == {{ ansible_copy_test_user.uid }}\"\n-      - \"stat_new_dir_with_chown_subdir_file12.stat.gid == {{ ansible_copy_test_group.gid }}\"\n-      - \"stat_new_dir_with_chown_subdir_file12.stat.pw_name == '{{ ansible_copy_test_user_name }}'\"\n-      - \"stat_new_dir_with_chown_subdir_file12.stat.gr_name == '{{ ansible_copy_test_user_name }}'\"\n-      - \"stat_new_dir_with_chown_link_file12.stat.uid == {{ ansible_copy_test_user.uid }}\"\n-      - \"stat_new_dir_with_chown_link_file12.stat.gid == {{ ansible_copy_test_group.gid }}\"\n-      - \"stat_new_dir_with_chown_link_file12.stat.pw_name == '{{ ansible_copy_test_user_name }}'\"\n-      - \"stat_new_dir_with_chown_link_file12.stat.gr_name == '{{ ansible_copy_test_user_name }}'\"\n+      - \"stat_new_dir_with_chown.stat.uid == ansible_copy_test_user.uid\"\n+      - \"stat_new_dir_with_chown.stat.gid == ansible_copy_test_group.gid\"\n+      - \"stat_new_dir_with_chown.stat.pw_name == ansible_copy_test_user_name\"\n+      - \"stat_new_dir_with_chown.stat.gr_name == ansible_copy_test_user_name\"\n+      - \"stat_new_dir_with_chown_file1.stat.uid == ansible_copy_test_user.uid\"\n+      - \"stat_new_dir_with_chown_file1.stat.gid == ansible_copy_test_group.gid\"\n+      - \"stat_new_dir_with_chown_file1.stat.pw_name == ansible_copy_test_user_name\"\n+      - \"stat_new_dir_with_chown_file1.stat.gr_name == ansible_copy_test_user_name\"\n+      - \"stat_new_dir_with_chown_subdir.stat.uid == ansible_copy_test_user.uid\"\n+      - \"stat_new_dir_with_chown_subdir.stat.gid == ansible_copy_test_group.gid\"\n+      - \"stat_new_dir_with_chown_subdir.stat.pw_name == ansible_copy_test_user_name\"\n+      - \"stat_new_dir_with_chown_subdir.stat.gr_name == ansible_copy_test_user_name\"\n+      - \"stat_new_dir_with_chown_subdir_file12.stat.uid == ansible_copy_test_user.uid\"\n+      - \"stat_new_dir_with_chown_subdir_file12.stat.gid == ansible_copy_test_group.gid\"\n+      - \"stat_new_dir_with_chown_subdir_file12.stat.pw_name == ansible_copy_test_user_name\"\n+      - \"stat_new_dir_with_chown_subdir_file12.stat.gr_name == ansible_copy_test_user_name\"\n+      - \"stat_new_dir_with_chown_link_file12.stat.uid == ansible_copy_test_user.uid\"\n+      - \"stat_new_dir_with_chown_link_file12.stat.gid == ansible_copy_test_group.gid\"\n+      - \"stat_new_dir_with_chown_link_file12.stat.pw_name == ansible_copy_test_user_name\"\n+      - \"stat_new_dir_with_chown_link_file12.stat.gr_name == ansible_copy_test_user_name\"\n \n   always:\n     - name: execute - remove the user for test"
        },
        {
            "filename": "test/integration/targets/debug/runme.sh",
            "diff": "@@ -18,3 +18,5 @@ done\n \n # ensure debug does not set top level vars when looking at ansible_facts\n ansible-playbook nosetfacts.yml \"$@\"\n+\n+ansible-playbook unsafe.yml \"$@\""
        },
        {
            "filename": "test/integration/targets/debug/unsafe.yml",
            "diff": "@@ -0,0 +1,13 @@\n+- hosts: localhost\n+  gather_facts: false\n+  vars:\n+    unsafe_var: !unsafe undef()|mandatory\n+  tasks:\n+    - debug:\n+        var: '{{ unsafe_var }}'\n+      ignore_errors: true\n+      register: result\n+\n+    - assert:\n+        that:\n+          - result is successful"
        },
        {
            "filename": "test/integration/targets/expect/tasks/main.yml",
            "diff": "@@ -117,7 +117,7 @@\n - name: assert chdir works\n   assert:\n     that:\n-    - \"'{{chdir_result.stdout | trim}}' == '{{remote_tmp_dir_real_path.stdout | trim}}'\"\n+    - \"chdir_result.stdout | trim == remote_tmp_dir_real_path.stdout | trim\"\n \n - name: test timeout option\n   expect:"
        },
        {
            "filename": "test/integration/targets/file/tasks/main.yml",
            "diff": "@@ -927,7 +927,7 @@\n     that:\n       - \"file_error3 is failed\"\n       - \"file_error3.msg == 'src does not exist'\"\n-      - \"file_error3.dest == '{{ remote_tmp_dir_test }}/hard.txt' | expanduser\"\n+      - \"file_error3.dest == remote_tmp_dir_test | expanduser ~ '/hard.txt'\"\n       - \"file_error3.src == 'non-existing-file-that-does-not-exist.txt'\"\n \n - block:"
        },
        {
            "filename": "test/integration/targets/file/tasks/state_link.yml",
            "diff": "@@ -199,7 +199,7 @@\n       - \"missing_dst_no_follow_enable_force_use_mode2 is changed\"\n       - \"missing_dst_no_follow_enable_force_use_mode3 is not changed\"\n       - \"soft3_result['stat'].islnk\"\n-      - \"soft3_result['stat'].lnk_target == '{{ user.home\u00a0}}/nonexistent'\"\n+      - \"soft3_result['stat'].lnk_target == user.home\u00a0~ '/nonexistent'\"\n \n #\n # Test creating a link to a directory https://github.com/ansible/ansible/issues/1369"
        },
        {
            "filename": "test/integration/targets/find/tasks/main.yml",
            "diff": "@@ -267,7 +267,7 @@\n - name: assert we skipped the ogg file\n   assert:\n     that:\n-      - '\"{{ remote_tmp_dir_test }}/e/f/g/h/8.ogg\" not in find_test3_list'\n+      - 'remote_tmp_dir_test ~ \"/e/f/g/h/8.ogg\" not in find_test3_list'\n \n - name: patterns with regex\n   find:\n@@ -317,7 +317,7 @@\n   assert:\n     that:\n       - result.matched == 1\n-      - '\"{{ remote_tmp_dir_test }}/astest/old.txt\" in astest_list'\n+      - 'remote_tmp_dir_test ~ \"/astest/old.txt\" in astest_list'\n \n - name: find files newer than 1 week\n   find:\n@@ -332,7 +332,7 @@\n   assert:\n     that:\n       - result.matched == 1\n-      - '\"{{ remote_tmp_dir_test }}/astest/new.txt\" in astest_list'\n+      - 'remote_tmp_dir_test ~ \"/astest/new.txt\" in astest_list'\n \n - name: add some content to the new file\n   shell: \"echo hello world > {{ remote_tmp_dir_test }}/astest/new.txt\"\n@@ -352,7 +352,7 @@\n   assert:\n     that:\n       - result.matched == 1\n-      - '\"{{ remote_tmp_dir_test }}/astest/new.txt\" in astest_list'\n+      - 'remote_tmp_dir_test ~ \"/astest/new.txt\" in astest_list'\n       - '\"checksum\" in result.files[0]'\n \n - name: find ANY item with LESS than 5 bytes, also get checksums\n@@ -371,8 +371,8 @@\n   assert:\n     that:\n       - result.matched == 2\n-      - '\"{{ remote_tmp_dir_test }}/astest/old.txt\" in astest_list'\n-      - '\"{{ remote_tmp_dir_test }}/astest/.hidden.txt\" in astest_list'\n+      - 'remote_tmp_dir_test ~ \"/astest/old.txt\" in astest_list'\n+      - 'remote_tmp_dir_test ~ \"/astest/.hidden.txt\" in astest_list'\n       - '\"checksum\" in result.files[0]'\n \n - name: Run mode tests"
        },
        {
            "filename": "test/integration/targets/find/tasks/mode.yml",
            "diff": "@@ -61,7 +61,7 @@\n - assert:\n     that:\n       - exact_mode_0644.files == exact_mode_0644_symbolic.files\n-      - exact_mode_0644.files[0].path == '{{ remote_tmp_dir_test }}/mode_0644'\n+      - exact_mode_0644.files[0].path == remote_tmp_dir_test ~ '/mode_0644'\n       - user_readable_octal.files == user_readable_symbolic.files\n       - user_readable_octal.files|map(attribute='path')|map('basename')|sort == ['mode_0400', 'mode_0444', 'mode_0644', 'mode_0666', 'mode_0700']\n       - other_readable_octal.files == other_readable_symbolic.files"
        },
        {
            "filename": "test/integration/targets/gathering_facts/test_gathering_facts.yml",
            "diff": "@@ -433,7 +433,7 @@\n     - name: Test reading facts from default fact_path\n       assert:\n         that:\n-          - '\"{{ ansible_local.testfact.fact_dir }}\" == \"default\"'\n+          - 'ansible_local.testfact.fact_dir == \"default\"'\n \n - hosts: facthost9\n   tags: [ 'fact_local']\n@@ -444,7 +444,7 @@\n     - name: Test reading facts from custom fact_path\n       assert:\n         that:\n-          - '\"{{ ansible_local.testfact.fact_dir }}\" == \"custom\"'\n+          - 'ansible_local.testfact.fact_dir == \"custom\"'\n \n - hosts: facthost20\n   tags: [ 'fact_facter_ohai' ]"
        },
        {
            "filename": "test/integration/targets/git/tasks/depth.yml",
            "diff": "@@ -172,7 +172,7 @@\n - name: DEPTH | check update arrived\n   assert:\n     that:\n-      - \"{{ a_file.content | b64decode | trim }} == 3\"\n+      - a_file.content | b64decode | trim == \"3\"\n       - git_fetch is changed\n \n - name: DEPTH | clear checkout_dir"
        },
        {
            "filename": "test/integration/targets/git/tasks/localmods.yml",
            "diff": "@@ -58,7 +58,7 @@\n - name: LOCALMODS | check update arrived\n   assert:\n     that:\n-      - \"{{ a_file.content | b64decode | trim }} == 2\"\n+      - a_file.content | b64decode | trim == \"2\"\n       - git_fetch_force is changed\n \n - name: LOCALMODS | clear checkout_dir\n@@ -127,7 +127,7 @@\n - name: LOCALMODS | check update arrived\n   assert:\n     that:\n-      - \"{{ a_file.content | b64decode | trim }} == 2\"\n+      - a_file.content | b64decode | trim == \"2\"\n       - git_fetch_force is changed\n \n - name: LOCALMODS | clear checkout_dir"
        },
        {
            "filename": "test/integration/targets/git/tasks/submodules.yml",
            "diff": "@@ -32,7 +32,7 @@\n \n - name: SUBMODULES | Ensure submodu1 is at the appropriate commit\n   assert:\n-    that: '{{ submodule1.stdout_lines | length }} == 2'\n+    that: 'submodule1.stdout_lines | length == 2'\n \n - name: SUBMODULES | clear checkout_dir\n   file:\n@@ -53,7 +53,7 @@\n \n - name: SUBMODULES | Ensure submodule1 is at the appropriate commit\n   assert:\n-    that: '{{ submodule1.stdout_lines | length }} == 4'\n+    that: 'submodule1.stdout_lines | length == 4'\n \n - name: SUBMODULES | Copy the checkout so we can run several different tests on it\n   command: 'cp -pr {{ checkout_dir }} {{ checkout_dir }}.bak'\n@@ -84,8 +84,8 @@\n - name: SUBMODULES | Ensure both submodules are at the appropriate commit\n   assert:\n     that:\n-      - '{{ submodule1.stdout_lines|length }} == 4'\n-      - '{{ submodule2.stdout_lines|length }} == 2'\n+      - 'submodule1.stdout_lines|length == 4'\n+      - 'submodule2.stdout_lines|length == 2'\n \n \n - name: SUBMODULES | Remove checkout dir\n@@ -112,7 +112,7 @@\n \n - name: SUBMODULES | Ensure submodule1 is at the appropriate commit\n   assert:\n-    that: '{{ submodule1.stdout_lines | length }} == 5'\n+    that: 'submodule1.stdout_lines | length == 5'\n \n \n - name: SUBMODULES | Test that update with recursive found new submodules\n@@ -121,7 +121,7 @@\n \n - name: SUBMODULES | Enusre submodule2 is at the appropriate commit\n   assert:\n-    that: '{{ submodule2.stdout_lines | length }} == 4'\n+    that: 'submodule2.stdout_lines | length == 4'\n \n - name: SUBMODULES | clear checkout_dir\n   file:\n@@ -147,4 +147,4 @@\n \n - name: SUBMODULES | Ensure submodule1 is at the appropriate commit\n   assert:\n-    that: '{{ submodule1.stdout_lines | length }} == 4'\n+    that: 'submodule1.stdout_lines | length == 4'"
        },
        {
            "filename": "test/integration/targets/incidental_vyos_config/tests/cli/check_config.yaml",
            "diff": "@@ -22,7 +22,7 @@\n - name: Check that multiple duplicate lines collapse into a single commands\n   assert:\n     that:\n-      - \"{{ result.commands|length }} == 1\"\n+      - \"result.commands|length == 1\"\n \n - name: Check that set is correctly prepended\n   assert:\n@@ -58,6 +58,6 @@\n \n - assert:\n     that:\n-      - \"{{ result.filtered|length }} == 2\"\n+      - \"result.filtered|length == 2\"\n \n - debug: msg=\"END cli/config_check.yaml on connection={{ ansible_connection }}\""
        },
        {
            "filename": "test/integration/targets/incidental_vyos_lldp_interfaces/tests/cli/deleted.yaml",
            "diff": "@@ -16,17 +16,17 @@\n     - name: Assert that the before dicts were correctly generated\n       assert:\n         that:\n-          - \"{{ populate | symmetric_difference(result['before']) |length == 0 }}\"\n+          - \"populate | symmetric_difference(result['before']) |length == 0\"\n \n     - name: Assert that the correct set of commands were generated\n       assert:\n         that:\n-          - \"{{ deleted['commands'] | symmetric_difference(result['commands']) |length == 0 }}\"\n+          - \"deleted['commands'] | symmetric_difference(result['commands']) |length == 0\"\n \n     - name: Assert that the after dicts were correctly generated\n       assert:\n         that:\n-          - \"{{ deleted['after'] | symmetric_difference(result['after']) |length == 0 }}\"\n+          - \"deleted['after'] | symmetric_difference(result['after']) |length == 0\"\n \n     - name: Delete attributes of given interfaces (IDEMPOTENT)\n       vyos.vyos.vyos_lldp_interfaces: *deleted\n@@ -41,6 +41,6 @@\n     - name: Assert that the before dicts were correctly generated\n       assert:\n         that:\n-          - \"{{ deleted['after'] | symmetric_difference(result['before']) |length == 0 }}\"\n+          - \"deleted['after'] | symmetric_difference(result['before']) |length == 0\"\n   always:\n     - include_tasks: _remove_config.yaml"
        },
        {
            "filename": "test/integration/targets/incidental_vyos_lldp_interfaces/tests/cli/merged.yaml",
            "diff": "@@ -28,17 +28,17 @@\n \n     - name: Assert that before dicts were correctly generated\n       assert:\n-        that: \"{{ merged['before'] | symmetric_difference(result['before']) |length == 0 }}\"\n+        that: \"merged['before'] | symmetric_difference(result['before']) |length == 0\"\n \n     - name: Assert that correct set of commands were generated\n       assert:\n         that:\n-          - \"{{ merged['commands'] | symmetric_difference(result['commands']) |length == 0 }}\"\n+          - \"merged['commands'] | symmetric_difference(result['commands']) |length == 0\"\n \n     - name: Assert that after dicts was correctly generated\n       assert:\n         that:\n-          - \"{{ merged['after'] | symmetric_difference(result['after']) |length == 0 }}\"\n+          - \"merged['after'] | symmetric_difference(result['after']) |length == 0\"\n \n     - name: Merge the provided configuration with the existing running configuration (IDEMPOTENT)\n       vyos.vyos.vyos_lldp_interfaces: *merged\n@@ -52,7 +52,7 @@\n     - name: Assert that before dicts were correctly generated\n       assert:\n         that:\n-          - \"{{ merged['after'] | symmetric_difference(result['before']) |length == 0 }}\"\n+          - \"merged['after'] | symmetric_difference(result['before']) |length == 0\"\n \n   always:\n     - include_tasks: _remove_config.yaml"
        },
        {
            "filename": "test/integration/targets/incidental_vyos_lldp_interfaces/tests/cli/overridden.yaml",
            "diff": "@@ -19,17 +19,17 @@\n     - name: Assert that before dicts were correctly generated\n       assert:\n         that:\n-          - \"{{ populate_intf | symmetric_difference(result['before']) |length == 0 }}\"\n+          - \"populate_intf | symmetric_difference(result['before']) |length == 0\"\n \n     - name: Assert that correct commands were generated\n       assert:\n         that:\n-          - \"{{ overridden['commands'] | symmetric_difference(result['commands']) |length == 0 }}\"\n+          - \"overridden['commands'] | symmetric_difference(result['commands']) |length == 0\"\n \n     - name: Assert that after dicts were correctly generated\n       assert:\n         that:\n-          - \"{{ overridden['after'] | symmetric_difference(result['after']) |length == 0 }}\"\n+          - \"overridden['after'] | symmetric_difference(result['after']) |length == 0\"\n \n     - name: Overrides all device configuration with provided configurations (IDEMPOTENT)\n       vyos.vyos.vyos_lldp_interfaces: *overridden\n@@ -43,7 +43,7 @@\n     - name: Assert that before dicts were correctly generated\n       assert:\n         that:\n-          - \"{{ overridden['after'] | symmetric_difference(result['before']) |length == 0 }}\"\n+          - \"overridden['after'] | symmetric_difference(result['before']) |length == 0\"\n \n   always:\n     - include_tasks: _remove_config.yaml"
        },
        {
            "filename": "test/integration/targets/incidental_vyos_lldp_interfaces/tests/cli/replaced.yaml",
            "diff": "@@ -33,17 +33,17 @@\n     - name: Assert that correct set of commands were generated\n       assert:\n         that:\n-          - \"{{ replaced['commands'] | symmetric_difference(result['commands']) |length == 0 }}\"\n+          - \"replaced['commands'] | symmetric_difference(result['commands']) |length == 0\"\n \n     - name: Assert that before dicts are correctly generated\n       assert:\n         that:\n-          - \"{{ populate | symmetric_difference(result['before']) |length == 0 }}\"\n+          - \"populate | symmetric_difference(result['before']) |length == 0\"\n \n     - name: Assert that after dict is correctly generated\n       assert:\n         that:\n-          - \"{{ replaced['after'] | symmetric_difference(result['after']) |length == 0 }}\"\n+          - \"replaced['after'] | symmetric_difference(result['after']) |length == 0\"\n \n     - name: Replace device configurations of listed LLDP interfaces with provided configurarions (IDEMPOTENT)\n       vyos.vyos.vyos_lldp_interfaces: *replaced\n@@ -57,7 +57,7 @@\n     - name: Assert that before dict is correctly generated\n       assert:\n         that:\n-          - \"{{ replaced['after'] | symmetric_difference(result['before']) |length == 0 }}\"\n+          - \"replaced['after'] | symmetric_difference(result['before']) |length == 0\"\n \n   always:\n     - include_tasks: _remove_config.yaml"
        },
        {
            "filename": "test/integration/targets/include_vars/tasks/main.yml",
            "diff": "@@ -15,7 +15,7 @@\n     that:\n       - \"testing == 789\"\n       - \"base_dir == 'environments/development'\"\n-      - \"{{ included_one_file.ansible_included_var_files\u00a0| length }} == 1\"\n+      - \"included_one_file.ansible_included_var_files\u00a0| length == 1\"\n       - \"'vars/environments/development/all.yml' in included_one_file.ansible_included_var_files[0]\"\n \n - name: include the vars/environments/development/all.yml and save results in all\n@@ -51,7 +51,7 @@\n   assert:\n     that:\n       - webapp_version is defined\n-      - \"'file_without_extension' in '{{ include_without_file_extension.ansible_included_var_files | join(' ') }}'\"\n+      - \"'file_without_extension' in include_without_file_extension.ansible_included_var_files | join(' ')\"\n \n - name: include every directory in vars\n   include_vars:\n@@ -67,7 +67,7 @@\n       - \"testing == 456\"\n       - \"base_dir == 'services'\"\n       - \"webapp_containers == 10\"\n-      - \"{{ include_every_dir.ansible_included_var_files\u00a0| length }} == 7\"\n+      - \"include_every_dir.ansible_included_var_files\u00a0| length == 7\"\n       - \"'vars/all/all.yml' in include_every_dir.ansible_included_var_files[0]\"\n       - \"'vars/environments/development/all.yml' in include_every_dir.ansible_included_var_files[1]\"\n       - \"'vars/environments/development/services/webapp.yml' in include_every_dir.ansible_included_var_files[2]\"\n@@ -88,9 +88,9 @@\n     that:\n       - \"testing == 789\"\n       - \"base_dir == 'environments/development'\"\n-      - \"{{ include_without_webapp.ansible_included_var_files\u00a0| length }} == 4\"\n-      - \"'webapp.yml' not in '{{ include_without_webapp.ansible_included_var_files | join(' ') }}'\"\n-      - \"'file_without_extension' not in '{{ include_without_webapp.ansible_included_var_files | join(' ') }}'\"\n+      - \"include_without_webapp.ansible_included_var_files\u00a0| length == 4\"\n+      - \"'webapp.yml' not in include_without_webapp.ansible_included_var_files | join(' ')\"\n+      - \"'file_without_extension' not in include_without_webapp.ansible_included_var_files | join(' ')\"\n \n - name: include only files matching webapp.yml\n   include_vars:\n@@ -104,9 +104,9 @@\n       - \"testing == 101112\"\n       - \"base_dir == 'development/services'\"\n       - \"webapp_containers == 20\"\n-      - \"{{ include_match_webapp.ansible_included_var_files\u00a0| length }} == 1\"\n+      - \"include_match_webapp.ansible_included_var_files\u00a0| length == 1\"\n       - \"'vars/environments/development/services/webapp.yml' in include_match_webapp.ansible_included_var_files[0]\"\n-      - \"'all.yml' not in '{{ include_match_webapp.ansible_included_var_files | join(' ') }}'\"\n+      - \"'all.yml' not in include_match_webapp.ansible_included_var_files | join(' ')\"\n \n - name: include only files matching webapp.yml and store results in webapp\n   include_vars:\n@@ -173,10 +173,10 @@\n - name: Verify the hash variable\n   assert:\n     that:\n-      - \"{{ config | length }} == 3\"\n+      - \"config | length == 3\"\n       - \"config.key0 == 0\"\n       - \"config.key1 == 0\"\n-      - \"{{ config.key2 | length }} == 1\"\n+      - \"config.key2 | length == 1\"\n       - \"config.key2.a == 21\"\n \n - name: Include the second file to merge the hash variable\n@@ -187,10 +187,10 @@\n - name: Verify that the hash is merged\n   assert:\n     that:\n-      - \"{{ config | length }} == 4\"\n+      - \"config | length == 4\"\n       - \"config.key0 == 0\"\n       - \"config.key1 == 1\"\n-      - \"{{ config.key2 | length }} == 2\"\n+      - \"config.key2 | length == 2\"\n       - \"config.key2.a == 21\"\n       - \"config.key2.b == 22\"\n       - \"config.key3 == 3\"\n@@ -202,9 +202,9 @@\n - name: Verify that the properties from the first file is cleared\n   assert:\n     that:\n-      - \"{{ config | length }} == 3\"\n+      - \"config | length == 3\"\n       - \"config.key1 == 1\"\n-      - \"{{ config.key2 | length }} == 1\"\n+      - \"config.key2 | length == 1\"\n       - \"config.key2.b == 22\"\n       - \"config.key3 == 3\"\n \n@@ -216,10 +216,10 @@\n - name: Verify that the hash is merged after vars files are accumulated\n   assert:\n     that:\n-      - \"{{ config | length }} == 3\"\n+      - \"config | length == 3\"\n       - \"config.key0 is undefined\"\n       - \"config.key1 == 1\"\n-      - \"{{ config.key2 | length }} == 1\"\n+      - \"config.key2 | length == 1\"\n       - \"config.key2.b == 22\"\n       - \"config.key3 == 3\"\n "
        },
        {
            "filename": "test/integration/targets/lookup_first_found/tasks/main.yml",
            "diff": "@@ -109,8 +109,8 @@\n   - name: Load variables specific for OS family\n     assert:\n       that:\n-        - \"{{item|quote}} is file\"\n-        - \"{{item|basename == 'itworks.yml'}}\"\n+        - \"item is file\"\n+        - \"item|basename == 'itworks.yml'\"\n     with_first_found:\n       - files:\n           - \"{{ansible_id}}-{{ansible_lsb.major_release}}.yml\"  # invalid var, should be skipped\n@@ -124,8 +124,8 @@\n   - name: Load variables specific for OS family, but now as list of dicts, same options as above\n     assert:\n       that:\n-        - \"{{item|quote}} is file\"\n-        - \"{{item|basename == 'itworks.yml'}}\"\n+        - \"item is file\"\n+        - \"item|basename == 'itworks.yml'\"\n     with_first_found:\n       - files:\n           - \"{{ansible_id}}-{{ansible_lsb.major_release}}.yml\""
        },
        {
            "filename": "test/integration/targets/lookup_ini/test_lookup_properties.yml",
            "diff": "@@ -10,7 +10,7 @@\n         field_with_space: \"{{lookup('ini', 'field.with.space  type=properties  file=lookup.properties')}}\"\n \n     - assert:\n-        that: \"{{item}} is defined\"\n+        that: \"item is defined\"\n       with_items: [ 'test1', 'test2', 'test_dot', 'field_with_space' ]\n \n     - name: \"read ini value\""
        },
        {
            "filename": "test/integration/targets/lookup_subelements/tasks/main.yml",
            "diff": "@@ -133,7 +133,7 @@\n \n - assert:\n     that:\n-      - \"'{{ item.0.name }}' != 'carol'\"\n+      - \"item.0.name != 'carol'\"\n   with_subelements:\n     - \"{{ users }}\"\n     - mysql.privs\n@@ -220,5 +220,5 @@\n \n - assert:\n     that:\n-      - \"'{{ user_alice }}' == 'localhost'\"\n-      - \"'{{ user_bob }}' == 'db1'\"\n+      - \"user_alice == 'localhost'\"\n+      - \"user_bob == 'db1'\""
        },
        {
            "filename": "test/integration/targets/loop_control/inner.yml",
            "diff": "@@ -3,7 +3,7 @@\n     that:\n       - ansible_loop.index == ansible_loop.index0 + 1\n       - ansible_loop.revindex == ansible_loop.revindex0 + 1\n-      - ansible_loop.first == {{ ansible_loop.index == 1 }}\n-      - ansible_loop.last == {{ ansible_loop.index == ansible_loop.length }}\n+      - ansible_loop.first == (ansible_loop.index == 1)\n+      - ansible_loop.last == (ansible_loop.index == ansible_loop.length)\n       - ansible_loop.length == 3\n       - ansible_loop.allitems|join(',') == 'first,second,third'"
        },
        {
            "filename": "test/integration/targets/module_precedence/modules_test_multiple_roles.yml",
            "diff": "@@ -14,4 +14,4 @@\n   - assert:\n       that:\n         - '\"location\" in result'\n-        - 'result[\"location\"] == \"{{ expected_location}}\"'\n+        - 'result[\"location\"] == expected_location'"
        },
        {
            "filename": "test/integration/targets/module_precedence/modules_test_multiple_roles_reverse_order.yml",
            "diff": "@@ -13,4 +13,4 @@\n   - assert:\n       that:\n         - '\"location\" in result'\n-        - 'result[\"location\"] == \"{{ expected_location}}\"'\n+        - 'result[\"location\"] == expected_location'"
        },
        {
            "filename": "test/integration/targets/module_precedence/multiple_roles/bar/tasks/main.yml",
            "diff": "@@ -7,4 +7,4 @@\n   assert:\n     that:\n       - '\"location\" in result'\n-      - 'result[\"location\"] == \"{{ expected_location }}\"'\n+      - 'result[\"location\"] == expected_location'"
        },
        {
            "filename": "test/integration/targets/module_precedence/multiple_roles/foo/tasks/main.yml",
            "diff": "@@ -7,4 +7,4 @@\n   assert:\n     that:\n       - '\"location\" in result'\n-      - 'result[\"location\"] == \"{{ expected_location }}\"'\n+      - 'result[\"location\"] == expected_location'"
        },
        {
            "filename": "test/integration/targets/script/tasks/main.yml",
            "diff": "@@ -209,7 +209,7 @@\n   assert:\n     that:\n       - _check_mode_test2 is skipped\n-      - '_check_mode_test2.msg == \"{{ remote_tmp_dir_test | expanduser }}/afile2.txt exists, matching creates option\"'\n+      - '_check_mode_test2.msg == remote_tmp_dir_test | expanduser ~ \"/afile2.txt exists, matching creates option\"'\n \n - name: Remove afile2.txt\n   file:\n@@ -231,7 +231,7 @@\n   assert:\n     that:\n       - _check_mode_test3 is skipped\n-      - '_check_mode_test3.msg == \"{{ remote_tmp_dir_test | expanduser }}/afile2.txt does not exist, matching removes option\"'\n+      - '_check_mode_test3.msg == remote_tmp_dir_test | expanduser ~ \"/afile2.txt does not exist, matching removes option\"'\n \n # executable\n "
        },
        {
            "filename": "test/integration/targets/slurp/tasks/main.yml",
            "diff": "@@ -33,7 +33,7 @@\n       - 'slurp_existing.encoding == \"base64\"'\n       - 'slurp_existing is not changed'\n       - 'slurp_existing is not failed'\n-      - '\"{{ slurp_existing.content | b64decode }}\" == \"We are at the caf\u00e9\"'\n+      - 'slurp_existing.content | b64decode == \"We are at the caf\u00e9\"'\n \n - name: Create a binary file to test with\n   copy:"
        },
        {
            "filename": "test/integration/targets/template/tasks/main.yml",
            "diff": "@@ -357,7 +357,7 @@\n - assert:\n     that:\n       - \"\\\"foo t'e~m\\\\plated\\\" in unusual_results.stdout_lines\"\n-      - \"{{unusual_results.stdout_lines| length}} == 1\"\n+      - \"unusual_results.stdout_lines| length == 1\"\n \n - name: check that the unusual filename can be checked for changes\n   template:"
        },
        {
            "filename": "test/integration/targets/unarchive/tasks/test_missing_binaries.yml",
            "diff": "@@ -66,7 +66,7 @@\n           - zip_success.changed\n           # Verify that file list is generated\n           - \"'files' in zip_success\"\n-          - \"{{zip_success['files']| length}} == 3\"\n+          - \"zip_success['files']| length == 3\"\n           - \"'foo-unarchive.txt' in zip_success['files']\"\n           - \"'foo-unarchive-777.txt' in zip_success['files']\"\n           - \"'FOO-UNAR.TXT' in zip_success['files']\""
        },
        {
            "filename": "test/integration/targets/unarchive/tasks/test_mode.yml",
            "diff": "@@ -47,7 +47,7 @@\n       - \"unarchive06_stat.stat.mode == '0600'\"\n       # Verify that file list is generated\n       - \"'files' in unarchive06\"\n-      - \"{{unarchive06['files']| length}} == 1\"\n+      - \"unarchive06['files']| length == 1\"\n       - \"'foo-unarchive.txt' in unarchive06['files']\"\n \n - name: remove our tar.gz unarchive destination\n@@ -97,7 +97,7 @@\n       - \"unarchive07.changed == false\"\n       # Verify that file list is generated\n       - \"'files' in unarchive07\"\n-      - \"{{unarchive07['files']| length}} == 1\"\n+      - \"unarchive07['files']| length == 1\"\n       - \"'foo-unarchive.txt' in unarchive07['files']\"\n \n - name: remove our tar.gz unarchive destination\n@@ -131,7 +131,7 @@\n       - \"unarchive08_stat.stat.mode == '0601'\"\n       # Verify that file list is generated\n       - \"'files' in unarchive08\"\n-      - \"{{unarchive08['files']| length}} == 3\"\n+      - \"unarchive08['files']| length == 3\"\n       - \"'foo-unarchive.txt' in unarchive08['files']\"\n       - \"'foo-unarchive-777.txt' in unarchive08['files']\"\n       - \"'FOO-UNAR.TXT' in unarchive08['files']\"\n@@ -163,7 +163,7 @@\n       - \"unarchive08_stat.stat.mode == '0601'\"\n       # Verify that file list is generated\n       - \"'files' in unarchive08\"\n-      - \"{{unarchive08['files']| length}} == 3\"\n+      - \"unarchive08['files']| length == 3\"\n       - \"'foo-unarchive.txt' in unarchive08['files']\"\n       - \"'foo-unarchive-777.txt' in unarchive08['files']\"\n       - \"'FOO-UNAR.TXT' in unarchive08['files']\""
        },
        {
            "filename": "test/integration/targets/unarchive/tasks/test_unprivileged_user.yml",
            "diff": "@@ -40,7 +40,7 @@\n           - unarchive10 is changed\n           # Verify that file list is generated\n           - \"'files' in unarchive10\"\n-          - \"{{unarchive10['files']| length}} == 1\"\n+          - \"unarchive10['files']| length == 1\"\n           - \"'foo-unarchive.txt' in unarchive10['files']\"\n           - archive_path.stat.exists\n "
        },
        {
            "filename": "test/integration/targets/unarchive/tasks/test_zip.yml",
            "diff": "@@ -17,7 +17,7 @@\n       - \"unarchive03.changed == true\"\n       # Verify that file list is generated\n       - \"'files' in unarchive03\"\n-      - \"{{unarchive03['files']| length}} == 3\"\n+      - \"unarchive03['files']| length == 3\"\n       - \"'foo-unarchive.txt' in unarchive03['files']\"\n       - \"'foo-unarchive-777.txt' in unarchive03['files']\"\n       - \"'FOO-UNAR.TXT' in unarchive03['files']\""
        },
        {
            "filename": "test/integration/targets/wait_for/tasks/main.yml",
            "diff": "@@ -40,7 +40,7 @@\n   assert:\n     that:\n       - waitfor is successful\n-      - waitfor.path == \"{{ remote_tmp_dir | expanduser }}/wait_for_file\"\n+      - waitfor.path == remote_tmp_dir | expanduser ~ \"/wait_for_file\"\n       - waitfor.elapsed >= 2\n       - waitfor.elapsed <= 15\n \n@@ -58,7 +58,7 @@\n   assert:\n     that:\n       - waitfor is successful\n-      - waitfor.path == \"{{ remote_tmp_dir | expanduser }}/wait_for_file\"\n+      - waitfor.path == remote_tmp_dir | expanduser ~ \"/wait_for_file\"\n       - waitfor.elapsed >= 2\n       - waitfor.elapsed <= 15\n \n@@ -165,7 +165,7 @@\n     that:\n       - waitfor is successful\n       - waitfor is not changed\n-      - \"waitfor.port == {{ http_port }}\"\n+      - \"waitfor.port == http_port\"\n \n - name: install psutil using pip (non-Linux only)\n   pip:\n@@ -193,7 +193,7 @@\n     that:\n       - waitfor is successful\n       - waitfor is not changed\n-      - \"waitfor.port == {{ http_port }}\"\n+      - \"waitfor.port == http_port\"\n \n - name: test wait_for with delay\n   wait_for:"
        },
        {
            "filename": "test/units/parsing/yaml/test_dumper.py",
            "diff": "@@ -27,7 +27,6 @@\n from ansible.parsing.yaml import dumper, objects\n from ansible.parsing.yaml.loader import AnsibleLoader\n from ansible.template import AnsibleUndefined\n-from ansible.utils.unsafe_proxy import AnsibleUnsafeText, AnsibleUnsafeBytes\n \n from units.mock.yaml_helper import YamlTestUtils\n from units.mock.vault_helper import TextVaultSecret\n@@ -67,8 +66,7 @@ def test_ansible_vault_encrypted_unicode(self):\n \n     def test_bytes(self):\n         b_text = u'tr\u00e9ma'.encode('utf-8')\n-        unsafe_object = AnsibleUnsafeBytes(b_text)\n-        yaml_out = self._dump_string(unsafe_object, dumper=self.dumper)\n+        yaml_out = self._dump_string(b_text, dumper=self.dumper)\n \n         stream = self._build_stream(yaml_out)\n         loader = self._loader(stream)\n@@ -81,8 +79,7 @@ def test_bytes(self):\n \n     def test_unicode(self):\n         u_text = u'n\u00f6el'\n-        unsafe_object = AnsibleUnsafeText(u_text)\n-        yaml_out = self._dump_string(unsafe_object, dumper=self.dumper)\n+        yaml_out = self._dump_string(u_text, dumper=self.dumper)\n \n         stream = self._build_stream(yaml_out)\n         loader = self._loader(stream)"
        }
    ],
    "commitTime": "2023-11-27 18:26:45"
}