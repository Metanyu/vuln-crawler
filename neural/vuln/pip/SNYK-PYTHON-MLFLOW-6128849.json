{
    "CVSSv3": {
        "CVSS": "3.1",
        "E": "P",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "privilegesRequired": "NONE",
        "userInteraction": "NONE",
        "scope": "CHANGED",
        "confidentiality": "NONE",
        "integrity": "HIGH",
        "availability": "HIGH"
    },
    "credit": [
        "kevin-mizu"
    ],
    "cvssDetails": [
        {
            "assigner": "NVD",
            "cvssV3BaseScore": 8.1,
            "cvssV3Vector": {
                "CVSS": "3.1",
                "attackVector": "NETWORK",
                "attackComplexity": "LOW",
                "privilegesRequired": "LOW",
                "userInteraction": "NONE",
                "scope": "UNCHANGED",
                "confidentiality": "NONE",
                "integrity": "HIGH",
                "availability": "HIGH"
            },
            "severity": "high"
        }
    ],
    "cvssScore": 10,
    "disclosureTime": "2023-12-15 01:46:53",
    "epssDetails": {
        "modelVersion": "v2023.03.01",
        "percentile": "0.06929",
        "probability": "0.00043"
    },
    "exploitMaturity": "Proof of Concept",
    "id": "SNYK-PYTHON-MLFLOW-6128849",
    "identifiers": {
        "CVE": [
            "CVE-2023-6831"
        ],
        "CWE": [
            "CWE-22"
        ]
    },
    "language": "python",
    "malicious": false,
    "packageManager": "pip",
    "publicationTime": "2023-12-15 13:11:20",
    "remediation": "Upgrade mlflow to version 2.9.2 or higher. ",
    "severity": "critical",
    "socialTrendAlert": false,
    "title": "Directory Traversal",
    "vulnDescription": {
        "Overview": "mlflow is a platform to streamline machine learning development, including tracking experiments, packaging code into reproducible runs, and sharing and deploying models. Affected versions of this package are vulnerable to Directory Traversal when passing crafted input to the file handling mechanism. It is possible to bypass the validate_path_is_safe function check by URL encoding (%2E%2E). Note: An attacker can remove any file on the victim server (depending on user's rights) by exploiting this vulnerability. ",
        "PoC": "curl -X DELETE 'http://127.0.0.1:5000/api/2.0/mlflow-artifacts/artifacts/%252E%252E%252F%252E%252E%252F%252E%252E%252F%252E%252E%252F%252E%252E%252F%252E%252E%252Ftmp%252Fsecret' "
    },
    "source_code": [
        {
            "filename": "mlflow/utils/uri.py",
            "diff": "@@ -427,7 +427,10 @@ def validate_path_is_safe(path):\n     \"\"\"\n     from mlflow.utils.file_utils import local_file_uri_to_path\n \n-    exc = MlflowException(f\"Invalid path: {path}\", error_code=INVALID_PARAMETER_VALUE)\n+    # We must decode URL before validating it\n+    path = urllib.parse.unquote(path)\n+\n+    exc = MlflowException(\"Invalid path\", error_code=INVALID_PARAMETER_VALUE)\n     if any((s in path) for s in (\"#\", \"%23\")):\n         raise exc\n "
        },
        {
            "filename": "tests/server/test_handlers.py",
            "diff": "@@ -38,11 +38,12 @@\n     UpdateRegisteredModel,\n )\n from mlflow.protos.service_pb2 import CreateExperiment, SearchRuns\n-from mlflow.server import BACKEND_STORE_URI_ENV_VAR, app\n+from mlflow.server import BACKEND_STORE_URI_ENV_VAR, SERVE_ARTIFACTS_ENV_VAR, app\n from mlflow.server.handlers import (\n     _create_experiment,\n     _create_model_version,\n     _create_registered_model,\n+    _delete_artifact_mlflow_artifacts,\n     _delete_model_version,\n     _delete_model_version_tag,\n     _delete_registered_model,\n@@ -105,6 +106,11 @@ def mock_model_registry_store():\n         yield mock_store\n \n \n+@pytest.fixture\n+def enable_serve_artifacts(monkeypatch):\n+    monkeypatch.setenv(SERVE_ARTIFACTS_ENV_VAR, \"true\")\n+\n+\n def test_health():\n     with app.test_client() as c:\n         response = c.get(\"/health\")\n@@ -777,3 +783,22 @@ def test_get_model_version_by_alias(mock_get_request_message, mock_model_registr\n     _, args = mock_model_registry_store.get_model_version_by_alias.call_args\n     assert args == {\"name\": name, \"alias\": alias}\n     assert json.loads(resp.get_data()) == {\"model_version\": jsonify(mvd)}\n+\n+\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        \"/path\",\n+        \"path/../to/file\",\n+        \"/etc/passwd\",\n+        \"/etc/passwd%00.jpg\",\n+        \"/file://etc/passwd\",\n+        \"%2E%2E%2F%2E%2E%2Fpath\",\n+    ],\n+)\n+def test_delete_artifact_mlflow_artifacts_throws_for_malicious_path(enable_serve_artifacts, path):\n+    response = _delete_artifact_mlflow_artifacts(path)\n+    assert response.status_code == 400\n+    json_response = json.loads(response.get_data())\n+    assert json_response[\"error_code\"] == ErrorCode.Name(INVALID_PARAMETER_VALUE)\n+    assert json_response[\"message\"] == \"Invalid path\""
        },
        {
            "filename": "tests/store/artifact/test_http_artifact_repo.py",
            "diff": "@@ -246,7 +246,7 @@ def test_list_artifacts(http_artifact_repo):\n             http_artifact_repo.list_artifacts()\n \n \n-@pytest.mark.parametrize(\"path\", [\"/tmp/path\", \"../../path\"])\n+@pytest.mark.parametrize(\"path\", [\"/tmp/path\", \"../../path\", \"%2E%2E%2Fpath\"])\n def test_list_artifacts_malicious_path(http_artifact_repo, path):\n     with mock.patch(\n         \"mlflow.store.artifact.http_artifact_repo.http_request\",\n@@ -259,7 +259,7 @@ def test_list_artifacts_malicious_path(http_artifact_repo, path):\n             200,\n         ),\n     ):\n-        with pytest.raises(MlflowException, match=f\"Invalid path: {path}\"):\n+        with pytest.raises(MlflowException, match=\"Invalid path\"):\n             http_artifact_repo.list_artifacts()\n \n "
        },
        {
            "filename": "tests/tracking/test_rest_tracking.py",
            "diff": "@@ -35,7 +35,6 @@\n )\n from mlflow.exceptions import MlflowException\n from mlflow.models import Model\n-from mlflow.server.handlers import validate_path_is_safe\n from mlflow.store.tracking.sqlalchemy_store import SqlAlchemyStore\n from mlflow.utils import mlflow_tags\n from mlflow.utils.file_utils import TempDir, path_to_local_file_uri\n@@ -514,152 +513,6 @@ def assert_bad_request(payload, expected_error_message):\n     assert response.status_code == 200\n \n \n-@pytest.mark.parametrize(\n-    \"path\",\n-    [\n-        \"path\",\n-        \"path/\",\n-        \"path/to/file\",\n-    ],\n-)\n-def test_validate_path_is_safe_good(path):\n-    validate_path_is_safe(path)\n-\n-\n-@pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")\n-@pytest.mark.parametrize(\n-    \"path\",\n-    [\n-        # relative path from current directory of C: drive\n-        \".../...//\",\n-    ],\n-)\n-def test_validate_path_is_safe_windows_good(path):\n-    validate_path_is_safe(path)\n-\n-\n-@pytest.mark.skipif(is_windows(), reason=\"This test does not pass on Windows\")\n-@pytest.mark.parametrize(\n-    \"path\",\n-    [\n-        \"/path\",\n-        \"../path\",\n-        \"../../path\",\n-        \"./../path\",\n-        \"path/../to/file\",\n-        \"path/../../to/file\",\n-        \"file://a#/..//tmp\",\n-        \"file://a%23/..//tmp/\",\n-        \"/etc/passwd\",\n-        \"/etc/passwd%00.jpg\",\n-        \"/etc/passwd%00.html\",\n-        \"/etc/passwd%00.txt\",\n-        \"/etc/passwd%00.php\",\n-        \"/etc/passwd%00.asp\",\n-        \"/file://etc/passwd\",\n-    ],\n-)\n-def test_validate_path_is_safe_bad(path):\n-    with pytest.raises(MlflowException, match=\"Invalid path\"):\n-        validate_path_is_safe(path)\n-\n-\n-@pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")\n-@pytest.mark.parametrize(\n-    \"path\",\n-    [\n-        r\"../path\",\n-        r\"../../path\",\n-        r\"./../path\",\n-        r\"path/../to/file\",\n-        r\"path/../../to/file\",\n-        r\"..\\path\",\n-        r\"..\\..\\path\",\n-        r\".\\..\\path\",\n-        r\"path\\..\\to\\file\",\n-        r\"path\\..\\..\\to\\file\",\n-        # Drive-relative paths\n-        r\"C:path\",\n-        r\"C:path/\",\n-        r\"C:path/to/file\",\n-        r\"C:../path/to/file\",\n-        r\"C:\\path\",\n-        r\"C:/path\",\n-        r\"C:\\path\\to\\file\",\n-        r\"C:\\path/to/file\",\n-        r\"C:\\path\\..\\to\\file\",\n-        r\"C:/path/../to/file\",\n-        # UNC(Universal Naming Convention) paths\n-        r\"\\\\path\\to\\file\",\n-        r\"\\\\path/to/file\",\n-        r\"\\\\.\\\\C:\\path\\to\\file\",\n-        r\"\\\\?\\C:\\path\\to\\file\",\n-        r\"\\\\?\\UNC/path/to/file\",\n-        # Other potential attackable paths\n-        r\"/etc/password\",\n-        r\"/path\",\n-        r\"/etc/passwd%00.jpg\",\n-        r\"/etc/passwd%00.html\",\n-        r\"/etc/passwd%00.txt\",\n-        r\"/etc/passwd%00.php\",\n-        r\"/etc/passwd%00.asp\",\n-        r\"/Windows/no/such/path\",\n-        r\"/file://etc/passwd\",\n-        r\"/file:c:/passwd\",\n-        r\"/file://d:/windows/win.ini\",\n-        r\"/file://./windows/win.ini\",\n-        r\"file://c:/boot.ini\",\n-        r\"file://C:path\",\n-        r\"file://C:path/\",\n-        r\"file://C:path/to/file\",\n-        r\"file:///C:/Windows/System32/\",\n-        r\"file:///etc/passwd\",\n-        r\"file:///d:/windows/repair/sam\",\n-        r\"file:///proc/version\",\n-        r\"file:///inetpub/wwwroot/global.asa\",\n-        r\"/file://../windows/win.ini\",\n-        r\"../etc/passwd\",\n-        r\"..\\Windows\\System32\\\\\",\n-        r\"C:\\Windows\\System32\\\\\",\n-        r\"/etc/passwd\",\n-        r\"::Windows\\System32\",\n-        r\"..\\..\\..\\..\\Windows\\System32\\\\\",\n-        r\"../Windows/System32\",\n-        r\"....\\\\\",\n-        r\"\\\\?\\C:\\Windows\\System32\\\\\",\n-        r\"\\\\.\\C:\\Windows\\System32\\\\\",\n-        r\"\\\\UNC\\Server\\Share\\\\\",\n-        r\"\\\\Server\\Share\\folder\\\\\",\n-        r\"\\\\127.0.0.1\\c$\\Windows\\\\\",\n-        r\"\\\\localhost\\c$\\Windows\\\\\",\n-        r\"\\\\smbserver\\share\\path\\\\\",\n-        r\"..\\\\?\\C:\\Windows\\System32\\\\\",\n-        r\"C:/Windows/../Windows/System32/\",\n-        r\"C:\\Windows\\..\\Windows\\System32\\\\\",\n-        r\"../../../../../../../../../../../../Windows/System32\",\n-        r\"../../../../../../../../../../../../etc/passwd\",\n-        r\"../../../../../../../../../../../../var/www/html/index.html\",\n-        r\"../../../../../../../../../../../../usr/local/etc/openvpn/server.conf\",\n-        r\"../../../../../../../../../../../../Program Files (x86)\",\n-        r\"/../../../../../../../../../../../../Windows/System32\",\n-        r\"/Windows\\../etc/passwd\",\n-        r\"/Windows\\..\\Windows\\System32\\\\\",\n-        r\"/Windows\\..\\Windows\\System32\\cmd.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\msconfig.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\regedit.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\taskmgr.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\control.exe\",\n-        r\"/Windows\\..\\Windows\\System32\\services.msc\",\n-        r\"/Windows\\..\\Windows\\System32\\diskmgmt.msc\",\n-        r\"/Windows\\..\\Windows\\System32\\eventvwr.msc\",\n-        r\"/Windows/System32/drivers/etc/hosts\",\n-    ],\n-)\n-def test_validate_path_is_safe_windows_bad(path):\n-    with pytest.raises(MlflowException, match=\"Invalid path\"):\n-        validate_path_is_safe(path)\n-\n-\n def test_path_validation(mlflow_client):\n     experiment_id = mlflow_client.create_experiment(\"tags validation\")\n     created_run = mlflow_client.create_run(experiment_id)\n@@ -670,7 +523,7 @@ def assert_response(resp):\n         assert resp.status_code == 400\n         assert response.json() == {\n             \"error_code\": \"INVALID_PARAMETER_VALUE\",\n-            \"message\": f\"Invalid path: {invalid_path}\",\n+            \"message\": \"Invalid path\",\n         }\n \n     response = requests.get("
        },
        {
            "filename": "tests/utils/test_uri.py",
            "diff": "@@ -24,6 +24,7 @@\n     is_valid_dbfs_uri,\n     remove_databricks_profile_info_from_artifact_uri,\n     resolve_uri_if_local,\n+    validate_path_is_safe,\n )\n \n \n@@ -722,3 +723,152 @@ def test_correctly_detect_fuse_and_uc_uris(uri):\n )\n def test_negative_detection(uri):\n     assert not is_fuse_or_uc_volumes_uri(uri)\n+\n+\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        \"path\",\n+        \"path/\",\n+        \"path/to/file\",\n+    ],\n+)\n+def test_validate_path_is_safe_good(path):\n+    validate_path_is_safe(path)\n+\n+\n+@pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        # relative path from current directory of C: drive\n+        \".../...//\",\n+    ],\n+)\n+def test_validate_path_is_safe_windows_good(path):\n+    validate_path_is_safe(path)\n+\n+\n+@pytest.mark.skipif(is_windows(), reason=\"This test does not pass on Windows\")\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        \"/path\",\n+        \"../path\",\n+        \"../../path\",\n+        \"./../path\",\n+        \"path/../to/file\",\n+        \"path/../../to/file\",\n+        \"file://a#/..//tmp\",\n+        \"file://a%23/..//tmp/\",\n+        \"/etc/passwd\",\n+        \"/etc/passwd%00.jpg\",\n+        \"/etc/passwd%00.html\",\n+        \"/etc/passwd%00.txt\",\n+        \"/etc/passwd%00.php\",\n+        \"/etc/passwd%00.asp\",\n+        \"/file://etc/passwd\",\n+        # Encoded paths with '..'\n+        \"%2E%2E%2Fpath\",\n+        \"%2E%2E%2F%2E%2E%2Fpath\",\n+    ],\n+)\n+def test_validate_path_is_safe_bad(path):\n+    with pytest.raises(MlflowException, match=\"Invalid path\"):\n+        validate_path_is_safe(path)\n+\n+\n+@pytest.mark.skipif(not is_windows(), reason=\"This test only passes on Windows\")\n+@pytest.mark.parametrize(\n+    \"path\",\n+    [\n+        r\"../path\",\n+        r\"../../path\",\n+        r\"./../path\",\n+        r\"path/../to/file\",\n+        r\"path/../../to/file\",\n+        r\"..\\path\",\n+        r\"..\\..\\path\",\n+        r\".\\..\\path\",\n+        r\"path\\..\\to\\file\",\n+        r\"path\\..\\..\\to\\file\",\n+        # Drive-relative paths\n+        r\"C:path\",\n+        r\"C:path/\",\n+        r\"C:path/to/file\",\n+        r\"C:../path/to/file\",\n+        r\"C:\\path\",\n+        r\"C:/path\",\n+        r\"C:\\path\\to\\file\",\n+        r\"C:\\path/to/file\",\n+        r\"C:\\path\\..\\to\\file\",\n+        r\"C:/path/../to/file\",\n+        # UNC(Universal Naming Convention) paths\n+        r\"\\\\path\\to\\file\",\n+        r\"\\\\path/to/file\",\n+        r\"\\\\.\\\\C:\\path\\to\\file\",\n+        r\"\\\\?\\C:\\path\\to\\file\",\n+        r\"\\\\?\\UNC/path/to/file\",\n+        # Other potential attackable paths\n+        r\"/etc/password\",\n+        r\"/path\",\n+        r\"/etc/passwd%00.jpg\",\n+        r\"/etc/passwd%00.html\",\n+        r\"/etc/passwd%00.txt\",\n+        r\"/etc/passwd%00.php\",\n+        r\"/etc/passwd%00.asp\",\n+        r\"/Windows/no/such/path\",\n+        r\"/file://etc/passwd\",\n+        r\"/file:c:/passwd\",\n+        r\"/file://d:/windows/win.ini\",\n+        r\"/file://./windows/win.ini\",\n+        r\"file://c:/boot.ini\",\n+        r\"file://C:path\",\n+        r\"file://C:path/\",\n+        r\"file://C:path/to/file\",\n+        r\"file:///C:/Windows/System32/\",\n+        r\"file:///etc/passwd\",\n+        r\"file:///d:/windows/repair/sam\",\n+        r\"file:///proc/version\",\n+        r\"file:///inetpub/wwwroot/global.asa\",\n+        r\"/file://../windows/win.ini\",\n+        r\"../etc/passwd\",\n+        r\"..\\Windows\\System32\\\\\",\n+        r\"C:\\Windows\\System32\\\\\",\n+        r\"/etc/passwd\",\n+        r\"::Windows\\System32\",\n+        r\"..\\..\\..\\..\\Windows\\System32\\\\\",\n+        r\"../Windows/System32\",\n+        r\"....\\\\\",\n+        r\"\\\\?\\C:\\Windows\\System32\\\\\",\n+        r\"\\\\.\\C:\\Windows\\System32\\\\\",\n+        r\"\\\\UNC\\Server\\Share\\\\\",\n+        r\"\\\\Server\\Share\\folder\\\\\",\n+        r\"\\\\127.0.0.1\\c$\\Windows\\\\\",\n+        r\"\\\\localhost\\c$\\Windows\\\\\",\n+        r\"\\\\smbserver\\share\\path\\\\\",\n+        r\"..\\\\?\\C:\\Windows\\System32\\\\\",\n+        r\"C:/Windows/../Windows/System32/\",\n+        r\"C:\\Windows\\..\\Windows\\System32\\\\\",\n+        r\"../../../../../../../../../../../../Windows/System32\",\n+        r\"../../../../../../../../../../../../etc/passwd\",\n+        r\"../../../../../../../../../../../../var/www/html/index.html\",\n+        r\"../../../../../../../../../../../../usr/local/etc/openvpn/server.conf\",\n+        r\"../../../../../../../../../../../../Program Files (x86)\",\n+        r\"/../../../../../../../../../../../../Windows/System32\",\n+        r\"/Windows\\../etc/passwd\",\n+        r\"/Windows\\..\\Windows\\System32\\\\\",\n+        r\"/Windows\\..\\Windows\\System32\\cmd.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\msconfig.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\regedit.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\taskmgr.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\control.exe\",\n+        r\"/Windows\\..\\Windows\\System32\\services.msc\",\n+        r\"/Windows\\..\\Windows\\System32\\diskmgmt.msc\",\n+        r\"/Windows\\..\\Windows\\System32\\eventvwr.msc\",\n+        r\"/Windows/System32/drivers/etc/hosts\",\n+    ],\n+)\n+def test_validate_path_is_safe_windows_bad(path):\n+    with pytest.raises(MlflowException, match=\"Invalid path\"):\n+        validate_path_is_safe(path)"
        }
    ],
    "commitTime": "2023-12-14 02:01:34"
}